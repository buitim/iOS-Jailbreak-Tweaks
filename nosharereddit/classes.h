//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct UIBezierPath {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct in_addr {
    unsigned int _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

#pragma mark -

//
// File: Reddit
// UUID: 580928CB-40F8-3197-ACBE-F2347094FD2B
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 10.2.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Frameworks
//

@protocol AFImageCache <NSObject>
- (UIImage *)imageWithIdentifier:(NSString *)arg1;
- (_Bool)removeAllImages;
- (_Bool)removeImageWithIdentifier:(NSString *)arg1;
- (void)addImage:(UIImage *)arg1 withIdentifier:(NSString *)arg2;
@end

@protocol AFImageRequestCache <AFImageCache>
- (UIImage *)imageforRequest:(NSURLRequest *)arg1 withAdditionalIdentifier:(NSString *)arg2;
- (_Bool)removeImageforRequest:(NSURLRequest *)arg1 withAdditionalIdentifier:(NSString *)arg2;
- (void)addImage:(UIImage *)arg1 forRequest:(NSURLRequest *)arg2 withAdditionalIdentifier:(NSString *)arg3;
@end

@protocol AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(long long)arg4 mimeType:(NSString *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol AFURLRequestSerialization <NSObject, NSSecureCoding, NSCopying>
- (NSURLRequest *)requestBySerializingRequest:(NSURLRequest *)arg1 withParameters:(id)arg2 error:(id *)arg3;
@end

@protocol AFURLResponseSerialization <NSObject, NSSecureCoding, NSCopying>
- (id)responseObjectForResponse:(NSURLResponse *)arg1 data:(NSData *)arg2 error:(id *)arg3;
@end

@protocol ANSMetadataSerializable <NSObject>
- (NSDictionary *)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (NSString *)eventName;
@end

@protocol ANSUploaderDelegate <NSObject>
- (void)uploader:(ANSUploader *)arg1 completedRequest:(NSURLRequest *)arg2 withResponse:(NSURLResponse *)arg3 uniqueName:(NSString *)arg4 error:(NSError *)arg5 completionHandler:(void (^)(_Bool, NSError *))arg6;
- (void)uploader:(ANSUploader *)arg1 didFinishUploadWithUniqueName:(NSString *)arg2 error:(NSError *)arg3;
- (NSString *)uploader:(ANSUploader *)arg1 filePathForUniqueName:(NSString *)arg2;

@optional
- (void)uploader:(ANSUploader *)arg1 session:(NSURLSession *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
@end

@protocol ActionSheetViewControllerDelegate <NSObject>

@optional
- (void)actionSheetViewController:(ActionSheetViewController *)arg1 didGetDismissedFromOutside:(_Bool)arg2;
- (void)actionSheetViewController:(ActionSheetViewController *)arg1 didSelectItem:(BaseActionSheetItem *)arg2;
@end

@protocol AppRatingToastViewDelegate <NSObject>
- (void)appRatingToastViewDidTapOutside:(AppRatingToastView *)arg1;
@end

@protocol AttributedLabelDelegate <NSObject>
- (void)attributedLabel:(AttributedLabel *)arg1 didSelectLinkWithURL:(NSURL *)arg2;

@optional
- (void)attributedLabel:(AttributedLabel *)arg1 didSelectCaptionedLinkWithURL:(NSURL *)arg2 caption:(NSString *)arg3 range:(struct _NSRange)arg4;
- (void)attributedLabelDidChangeSelection:(AttributedLabel *)arg1;
@end

@protocol AttributedLabelRegularDelegate <NSObject>
- (void)attributedLabelRegular:(AttributedLabelRegular *)arg1 didSelectLinkWithURL:(NSURL *)arg2;

@optional
- (void)attributedLabelRegular:(AttributedLabelRegular *)arg1 didSelectCaptionedLinkWithURL:(NSURL *)arg2 caption:(NSString *)arg3 range:(struct _NSRange)arg4;
@end

@protocol AttributedLabelTableViewDelegate <NSObject>
- (void)attributedLabelTableView:(AttributedLabelTableView *)arg1 didSelectLinkWithURL:(NSURL *)arg2;
@end

@protocol AuthenticationViewControllerDelegate <NSObject>
- (void)authenticationViewController:(AuthenticationViewController *)arg1 didLoginUser:(User *)arg2 fromSignup:(_Bool)arg3;
@end

@protocol BaseModelObserver <NSObject>

@optional
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(NSString *)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)updateContentViewsForData:(id)arg1;
@end

@protocol BaseTextViewDelegate <NSObject>

@optional
- (void)textView:(BaseTextView *)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (_Bool)textViewShouldChangeSize:(BaseTextView *)arg1;
@end

@protocol BranchDeepLinkingControllerCompletionDelegate <NSObject>
- (void)deepLinkingControllerCompleted;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CLSBetaControllerDelegate <NSObject>
- (CLSSettings *)settingsForBetaController:(CLSBetaController *)arg1;
- (NSString *)APIKeyForBetaController:(CLSBetaController *)arg1;
@end

@protocol CLSCrashReport <NSObject>
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
@property(readonly, copy, nonatomic) NSDate *crashedOnDate;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *identifier;
@end

@protocol CLSCrashReportingControllerDelegate <NSObject>
- (CLSSettings *)settingsForCrashReportingController:(CLSCrashReportingController *)arg1;
- (_Bool)isFirstInstallForCrashReportingController:(CLSCrashReportingController *)arg1;
- (NSString *)installIDForCrashReportingController:(CLSCrashReportingController *)arg1;
- (NSString *)APIKeyForCrashReportingController:(CLSCrashReportingController *)arg1;
- (_Bool)reportingController:(CLSCrashReportingController *)arg1 ensureDeliveryOfUnixSignal:(int)arg2;
- (void)reportingController:(CLSCrashReportingController *)arg1 internalDidDetectReportForLastExecution:(CLSInternalReport *)arg2;
- (void)reportingController:(CLSCrashReportingController *)arg1 didDetectReportForLastExecution:(CLSInternalReport *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (_Bool)reportingControllerMustInformDelegateOfReports:(CLSCrashReportingController *)arg1;
- (_Bool)reportingControllerCanUseBackgroundSessions:(CLSCrashReportingController *)arg1;
- (void)detectedCrash;
- (_Bool)shouldInstallCrashCallback;
@end

@protocol CLSNetworkClientDelegate <NSObject>
- (_Bool)networkClientCanUseBackgroundSessions:(CLSNetworkClient *)arg1;

@optional
- (void)networkClient:(CLSNetworkClient *)arg1 didFinishUploadWithPath:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol CLSReportsControllerDelegate <NSObject>
- (NSString *)bundleIdentifierForReportsController:(CLSReportsController *)arg1;
- (NSString *)APIKeyForReportsController:(CLSReportsController *)arg1;
- (CLSSettings *)settingsForReportsController:(CLSReportsController *)arg1;
- (void)reportsControllerDidCompleteAllSubmissions:(CLSReportsController *)arg1;
- (void)reportsController:(CLSReportsController *)arg1 didCompletePackageSubmission:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol CLSURLSessionDataDelegate <CLSURLSessionTaskDelegate>
- (void)task:(CLSURLSessionDataTask *)arg1 didReceiveData:(NSData *)arg2;
- (void)task:(CLSURLSessionDataTask *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
@end

@protocol CLSURLSessionDownloadDelegate <CLSURLSessionDataDelegate>
- (void)downloadTask:(CLSURLSessionDownloadTask *)arg1 didFinishDownloadingToURL:(NSURL *)arg2;
@end

@protocol CLSURLSessionTaskDelegate <NSObject>
- (void)task:(CLSURLSessionTask *)arg1 didCompleteWithError:(NSError *)arg2;
- (NSURLRequest *)task:(CLSURLSessionTask *)arg1 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg2 newRequest:(NSURLRequest *)arg3;
@end

@protocol CarouselItemViewDelegate <NSObject>
- (void)carouselItemViewDidTap:(CarouselItemView *)arg1;
@end

@protocol CarouselViewDelegate <NSObject>
- (void)carouselView:(CarouselView *)arg1 didTapItem:(CarouselItemView *)arg2;
@end

@protocol CommentActionSheetDelegate <NSObject>
- (void)commentActionSheetViewControllerCollapseToRoot:(CommentActionSheetViewController *)arg1;
- (void)commentActionSheetViewControllerDidReplyToComment:(CommentActionSheetViewController *)arg1;
- (void)commentActionSheetViewControllerDidDeletePost:(CommentActionSheetViewController *)arg1;
- (void)commentActionSheetViewControllerDidDeleteComment:(CommentActionSheetViewController *)arg1;
@end

@protocol CommentCommandViewDelegate <NSObject>
- (void)commentCommandViewDidTapOverflow:(CommentCommandView *)arg1;
- (void)commentCommandViewDidTapDownvote:(CommentCommandView *)arg1;
- (void)commentCommandViewDidTapUpvote:(CommentCommandView *)arg1;
- (void)commentCommandViewDidTapReply:(CommentCommandView *)arg1;
- (void)commentCommandViewDidTapEdit:(CommentCommandView *)arg1;
- (_Bool)commentCommandViewShouldShowReplyButton:(CommentCommandView *)arg1;
@end

@protocol CommentComposeKeyboardAccessoryViewDelegate <NSObject>
- (void)commentComposeKeyboardAccessoryViewDidSelectCamera:(CommentComposeKeyboardAccessoryView *)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectPhotos:(CommentComposeKeyboardAccessoryView *)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectLink:(CommentComposeKeyboardAccessoryView *)arg1;
@end

@protocol CommentComposeViewControllerDelegate <NSObject>
- (void)commentComposeViewController:(CommentComposeViewController *)arg1 didFinishWithSuccess:(_Bool)arg2 editedItem:(id)arg3;
- (void)commentComposeViewController:(CommentComposeViewController *)arg1 didFinishWithSuccess:(_Bool)arg2 newItem:(id)arg3;
@end

@protocol CommentHeaderViewDelegate <NSObject>
- (void)commentHeaderView:(CommentHeaderView *)arg1 didTapLinkURL:(NSURL *)arg2;
- (void)commentHeaderViewDidTap:(CommentHeaderView *)arg1;
@end

@protocol CommentImagesViewDelegate <NSObject>
- (void)commentImagesView:(CommentImagesView *)arg1 didTapURL:(NSString *)arg2;
- (void)commentImagesView:(CommentImagesView *)arg1 didTapImage:(ContentImageView *)arg2;
@end

@protocol CommentLoadModeViewDelegate <NSObject>
- (void)commentLoadMoreViewDidTap:(CommentLoadMoreView *)arg1;
@end

@protocol CommentReplyViewControllerDelegate <NSObject>
- (void)commentReplyViewController:(CommentReplyViewController *)arg1 didFinishWithSuccess:(_Bool)arg2 newComment:(Comment *)arg3;
@end

@protocol CommentTextViewDelegate <NSObject>
- (void)commentTextViewDidChangeSelection:(CommentTextView *)arg1;
- (void)commentTextViewDidWantToCollapse:(CommentTextView *)arg1;
- (void)commentTextView:(CommentTextView *)arg1 didTapLinkURL:(NSURL *)arg2;

@optional
- (void)commentTextViewDidDoubleTapText:(CommentTextView *)arg1;
- (void)commentTextView:(CommentTextView *)arg1 didTapCaptionedLinkWithURL:(NSURL *)arg2 caption:(NSString *)arg3 range:(struct _NSRange)arg4;
@end

@protocol CommentsFooterBarViewDelegate <NSObject>
- (void)commentsFooterBarViewDidTapButton:(CommentsFooterBarView *)arg1;
@end

@protocol CommentsHeaderViewDelegate <NSObject>

@optional
- (void)commentsHeaderViewDidPullToRefresh:(CommentsHeaderView *)arg1;
- (void)commentsHeaderView:(CommentsHeaderView *)arg1 didTapImageView:(BaseImageView *)arg2;
@end

@protocol CommunityViewDataSourceDelegate <NSObject>
- (void)communityViewDataSourceDidUpdate:(CommunityViewDataSource *)arg1;

@optional
- (void)communityViewDataSourceGestureDidCancel:(CommunityViewDataSource *)arg1 withCell:(BaseTableViewCell *)arg2;
- (void)communityViewDataSourceGestureDidEnd:(CommunityViewDataSource *)arg1 withCell:(BaseTableViewCell *)arg2;
- (void)communityViewDataSourceGestureDidBegin:(CommunityViewDataSource *)arg1 withCell:(BaseTableViewCell *)arg2;
@end

@protocol ComposeMessageViewControllerDelegate <NSObject>
- (void)composeMessageViewController:(ComposeMessageViewController *)arg1 didFinishWithSuccess:(_Bool)arg2;
@end

@protocol ContentImageViewDelegate <NSObject>
- (void)contentImageViewDidTapImage:(ContentImageView *)arg1;

@optional
- (void)contentImageViewDidFinishLoadingImage:(ContentImageView *)arg1 error:(NSError *)arg2;
@end

@protocol FABDownloadAndSaveSettingsOperationDelegate <NSObject>
- (void)operation:(FABDownloadAndSaveSettingsOperation *)arg1 didDownloadAndSaveSettingsWithError:(NSError *)arg2;
@end

@protocol FABKit <NSObject>
+ (NSString *)kitDisplayVersion;
+ (NSString *)bundleIdentifier;

@optional
+ (void)initializeIfNeeded;
+ (NSString *)kitBuildVersion;
@end

@protocol FABOnboardingOperationDelegate <NSObject>
- (void)onboardingOperation:(FABOnboardingOperation *)arg1 didCompleteAppCreationWithError:(NSError *)arg2;
- (void)onboardingOperation:(FABOnboardingOperation *)arg1 didCompleteAppUpdateWithError:(NSError *)arg2;
@end

@protocol FeedPostCommentBarViewDelegate <NSObject>

@optional
- (_Bool)commentBarViewShouldUseDetailViewHeight:(FeedPostCommentsBarView *)arg1;
- (_Bool)commentBarViewShouldShowBottomLine:(FeedPostCommentsBarView *)arg1;
- (void)commentBarViewDidTapShare:(FeedPostCommentsBarView *)arg1;
- (void)commentBarViewDidTapComment:(FeedPostCommentsBarView *)arg1;
- (void)commentBarViewDidTapDownvote:(FeedPostCommentsBarView *)arg1;
- (void)commentBarViewDidTapUpvote:(FeedPostCommentsBarView *)arg1;
@end

@protocol FeedPostImageViewDelegate <NSObject>
- (_Bool)feedPostImageViewShouldAlwaysShowImage:(FeedPostImageView *)arg1;
- (_Bool)feedPostImageViewShouldBlurNsfwImages:(FeedPostImageView *)arg1;
- (void)feedPostImageViewDidTap:(FeedPostImageView *)arg1;
@end

@protocol FeedPostSelfTextViewDelegate <NSObject>
- (void)feedPostSelfTextView:(FeedPostSelfTextView *)arg1 didTapLinkURL:(NSURL *)arg2;
@end

@protocol FeedPostTextViewDelegate <NSObject>
- (_Bool)feedPostTextViewShouldBlurSpoilers:(FeedPostTextView *)arg1;
- (_Bool)feedPostTextViewShouldBlurNsfwImages:(FeedPostTextView *)arg1;
- (_Bool)feedPostTextViewShouldHideThumbnail:(FeedPostTextView *)arg1;
- (void)feedPostTextView:(FeedPostTextView *)arg1 didTapImage:(ContentImageView *)arg2;
- (_Bool)feedPostTextViewShouldShowSelfText:(FeedPostTextView *)arg1;
- (_Bool)feedPostTextViewShouldShowFlair:(FeedPostTextView *)arg1;
- (void)feedPostTextView:(FeedPostTextView *)arg1 didTapLinkURL:(NSURL *)arg2;
- (void)feedPostTextViewDidTapText:(FeedPostTextView *)arg1;

@optional
- (_Bool)feedPostTextViewShouldConfigureForCommentsView:(FeedPostTextView *)arg1;
- (_Bool)feedPostTextViewShouldDimText:(FeedPostTextView *)arg1;
@end

@protocol FeedPostTitleViewDelegate <NSObject>
- (_Bool)feedPostTitleViewShouldHideGilding:(FeedPostTitleView *)arg1;
- (_Bool)feedPostTitleViewShouldHideUsername:(FeedPostTitleView *)arg1;
- (_Bool)feedPostTitleViewShouldHideSubredditName:(FeedPostTitleView *)arg1;
- (void)feedPostTitleView:(FeedPostTitleView *)arg1 didTapOverflowWithPost:(Post *)arg2;
- (void)feedPostTitleView:(FeedPostTitleView *)arg1 didTapLinkURL:(NSURL *)arg2;

@optional
- (_Bool)feedPostTitleViewShouldConfigureForCommentsView:(FeedPostTitleView *)arg1;
@end

@protocol FeedPostVideoViewDelegate <NSObject>
- (_Bool)feedPostVideoViewShouldBlurNsfwPreviewImage:(FeedPostVideoView *)arg1;
- (void)feedPostVideoViewDidTap:(FeedPostVideoView *)arg1;
@end

@protocol FeedPostWebLinkViewDelegate <NSObject>
- (void)feedPostWebLinkViewDidTapLink:(FeedPostWebLinkView *)arg1;
@end

@protocol FeedPostYouTubeEmbeddedViewDelegate <NSObject>
- (_Bool)feedPostYouTubeEmbeddedViewShouldHideNsfw:(FeedPostYouTubeEmbeddedView *)arg1;
- (void)feedPostYouTubeEmbeddedView:(FeedPostYouTubeEmbeddedView *)arg1 handleURL:(NSURL *)arg2;
- (void)feedPostYouTubeEmbeddedViewDidTap:(FeedPostYouTubeEmbeddedView *)arg1;

@optional
- (_Bool)feedPostYouTubeEmbeddedViewShouldAlwaysShowVideo:(FeedPostYouTubeEmbeddedView *)arg1;
@end

@protocol FeedWebViewControllerDelegate <NSObject>
- (void)feedWebViewController:(FeedWebViewController *)arg1 didTapCommentsForPost:(Post *)arg2;
@end

@protocol FloatingHeaderCallbackProtocol <NSObject>
- (void)floatingHeaderShouldMove:(FloatingHeaderManager *)arg1;
@end

@protocol ForgotPasswordViewControllerDelegate <NSObject>

@optional
- (void)forgotPassswordViewControllerDidFinish:(ForgotPasswordViewController *)arg1;
@end

@protocol HeaderBarViewDelegate <NSObject>
- (void)headerBarViewDidTapRightButton:(HeaderBarView *)arg1;
- (void)headerBarViewDidTapLeftButton:(HeaderBarView *)arg1;
@end

@protocol IntroViewControllerDelegate <NSObject>
- (void)introViewControllerDidFinish:(IntroViewController *)arg1 shouldShowOnboarding:(_Bool)arg2;
@end

@protocol LabeledStepSliderDelegate <NSObject>
- (void)labeledStepSlider:(LabeledStepSlider *)arg1 didChangeStepItem:(StepSliderItem *)arg2;
@end

@protocol LightboxViewDelegate <NSObject>
- (void)lightboxViewDidSwipeDown:(LightboxView *)arg1;
- (void)lightboxViewDidLongPress:(LightboxView *)arg1;
@end

@protocol LinkViewControllerDelegate <NSObject>
- (void)linkViewControllerDidTapInsert:(LinkViewController *)arg1;
@end

@protocol ListingNetworkSourceDelegate <NSObject>
- (void)listingNetworkSourceDidFail:(ListingNetworkSource *)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(ListingNetworkSource *)arg1;
- (void)listingNetworkSourceDidFetchData:(ListingNetworkSource *)arg1;

@optional
- (long long)listingNetworkSourceFeedAdTypeAllowed:(ListingNetworkSource *)arg1;
- (_Bool)listingNetworkSourceShouldFilterObject:(id)arg1;
- (void)listingNetworkSourceDidStartFetching:(ListingNetworkSource *)arg1;
- (void)listingNetworkSourceDidParseNewData:(ListingNetworkSource *)arg1;
@end

@protocol ListingViewBatchUpdateProtocol <NSObject>
@property(nonatomic) _Bool isUpdateQueueBusy;
@property(copy, nonatomic) NSMutableArray *currentUpdateQueue;
- (void)reloadDataSafelyWithObjects:(NSArray *)arg1;
- (void)reloadDataSafely;
- (void)markQueueAsFreeAndTriggerNextUpdate;
- (void)queueNewObjects:(NSArray *)arg1 completion:(void (^)(void))arg2;
@end

@protocol LiveBannerContentViewDelegate <NSObject>
- (void)liveBannerContentViewDidTap:(LiveBannerContentView *)arg1;
@end

@protocol LiveHandlerDelegate <NSObject>

@optional
- (void)liveHandler:(LiveHandler *)arg1 didReceiveNewComment:(Comment *)arg2;
- (void)liveHandler:(LiveHandler *)arg1 didStrikeUpdateWithPK:(NSString *)arg2;
- (void)liveHandler:(LiveHandler *)arg1 didDeleteUpdateWithPK:(NSString *)arg2;
- (void)liveHandler:(LiveHandler *)arg1 didReceiveUpdate:(LiveUpdate *)arg2;
- (void)liveHandler:(LiveHandler *)arg1 didReceiveEmbeds:(NSArray *)arg2 withRenderedEmbeds:(NSArray *)arg3 forPK:(NSString *)arg4;
- (void)liveHandlerDidConnect:(LiveHandler *)arg1;
- (void)liveHandlerDidLoseConnection:(LiveHandler *)arg1;
@end

@protocol LiveNetworkSourceDelegate <NSObject>
- (void)liveNetworkSource:(LiveNetworkSource *)arg1 didParseEmbedForUpdate:(LiveUpdate *)arg2;
@end

@protocol LiveUpdateContentViewDelegate <NSObject>
- (void)liveUpdateContentView:(LiveUpdateContentView *)arg1 didRequestLightboxWithVideoURL:(NSURL *)arg2;
- (void)liveUpdateContentView:(LiveUpdateContentView *)arg1 didRequestLightboxWithImage:(UIImage *)arg2 withURL:(NSURL *)arg3;
- (void)liveUpdateContentView:(LiveUpdateContentView *)arg1 didTapLinkWithURLString:(NSString *)arg2;
@end

@protocol LiveUpdateEmbedViewDelegate <NSObject>
- (void)liveUpdateEmbedView:(LiveUpdateEmbedView *)arg1 didTapVideoWithURL:(NSURL *)arg2;
- (void)liveUpdateEmbedView:(LiveUpdateEmbedView *)arg1 didTapImage:(UIImage *)arg2 withURL:(NSURL *)arg3;
- (void)liveUpdateEmbedView:(LiveUpdateEmbedView *)arg1 didTapLinkWithURLString:(NSString *)arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(long long)arg2 error:(NSError *)arg3;
@end

@protocol MOPUBAVPlayerDelegate <NSObject>
- (void)avPlayerDidStall:(MOPUBAVPlayer *)arg1;
- (void)avPlayerDidRecoverFromStall:(MOPUBAVPlayer *)arg1;
- (void)avPlayerDidFinishPlayback:(MOPUBAVPlayer *)arg1;
- (void)avPlayer:(MOPUBAVPlayer *)arg1 playbackTimeDidProgress:(double)arg2;
- (void)avPlayer:(MOPUBAVPlayer *)arg1 didError:(NSError *)arg2 withMessage:(NSString *)arg3;
@end

@protocol MOPUBFullscreenPlayerViewControllerDelegate <NSObject>
- (void)fullscreenPlayerWillLeaveApplication:(MOPUBFullscreenPlayerViewController *)arg1;
- (void)ctaTapped:(MOPUBFullscreenPlayerViewController *)arg1;
- (void)playerDidProgressToTime:(double)arg1;
@end

@protocol MOPUBPlayerViewControllerDelegate <NSObject>

@optional
- (UIViewController *)viewControllerForPresentingModalView;
- (void)playerViewController:(MOPUBPlayerViewController *)arg1 didRecoverFromStall:(MOPUBAVPlayer *)arg2;
- (void)playerViewController:(MOPUBPlayerViewController *)arg1 didStall:(MOPUBAVPlayer *)arg2;
- (void)playerViewController:(MOPUBPlayerViewController *)arg1 willShowReplayView:(MOPUBPlayerView *)arg2;
- (void)playerViewController:(MOPUBPlayerViewController *)arg1 didTapReplayButton:(MOPUBPlayerView *)arg2;
- (void)playerDidProgressToTime:(double)arg1;
- (void)playerPlaybackDidStart:(MOPUBPlayerViewController *)arg1;
- (void)playerPlaybackWillStart:(MOPUBPlayerViewController *)arg1;
- (void)willEnterFullscreen:(MOPUBPlayerViewController *)arg1;
@end

@protocol MOPUBPlayerViewDelegate <NSObject>
- (void)playerViewWillEnterFullscreen:(MOPUBPlayerView *)arg1;
- (void)playerViewWillShowReplayView:(MOPUBPlayerView *)arg1;
- (void)playerViewDidTapReplayButton:(MOPUBPlayerView *)arg1;
@end

@protocol MPActivityViewControllerHelperDelegate <NSObject>
- (UIViewController *)viewControllerForPresentingActivityViewController;

@optional
- (void)activityViewControllerDidDismiss;
- (void)activityViewControllerWillPresent;
@end

@protocol MPAdAlertManagerProtocol <NSObject>
@property(nonatomic) __weak id delegate;
@property(nonatomic) __weak UIView *targetAdView;
@property(copy, nonatomic) CLLocation *location;
@property(copy, nonatomic) NSString *adUnitId;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration;
- (void)processAdAlertOnce;
- (void)endMonitoringAlerts;
- (void)beginMonitoringAlerts;
@end

@protocol MPAdBrowserControllerDelegate <NSObject>
- (void)dismissBrowserController:(MPAdBrowserController *)arg1 animated:(_Bool)arg2;

@optional
- (MPAdConfiguration *)adConfiguration;
@end

@protocol MPAdDestinationDisplayAgentDelegate <NSObject>
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (UIViewController *)viewControllerForPresentingModalView;

@optional
- (MPAdConfiguration *)adConfiguration;
@end

@protocol MPAdServerCommunicatorDelegate <NSObject>
- (void)communicatorDidFailWithError:(NSError *)arg1;
- (void)communicatorDidReceiveAdConfiguration:(MPAdConfiguration *)arg1;
@end

@protocol MPAdWebViewAgentDelegate <NSObject>
- (void)adActionDidFinish:(MPWebView *)arg1;
- (void)adActionWillLeaveApplication:(MPWebView *)arg1;
- (void)adActionWillBegin:(MPWebView *)arg1;
- (void)adDidFailToLoadAd:(MPWebView *)arg1;
- (void)adDidFinishLoadingAd:(MPWebView *)arg1;
- (void)adDidClose:(MPWebView *)arg1;
- (UIViewController *)viewControllerForPresentingModalView;
- (CLLocation *)location;
- (NSString *)adUnitId;
@end

@protocol MPBannerAdManagerDelegate <NSObject>
- (void)userWillLeaveApplication;
- (void)userActionDidFinish;
- (void)userActionWillBegin;
- (void)managerDidFailToLoadAd;
- (void)managerDidLoadAd:(UIView *)arg1;
- (void)invalidateContentView;
- (UIViewController *)viewControllerForPresentingModalView;
- (_Bool)isTesting;
- (CLLocation *)location;
- (NSString *)keywords;
- (struct CGSize)containerSize;
- (id <MPAdViewDelegate>)bannerDelegate;
- (MPAdView *)banner;
- (int)allowedNativeAdsOrientation;
- (NSString *)adUnitId;
@end

@protocol MPBannerAdapterDelegate
- (void)userWillLeaveApplicationFromAdapter:(MPBaseBannerAdapter *)arg1;
- (void)userActionDidFinishForAdapter:(MPBaseBannerAdapter *)arg1;
- (void)userActionWillBeginForAdapter:(MPBaseBannerAdapter *)arg1;
- (void)adapter:(MPBaseBannerAdapter *)arg1 didFinishLoadingAd:(UIView *)arg2;
- (void)adapter:(MPBaseBannerAdapter *)arg1 didFailToLoadAdWithError:(NSError *)arg2;
- (CLLocation *)location;
- (int)allowedNativeAdsOrientation;
- (UIViewController *)viewControllerForPresentingModalView;
- (id <MPAdViewDelegate>)bannerDelegate;
- (MPAdView *)banner;
@end

@protocol MPBannerCustomEventDelegate <NSObject>
- (void)trackClick;
- (void)trackImpression;
- (void)bannerCustomEventWillLeaveApplication:(MPBannerCustomEvent *)arg1;
- (void)bannerCustomEventDidFinishAction:(MPBannerCustomEvent *)arg1;
- (void)bannerCustomEventWillBeginAction:(MPBannerCustomEvent *)arg1;
- (void)bannerCustomEvent:(MPBannerCustomEvent *)arg1 didFailToLoadAdWithError:(NSError *)arg2;
- (void)bannerCustomEvent:(MPBannerCustomEvent *)arg1 didLoadAd:(UIView *)arg2;
- (CLLocation *)location;
- (UIViewController *)viewControllerForPresentingModalView;
@end

@protocol MPClosableViewDelegate <NSObject>
- (void)closeButtonPressed:(MPClosableView *)arg1;

@optional
- (void)closableView:(MPClosableView *)arg1 didMoveToWindow:(UIWindow *)arg2;
@end

@protocol MPForceableOrientationProtocol <NSObject>
- (void)setSupportedOrientationMask:(unsigned long long)arg1;
@end

@protocol MPInterstitialAdManagerDelegate <NSObject>
- (void)managerDidReceiveTapEventFromInterstitial:(MPInterstitialAdManager *)arg1;
- (void)managerDidExpireInterstitial:(MPInterstitialAdManager *)arg1;
- (void)managerDidDismissInterstitial:(MPInterstitialAdManager *)arg1;
- (void)managerWillDismissInterstitial:(MPInterstitialAdManager *)arg1;
- (void)managerDidPresentInterstitial:(MPInterstitialAdManager *)arg1;
- (void)managerWillPresentInterstitial:(MPInterstitialAdManager *)arg1;
- (void)manager:(MPInterstitialAdManager *)arg1 didFailToLoadInterstitialWithError:(NSError *)arg2;
- (void)managerDidLoadInterstitial:(MPInterstitialAdManager *)arg1;
- (id)interstitialDelegate;
- (CLLocation *)location;
- (MPInterstitialAdController *)interstitialAdController;
@end

@protocol MPInterstitialAdapterDelegate
- (void)interstitialWillLeaveApplicationForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialDidReceiveTapEventForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialDidExpireForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialDidDisappearForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialWillDisappearForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialDidAppearForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)interstitialWillAppearForAdapter:(MPBaseInterstitialAdapter *)arg1;
- (void)adapter:(MPBaseInterstitialAdapter *)arg1 didFailToLoadAdWithError:(NSError *)arg2;
- (void)adapterDidFinishLoadingAd:(MPBaseInterstitialAdapter *)arg1;
- (CLLocation *)location;
- (id)interstitialDelegate;
- (MPInterstitialAdController *)interstitialAdController;
@end

@protocol MPInterstitialCustomEventDelegate <NSObject>
- (void)trackClick;
- (void)trackImpression;
- (void)interstitialCustomEventWillLeaveApplication:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventDidReceiveTapEvent:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventDidDisappear:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventWillDisappear:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventDidAppear:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventWillAppear:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEventDidExpire:(MPInterstitialCustomEvent *)arg1;
- (void)interstitialCustomEvent:(MPInterstitialCustomEvent *)arg1 didFailToLoadAdWithError:(NSError *)arg2;
- (void)interstitialCustomEvent:(MPInterstitialCustomEvent *)arg1 didLoadAd:(id)arg2;
- (CLLocation *)location;
@end

@protocol MPInterstitialViewControllerDelegate <NSObject>
- (void)interstitialWillLeaveApplication:(MPInterstitialViewController *)arg1;
- (void)interstitialDidReceiveTapEvent:(MPInterstitialViewController *)arg1;
- (void)interstitialDidDisappear:(MPInterstitialViewController *)arg1;
- (void)interstitialWillDisappear:(MPInterstitialViewController *)arg1;
- (void)interstitialDidAppear:(MPInterstitialViewController *)arg1;
- (void)interstitialWillAppear:(MPInterstitialViewController *)arg1;
- (void)interstitialDidFailToLoadAd:(MPInterstitialViewController *)arg1;
- (void)interstitialDidLoadAd:(MPInterstitialViewController *)arg1;
- (NSString *)adUnitId;

@optional
- (void)interstitialRewardedVideoEnded;
- (CLLocation *)location;
@end

@protocol MPKeywordProvider <NSObject>
+ (NSString *)keyword;
@end

@protocol MPLogger <NSObject>
- (void)logMessage:(NSString *)arg1;
- (int)logLevel;
@end

@protocol MPNativeAdAdapter <NSObject>
@property(readonly, nonatomic) NSURL *defaultActionURL;
@property(readonly, nonatomic) NSDictionary *properties;

@optional
@property(nonatomic) __weak id <MPNativeAdAdapterDelegate> delegate;
- (UIView *)mainMediaView;
- (UIView *)privacyInformationIconView;
- (void)displayContentForDAAIconTap;
- (void)willAttachToView:(UIView *)arg1;
- (void)trackClick;
- (_Bool)enableThirdPartyClickTracking;
- (void)displayContentForURL:(NSURL *)arg1 rootViewController:(UIViewController *)arg2;
@end

@protocol MPNativeAdAdapterDelegate <NSObject>
- (void)nativeAdWillLeaveApplicationFromAdapter:(id <MPNativeAdAdapter>)arg1;
- (void)nativeAdDidDismissModalForAdapter:(id <MPNativeAdAdapter>)arg1;
- (void)nativeAdWillPresentModalForAdapter:(id <MPNativeAdAdapter>)arg1;
- (UIViewController *)viewControllerForPresentingModalView;

@optional
- (void)nativeAdDidClick:(id <MPNativeAdAdapter>)arg1;
- (void)nativeAdWillLogImpression:(id <MPNativeAdAdapter>)arg1;
@end

@protocol MPNativeAdDelegate <NSObject>
- (UIViewController *)viewControllerForPresentingModalView;

@optional
- (void)willLeaveApplicationFromNativeAd:(MPNativeAd *)arg1;
- (void)didDismissModalForNativeAd:(MPNativeAd *)arg1;
- (void)willPresentModalForNativeAd:(MPNativeAd *)arg1;
@end

@protocol MPNativeAdRenderer <NSObject>
+ (MPNativeAdRendererConfiguration *)rendererConfigurationWithRendererSettings:(id <MPNativeAdRendererSettings>)arg1;
- (UIView *)retrieveViewWithAdapter:(id <MPNativeAdAdapter>)arg1 error:(id *)arg2;
- (id)initWithRendererSettings:(id <MPNativeAdRendererSettings>)arg1;

@optional
@property(readonly, nonatomic) CDUnknownBlockType viewSizeHandler;
- (void)nativeAdTapped;
- (void)adViewWillMoveToSuperview:(UIView *)arg1;
@end

@protocol MPNativeAdRendererImageHandlerDelegate <NSObject>
- (_Bool)nativeAdViewInViewHierarchy;
@end

@protocol MPNativeAdRendererSettings <NSObject>

@optional
@property(copy, nonatomic) CDUnknownBlockType viewSizeHandler;
@end

@protocol MPNativeAdRendering <NSObject>

@optional
+ (UINib *)nibForAd;
- (void)layoutCustomAssetsWithProperties:(NSDictionary *)arg1 imageLoader:(MPNativeAdRenderingImageLoader *)arg2;
- (void)layoutStarRating:(NSNumber *)arg1;
- (UIImageView *)nativePrivacyInformationIconImageView;
- (UILabel *)nativeCallToActionTextLabel;
- (UIView *)nativeVideoView;
- (UIImageView *)nativeMainImageView;
- (UIImageView *)nativeIconImageView;
- (UILabel *)nativeTitleTextLabel;
- (UILabel *)nativeMainTextLabel;
@end

@protocol MPNativeAdSourceDelegate <NSObject>
- (void)adSourceDidFinishRequest:(MPNativeAdSource *)arg1;
@end

@protocol MPNativeAdSourceQueueDelegate <NSObject>
- (void)adSourceQueueAdIsAvailable:(MPNativeAdSourceQueue *)arg1;
@end

@protocol MPNativeCustomEventDelegate <NSObject>
- (void)nativeCustomEvent:(MPNativeCustomEvent *)arg1 didFailToLoadAdWithError:(NSError *)arg2;
- (void)nativeCustomEvent:(MPNativeCustomEvent *)arg1 didLoadAd:(MPNativeAd *)arg2;
@end

@protocol MPNativeViewDelegate <NSObject>
- (void)nativeViewWillMoveToSuperview:(UIView *)arg1;
@end

@protocol MPObjectMapper <NSObject>
- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;
@end

@protocol MPPrivateBannerCustomEventDelegate <MPBannerCustomEventDelegate>
- (id)bannerDelegate;
- (MPAdConfiguration *)configuration;
- (NSString *)adUnitId;
@end

@protocol MPPrivateInterstitialCustomEventDelegate <MPInterstitialCustomEventDelegate>
- (id)interstitialDelegate;
- (MPAdConfiguration *)configuration;
- (NSString *)adUnitId;
@end

@protocol MPPrivateRewardedVideoCustomEventDelegate <MPRewardedVideoCustomEventDelegate>
- (MPAdConfiguration *)configuration;
- (NSString *)adUnitId;
@end

@protocol MPProgressOverlayViewDelegate <NSObject>

@optional
- (void)overlayDidAppear;
- (void)overlayCancelButtonPressed;
@end

@protocol MPRewardedVideoAdManagerDelegate <NSObject>
- (void)rewardedVideoShouldRewardUserForAdManager:(MPRewardedVideoAdManager *)arg1 reward:(MPRewardedVideoReward *)arg2;
- (void)rewardedVideoWillLeaveApplicationForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoDidReceiveTapEventForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoDidDisappearForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoWillDisappearForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoDidAppearForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoWillAppearForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoDidFailToPlayForAdManager:(MPRewardedVideoAdManager *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidExpireForAdManager:(MPRewardedVideoAdManager *)arg1;
- (void)rewardedVideoDidFailToLoadForAdManager:(MPRewardedVideoAdManager *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidLoadForAdManager:(MPRewardedVideoAdManager *)arg1;
@end

@protocol MPRewardedVideoAdapterDelegate <NSObject>
- (void)rewardedVideoShouldRewardUserForAdapter:(MPRewardedVideoAdapter *)arg1 reward:(MPRewardedVideoReward *)arg2;
- (void)rewardedVideoWillLeaveApplicationForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoDidReceiveTapEventForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoDidDisappearForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoWillDisappearForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoDidAppearForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoWillAppearForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoDidFailToPlayForAdapter:(MPRewardedVideoAdapter *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidExpireForAdapter:(MPRewardedVideoAdapter *)arg1;
- (void)rewardedVideoDidFailToLoadForAdapter:(MPRewardedVideoAdapter *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidLoadForAdapter:(MPRewardedVideoAdapter *)arg1;
- (id <MPMediationSettingsProtocol>)instanceMediationSettingsForClass:(Class)arg1;

@optional
- (MPAdConfiguration *)configuration;
- (NSString *)rewardedVideoCustomerId;
- (NSString *)rewardedVideoAdUnitId;
@end

@protocol MPRewardedVideoConnectionDelegate <NSObject>
- (void)rewardedVideoConnectionCompleted:(MPRewardedVideoConnection *)arg1 url:(NSURL *)arg2;
@end

@protocol MPRewardedVideoCustomEventDelegate <NSObject>
- (void)trackClick;
- (void)trackImpression;
- (NSString *)customerIdForRewardedVideoCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoShouldRewardUserForCustomEvent:(MPRewardedVideoCustomEvent *)arg1 reward:(MPRewardedVideoReward *)arg2;
- (void)rewardedVideoDidReceiveTapEventForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoWillLeaveApplicationForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoDidDisappearForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoWillDisappearForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoDidAppearForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoWillAppearForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoDidFailToPlayForCustomEvent:(MPRewardedVideoCustomEvent *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidExpireForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (void)rewardedVideoDidFailToLoadAdForCustomEvent:(MPRewardedVideoCustomEvent *)arg1 error:(NSError *)arg2;
- (void)rewardedVideoDidLoadAdForCustomEvent:(MPRewardedVideoCustomEvent *)arg1;
- (id <MPMediationSettingsProtocol>)instanceMediationSettingsForClass:(Class)arg1;
@end

@protocol MPSKStoreProductViewControllerDelegate <SKStoreProductViewControllerDelegate>
@end

@protocol MPStaticNativeAdImpressionTimerDelegate <NSObject>
- (void)trackImpression;
@end

@protocol MPStreamAdPlacerDelegate <NSObject>

@optional
- (void)nativeAdWillLeaveApplicationFromStreamAdPlacer:(MPStreamAdPlacer *)arg1;
- (void)nativeAdDidDismissModalForStreamAdPlacer:(MPStreamAdPlacer *)arg1;
- (void)nativeAdWillPresentModalForStreamAdPlacer:(MPStreamAdPlacer *)arg1;
- (void)adPlacer:(MPStreamAdPlacer *)arg1 didRemoveAdsAtIndexPaths:(NSArray *)arg2;
- (void)adPlacer:(MPStreamAdPlacer *)arg1 didLoadAdAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol MPWebViewDelegate <NSObject>

@optional
- (void)webView:(MPWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(MPWebView *)arg1;
- (void)webViewDidStartLoad:(MPWebView *)arg1;
- (_Bool)webView:(MPWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol MRBridgeDelegate <NSObject>
- (void)bridge:(MRBridge *)arg1 handleNativeCommandResizeWithParameters:(NSDictionary *)arg2;
- (void)bridge:(MRBridge *)arg1 handleNativeCommandExpandWithURL:(NSURL *)arg2 useCustomClose:(_Bool)arg3;
- (void)bridge:(MRBridge *)arg1 handleNativeCommandSetOrientationPropertiesWithForceOrientationMask:(unsigned long long)arg2;
- (void)bridge:(MRBridge *)arg1 handleNativeCommandUseCustomClose:(_Bool)arg2;
- (void)bridge:(MRBridge *)arg1 handleDisplayForDestinationURL:(NSURL *)arg2;
- (void)bridge:(MRBridge *)arg1 performActionForMoPubSpecificURL:(NSURL *)arg2;
- (void)handleNativeCommandCloseWithBridge:(MRBridge *)arg1;
- (void)bridge:(MRBridge *)arg1 didFailLoadingWebView:(MPWebView *)arg2 error:(NSError *)arg3;
- (void)bridge:(MRBridge *)arg1 didFinishLoadingWebView:(MPWebView *)arg2;
- (void)nativeCommandDidDismissModalView;
- (void)nativeCommandWillPresentModalView;
- (UIViewController *)viewControllerForPresentingModalView;
- (_Bool)hasUserInteractedWithWebViewForBridge:(MRBridge *)arg1;
- (unsigned long long)placementType;
- (_Bool)isLoadingAd;
@end

@protocol MRCommandDelegate <NSObject>
- (void)mrCommandClose:(MRCommand *)arg1;
- (void)mrCommand:(MRCommand *)arg1 resizeWithParams:(NSDictionary *)arg2;
- (void)mrCommand:(MRCommand *)arg1 expandWithParams:(NSDictionary *)arg2;
- (void)mrCommand:(MRCommand *)arg1 openURL:(NSURL *)arg2;
- (void)mrCommand:(MRCommand *)arg1 setOrientationPropertiesWithForceOrientation:(unsigned long long)arg2;
- (void)mrCommand:(MRCommand *)arg1 shouldUseCustomClose:(_Bool)arg2;
- (void)mrCommand:(MRCommand *)arg1 storePictureWithURL:(NSURL *)arg2;
- (void)mrCommand:(MRCommand *)arg1 playVideoWithURL:(NSURL *)arg2;
- (void)mrCommand:(MRCommand *)arg1 createCalendarEventWithParams:(NSDictionary *)arg2;
@end

@protocol MRControllerDelegate <NSObject>
- (void)appShouldResumeFromAd:(UIView *)arg1;
- (void)appShouldSuspendForAd:(UIView *)arg1;
- (UIViewController *)viewControllerForPresentingModalView;
- (CLLocation *)location;
- (MPAdConfiguration *)adConfiguration;
- (NSString *)adUnitId;

@optional
- (void)rewardedVideoEnded;
- (void)adDidClose:(UIView *)arg1;
- (void)adWillClose:(UIView *)arg1;
- (void)adDidFailToLoad:(UIView *)arg1;
- (void)adDidLoad:(UIView *)arg1;
@end

@protocol MRNativeCommandHandlerDelegate <NSObject>
- (_Bool)handlingWebviewRequests;
- (_Bool)userInteractedWithWebView;
- (unsigned long long)adViewPlacementType;
- (UIViewController *)viewControllerForPresentingModalView;
- (void)nativeCommandFailed:(NSString *)arg1 withMessage:(NSString *)arg2;
- (void)nativeCommandCompleted:(NSString *)arg1;
- (void)nativeCommandDidDismissModalView;
- (void)nativeCommandWillPresentModalView;
- (void)handleMRAIDOpenCallForURL:(NSURL *)arg1;
- (void)handleMRAIDClose;
- (void)handleMRAIDResizeWithParameters:(NSDictionary *)arg1;
- (void)handleMRAIDExpandWithParameters:(NSDictionary *)arg1;
- (void)handleMRAIDSetOrientationPropertiesWithForceOrientationMask:(unsigned long long)arg1;
- (void)handleMRAIDUseCustomClose:(_Bool)arg1;
@end

@protocol MRVideoPlayerManagerDelegate <NSObject>
- (void)videoPlayerManager:(MRVideoPlayerManager *)arg1 didFailToPlayVideoWithErrorMessage:(NSString *)arg2;
- (void)videoPlayerManagerDidDismissVideo:(MRVideoPlayerManager *)arg1;
- (void)videoPlayerManagerWillPresentVideo:(MRVideoPlayerManager *)arg1;
- (UIViewController *)viewControllerForPresentingVideoPlayer;
@end

@protocol MessagesRepliesViewControllerProcotol <NSObject>
- (void)messagesRepliesViewController:(MessageRepliesViewController *)arg1 didAddNewMessage:(Message *)arg2;
- (void)messagesRepliesViewController:(MessageRepliesViewController *)arg1 didMarkMessageAsRead:(Message *)arg2;
@end

@protocol NSCacheDelegate <NSObject>

@optional
- (void)cache:(NSCache *)arg1 willEvictObject:(id)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol NavigationProtocol
@property(readonly, nonatomic) UIViewController *topViewController;
- (NSArray *)popToRootViewControllerAnimated:(_Bool)arg1;
- (NSArray *)popToViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
- (UIViewController *)popViewControllerAnimated:(_Bool)arg1;
- (void)universalPushViewController:(UIViewController *)arg1 animated:(_Bool)arg2 fromViewController:(UIViewController *)arg3;
- (void)popViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
- (void)pushViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
- (id)initWithRootViewController:(UIViewController *)arg1;
@end

@protocol OnboardingViewControllerDelegate <NSObject>
- (void)onboardingViewControllerDidFinish:(OnboardingViewController *)arg1;
@end

@protocol OpenBrowserActionViewDelegate <NSObject>
- (void)openBrowserActionViewControllerDidSelectPostToReddit:(OpenBrowserActionViewController *)arg1;
- (void)openBrowserActionViewControllerDidSelectRefresh:(OpenBrowserActionViewController *)arg1;
@end

@protocol PageSegmentedControlDelegate <NSObject>
- (void)pageSegmentedControl:(PageSegmentedControl *)arg1 didSelectItem:(PageSegmentItem *)arg2 atIndex:(long long)arg3 previousIndex:(long long)arg4;
@end

@protocol PagedTabControllerProtocol <NSObject>
- (NSString *)pageItemText;
- (UIImage *)pageItemSelectedImage;
- (UIImage *)pageItemImage;

@optional
- (UIScrollView *)majorContentScrollView;
@end

@protocol PeekPreviewProtocol <NSObject>
- (NSURL *)peekPreviewURLAtTouchLocation:(struct CGPoint)arg1;

@optional
- (struct CGRect)peekPreviewSourceRectWhenTouchedAtLocation:(struct CGPoint)arg1;
@end

@protocol PopupViewControllerProtocol <NSObject>
@property(readonly, nonatomic) double preferredPopupHeight;
@end

@protocol PostViewControllerDelegate <NSObject>
- (void)postViewController:(PostViewController *)arg1 didFinishWithPost:(SubmittedPost *)arg2;
@end

@protocol RecentSubredditsViewControllerDelegate <NSObject>
- (void)recentSubredditsViewController:(RecentSubredditsViewController *)arg1 didSelectSubreddit:(Subreddit *)arg2;
@end

@protocol ReportViewControllerDelegate <NSObject>

@optional
- (void)reportViewControllerDidFinish:(ReportViewController *)arg1;
@end

@protocol SFSafariViewControllerDelegate <NSObject>

@optional
- (void)safariViewController:(SFSafariViewController *)arg1 didCompleteInitialLoad:(_Bool)arg2;
- (void)safariViewControllerDidFinish:(SFSafariViewController *)arg1;
- (NSArray *)safariViewController:(SFSafariViewController *)arg1 activityItemsForURL:(NSURL *)arg2 title:(NSString *)arg3;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SRWebSocketDelegate <NSObject>
- (void)webSocket:(SRWebSocket *)arg1 didReceiveMessage:(id)arg2;

@optional
- (_Bool)webSocketShouldConvertTextFrameToString:(SRWebSocket *)arg1;
- (void)webSocket:(SRWebSocket *)arg1 didReceivePong:(NSData *)arg2;
- (void)webSocket:(SRWebSocket *)arg1 didCloseWithCode:(long long)arg2 reason:(NSString *)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(SRWebSocket *)arg1 didFailWithError:(NSError *)arg2;
- (void)webSocketDidOpen:(SRWebSocket *)arg1;
@end

@protocol ScrollViewIndexBarDelegate <NSObject>
- (void)scrollViewIndexBar:(ScrollViewIndexBar *)arg1 didSelectIndex:(ScrollViewIndex *)arg2;
@end

@protocol SearchPageViewControllerProtocol <NSObject>
- (void)filterSearchResultsMatchingQueryString:(NSString *)arg1;
- (void)beginSearchWithQuery:(NSString *)arg1 sortParam:(NSString *)arg2 timeParam:(NSString *)arg3;

@optional
- (void)beginAutocompleteSearchWithQuery:(NSString *)arg1 sortParam:(NSString *)arg2 timeParam:(NSString *)arg3;
@end

@protocol StackedViewControllerDelegate <NSObject>
- (void)stackedViewController:(StackedViewController *)arg1 didTapCloseAnimated:(_Bool)arg2;

@optional
- (void)stackedViewController:(StackedViewController *)arg1 didTapFocusAnimated:(_Bool)arg2;
@end

@protocol StackedViewDelegate <NSObject>

@optional
- (void)stackedView:(StackedView *)arg1 didFocusCellVC:(StackedViewController *)arg2;
- (void)stackedView:(StackedView *)arg1 willFocusCellVC:(StackedViewController *)arg2;
@end

@protocol SubredditHeaderViewCallback <NSObject>
- (void)subredditHeaderViewDidTapFollowButton:(SubredditHeaderView *)arg1;
- (void)subredditHeaderViewDidBecomeHidden:(SubredditHeaderView *)arg1;
- (void)subredditHeaderViewDidBecomeVisible:(SubredditHeaderView *)arg1;
@end

@protocol SwipyContentViewDelegate <NSObject>

@optional
- (void)baseContentViewHorizontalGestureDidCancel:(SwipyContentView *)arg1;
- (void)baseContentViewHorizontalGestureDidEnd:(SwipyContentView *)arg1;
- (void)baseContentViewHorizontalGestureDidBegin:(SwipyContentView *)arg1;
@end

@protocol TFSScribeEventParameters <NSObject>
- (NSString *)userID;
- (NSDictionary *)dictionaryRepresentation;
- (NSData *)data;
@end

@protocol TFSScribeRequestHandler <NSObject>
- (void)handleScribeOutgoingEvents:(NSString *)arg1 userID:(NSString *)arg2 completionHandler:(void (^)(unsigned long long))arg3;

@optional
- (void)handleImpressionsBatch:(NSArray *)arg1 batchedImpressionHandler:(void (^)(id <TFSScribeEventParameters>))arg2;
@end

@protocol TWTRAPIServiceConfig <NSObject>
@property(readonly, copy, nonatomic) NSString *serviceName;
@property(readonly, copy, nonatomic) NSString *apiScheme;
@property(readonly, copy, nonatomic) NSString *apiHost;
@end

@protocol TWTRAttributedLabel <NSObject>
@property(copy, nonatomic) id text;
@end

@protocol TWTRAttributedLabelDelegate <NSObject>

@optional
- (void)attributedLabel:(TWTRAttributedLabel *)arg1 didTapTweetUserMentionEntity:(TWTRTweetUserMentionEntity *)arg2;
- (void)attributedLabel:(TWTRAttributedLabel *)arg1 didTapTweetCashtagEntity:(TWTRTweetCashtagEntity *)arg2;
- (void)attributedLabel:(TWTRAttributedLabel *)arg1 didTapTweetHashtagEntity:(TWTRTweetHashtagEntity *)arg2;
- (void)attributedLabel:(TWTRAttributedLabel *)arg1 didTapTweetURLEntity:(TWTRTweetUrlEntity *)arg2;
@end

@protocol TWTRAuthSession <TWTRBaseSession>
@property(readonly, copy, nonatomic) NSString *userID;
@property(readonly, copy, nonatomic) NSString *authTokenSecret;
@property(readonly, copy, nonatomic) NSString *authToken;
@end

@protocol TWTRBaseSession <NSObject, NSCoding>
@end

@protocol TWTRCoreOAuthSigning <NSObject>
- (NSDictionary *)OAuthEchoHeadersToVerifyCredentials;
- (NSDictionary *)OAuthEchoHeadersForRequestMethod:(NSString *)arg1 URLString:(NSString *)arg2 parameters:(NSDictionary *)arg3 error:(id *)arg4;
@end

@protocol TWTRErrorLogger <NSObject>
- (void)didEncounterError:(NSError *)arg1 withMessage:(NSString *)arg2;
@end

@protocol TWTRGuestSessionStore <NSObject>
- (void)fetchGuestSessionWithCompletion:(void (^)(TWTRGuestSession *, NSError *))arg1;
@end

@protocol TWTRImageLoader <NSObject>
- (void)cancelImageWithRequestID:(id <NSCopying>)arg1;
- (id <NSCopying>)fetchImageWithURL:(NSURL *)arg1 completion:(void (^)(UIImage *, NSError *))arg2;
@end

@protocol TWTRImageLoaderCache <NSObject>
- (void)removeAllImages;
- (UIImage *)removeImageForKey:(NSString *)arg1;
- (UIImage *)fetchImageForKey:(NSString *)arg1;
- (void)setImageData:(NSData *)arg1 forKey:(NSString *)arg2;
- (void)setImage:(UIImage *)arg1 forKey:(NSString *)arg2;
@end

@protocol TWTRImageLoaderTaskManager <NSObject>
- (NSURLSessionTask *)removeTaskWithRequestID:(id <NSCopying>)arg1;
- (void)addTask:(NSURLSessionTask *)arg1 withRequestID:(id <NSCopying>)arg2;
@end

@protocol TWTRJSONConvertible <NSObject>
- (id)initWithJSONDictionary:(NSDictionary *)arg1;
@end

@protocol TWTRMediaContainerPresentable <NSObject>
- (void)didDismissInMediaContainer;
- (void)willShowInMediaContainer;
- (void)transitionDidComplete;
- (void)transitionWillBegin;
- (struct CGRect)transitionImageTargetFrame;
- (UIImage *)transitionImage;
@end

@protocol TWTRNetworkSessionProvider <NSObject>
+ (void)guestSessionWithAuthConfig:(TWTRAuthConfig *)arg1 APIServiceConfig:(id <TWTRAPIServiceConfig>)arg2 URLSession:(NSURLSession *)arg3 accessToken:(NSString *)arg4 completion:(void (^)(TWTRGuestSession *, NSError *))arg5;
+ (void)verifySessionWithAuthToken:(NSString *)arg1 authSecret:(NSString *)arg2 withAuthConfig:(TWTRAuthConfig *)arg3 APIServiceConfig:(id <TWTRAPIServiceConfig>)arg4 URLSession:(NSURLSession *)arg5 completion:(void (^)(TWTRSession *, NSError *))arg6;
+ (void)verifyUserSession:(id <TWTRAuthSession>)arg1 withAuthConfig:(TWTRAuthConfig *)arg2 APIServiceConfig:(id <TWTRAPIServiceConfig>)arg3 URLSession:(NSURLSession *)arg4 completion:(void (^)(TWTRSession *, NSError *))arg5;
+ (void)userSessionWithAuthConfig:(TWTRAuthConfig *)arg1 APIServiceConfig:(id <TWTRAPIServiceConfig>)arg2 errorLogger:(id <TWTRErrorLogger>)arg3 completion:(void (^)(TWTRSession *, NSError *))arg4;
@end

@protocol TWTRNetworkingResponseValidating <NSObject>
- (_Bool)validateResponse:(NSURLResponse *)arg1 data:(NSData *)arg2 error:(id *)arg3;
@end

@protocol TWTRProfileHeaderViewDelegate <NSObject>

@optional
- (void)profileHeaderView:(TWTRProfileHeaderView *)arg1 didTapProfileForUser:(TWTRUser *)arg2;
@end

@protocol TWTRScribableView <NSObject>
@property(nonatomic) unsigned long long scribeViewName;
@end

@protocol TWTRScribeSerializable <NSObject>
+ (NSString *)scribeKey;
- (NSDictionary *)dictionaryRepresentation;
@end

@protocol TWTRSessionMigrating <NSObject>
- (void)runMigrationWithDestination:(id <TWTRSessionStore>)arg1 removeOnSuccess:(_Bool)arg2;
@end

@protocol TWTRSessionRefreshStrategy <NSObject>
+ (_Bool)isSessionExpiredBasedOnRequestError:(NSError *)arg1;
+ (_Bool)isSessionExpiredBasedOnRequestResponse:(NSHTTPURLResponse *)arg1;
+ (_Bool)canSupportSessionClass:(Class)arg1;
- (void)refreshSession:(id <TWTRBaseSession>)arg1 URLSession:(NSURLSession *)arg2 completion:(void (^)(id, NSError *))arg3;
@end

@protocol TWTRSessionRefreshingStore <NSObject>
- (_Bool)isExpiredSession:(id)arg1 error:(NSError *)arg2;
- (_Bool)isExpiredSession:(id)arg1 response:(NSHTTPURLResponse *)arg2;
- (void)refreshSessionClass:(Class)arg1 sessionID:(NSString *)arg2 completion:(void (^)(id, NSError *))arg3;
@end

@protocol TWTRSessionStore <TWTRUserSessionStore, TWTRGuestSessionStore, TWTRSessionRefreshingStore>
@property(readonly, nonatomic) TWTRAuthConfig *authConfig;
@end

@protocol TWTRSessionStore_Private <TWTRUserSessionStore_Private>
@property(retain, nonatomic) TWTRGuestSession *guestSession;
@end

@protocol TWTRSubscriber <NSObject>
- (void)objectUpdated:(id)arg1;
@end

@protocol TWTRTimelineDataSource <NSObject>
@property(retain, nonatomic) TWTRAPIClient *APIClient;
@property(readonly, nonatomic) unsigned long long timelineType;
- (void)loadPreviousTweetsBeforePosition:(NSString *)arg1 completion:(void (^)(NSArray *, TWTRTimelineCursor *, NSError *))arg2;
@end

@protocol TWTRTweetCache <NSObject>
- (_Bool)storeTweet:(TWTRTweet *)arg1 perspective:(NSString *)arg2;
- (TWTRTweet *)tweetWithID:(NSString *)arg1 perspective:(NSString *)arg2;

@optional
- (_Bool)removeTweetWithID:(NSString *)arg1 perspective:(NSString *)arg2;
- (id)initWithPath:(NSString *)arg1 maxSize:(unsigned long long)arg2;
@end

@protocol TWTRTweetContentViewLayout <NSObject>
- (_Bool)allowsMediaCornerRounding;
- (unsigned long long)tweetViewStyle;
- (void)setShowingMedia:(_Bool)arg1;
- (void)applyConstraintsForContentView:(TWTRTweetContentView *)arg1;
- (UIFont *)fontForTweetLabel;
@end

@protocol TWTRTweetMediaViewDelegate <NSObject>

@optional
- (void)tweetMediaView:(TWTRTweetMediaView *)arg1 didPresentVideoPlayerForMediaEntity:(TWTRTweetMediaEntity *)arg2;
- (void)tweetMediaView:(TWTRTweetMediaView *)arg1 didPresentImageViewerForMediaEntity:(TWTRTweetMediaEntity *)arg2;
- (UIViewController *)viewControllerToPresentFromTweetMediaView:(TWTRTweetMediaView *)arg1;
- (_Bool)tweetMediaView:(TWTRTweetMediaView *)arg1 shouldPresentVideoForConfiguration:(TWTRVideoPlaybackConfiguration *)arg2;
- (_Bool)tweetMediaView:(TWTRTweetMediaView *)arg1 shouldPresentImageForMediaEntity:(TWTRTweetMediaEntity *)arg2;
@end

@protocol TWTRTweetViewDelegate <NSObject>

@optional
- (_Bool)tweetView:(TWTRTweetView *)arg1 shouldDisplayDetailViewController:(TWTRTweetDetailViewController *)arg2;
- (void)tweetView:(TWTRTweetView *)arg1 didTapProfileImageForUser:(TWTRUser *)arg2;
- (void)tweetView:(TWTRTweetView *)arg1 didTapURL:(NSURL *)arg2;
- (void)tweetView:(TWTRTweetView *)arg1 didTapVideoWithURL:(NSURL *)arg2;
- (void)tweetView:(TWTRTweetView *)arg1 didTapImage:(UIImage *)arg2 withURL:(NSURL *)arg3;
@end

@protocol TWTRUserSessionStore <NSObject>
- (void)logOutUserID:(NSString *)arg1;
- (id <TWTRAuthSession>)session;
- (NSArray *)existingUserSessions;
- (id <TWTRAuthSession>)sessionForUserID:(NSString *)arg1;
- (void)saveSessionWithAuthToken:(NSString *)arg1 authTokenSecret:(NSString *)arg2 completion:(void (^)(id <TWTRAuthSession>, NSError *))arg3;
- (void)saveSession:(id <TWTRAuthSession>)arg1 completion:(void (^)(id <TWTRAuthSession>, NSError *))arg2;
@end

@protocol TWTRUserSessionStore_Private <TWTRSessionStore>
- (void)logInWithSystemAccountsCompletion:(void (^)(id <TWTRAuthSession>, NSError *))arg1;
- (void)saveSession:(id <TWTRAuthSession>)arg1 withVerification:(_Bool)arg2 completion:(void (^)(id <TWTRAuthSession>, NSError *))arg3;
@end

@protocol TWTRUserSessionVerifierDelegate <NSObject>
- (void)userSessionVerifierNeedsSessionVerification:(TWTRUserSessionVerifier *)arg1;
@end

@protocol TWTRVersionedCacheable <NSObject, NSCoding>
+ (NSString *)versionedCacheKeyWithID:(NSString *)arg1 perspective:(NSString *)arg2;
@end

@protocol TWTRVideoCTAViewDelegate <NSObject>

@optional
- (void)videoCTAView:(TWTRVideoCTAView *)arg1 willDeeplinkToTargetURL:(NSURL *)arg2;
@end

@protocol TWTRVideoPlayerScribeDelegate <NSObject>
- (void)videoPlayer:(TWTRVideoPlayerView *)arg1 didPlayPercentOfMedia:(unsigned long long)arg2 playbackConfiguration:(TWTRVideoPlaybackConfiguration *)arg3;
@end

@protocol TWTRVideoPlayerViewDelegate <NSObject>

@optional
- (void)videoPlayerDidBecomeReady:(TWTRVideoPlayerView *)arg1;
- (void)videoPlayer:(TWTRVideoPlayerView *)arg1 didChangePlaybackState:(long long)arg2;
@end

@protocol ThemeUpdateCallbackProtocol <NSObject>
- (void)themeDidChange:(Theme *)arg1;
@end

@protocol ThreadedObjectProtocol <NSObject, NSCoding>
@property(readonly, nonatomic) _Bool hasImages;
@property(copy, nonatomic) NSArray *visualReplies;
@property(nonatomic) unsigned long long visualLevel;
@property(nonatomic) _Bool isCollapsed;
@property(nonatomic) unsigned long long level;
@property(copy, nonatomic) NSArray *replies;
@property(nonatomic) _Bool isLoadingMoreNode;
@end

@protocol ToastViewProtocol <NSObject>
- (double)toastHeight;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAppearanceContainer <NSObject>
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (void)collectionView:(UICollectionView *)arg1 moveItemAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 canMoveItemAtIndexPath:(NSIndexPath *)arg2;
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (struct CGPoint)collectionView:(UICollectionView *)arg1 targetContentOffsetForProposedContentOffset:(struct CGPoint)arg2;
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)arg1;
- (void)collectionView:(UICollectionView *)arg1 didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 canFocusItemAtIndexPath:(NSIndexPath *)arg2;
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceivePress:(UIPress *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPageViewControllerDataSource <NSObject>
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerAfterViewController:(UIViewController *)arg2;
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerBeforeViewController:(UIViewController *)arg2;

@optional
- (long long)presentationIndexForPageViewController:(UIPageViewController *)arg1;
- (long long)presentationCountForPageViewController:(UIPageViewController *)arg1;
@end

@protocol UIPageViewControllerDelegate <NSObject>

@optional
- (long long)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)arg1;
- (unsigned long long)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)arg1;
- (long long)pageViewController:(UIPageViewController *)arg1 spineLocationForInterfaceOrientation:(long long)arg2;
- (void)pageViewController:(UIPageViewController *)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(NSArray *)arg3 transitionCompleted:(_Bool)arg4;
- (void)pageViewController:(UIPageViewController *)arg1 willTransitionToViewControllers:(NSArray *)arg2;
@end

@protocol UIPreviewActionItem <NSObject>
@property(readonly, copy, nonatomic) NSString *title;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
- (id <UIViewImplicitlyAnimating>)interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning>)arg1;
@end

@protocol UIViewControllerPreviewingDelegate <NSObject>
- (void)previewingContext:(id <UIViewControllerPreviewing>)arg1 commitViewController:(UIViewController *)arg2;
- (UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)arg1 viewControllerForLocation:(struct CGPoint)arg2;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol WKScriptMessageHandler <NSObject>
- (void)userContentController:(WKUserContentController *)arg1 didReceiveScriptMessage:(WKScriptMessage *)arg2;
@end

@protocol WKUIDelegate <NSObject>

@optional
- (void)webView:(WKWebView *)arg1 commitPreviewingViewController:(UIViewController *)arg2;
- (UIViewController *)webView:(WKWebView *)arg1 previewingViewControllerForElement:(WKPreviewElementInfo *)arg2 defaultActions:(NSArray *)arg3;
- (_Bool)webView:(WKWebView *)arg1 shouldPreviewElement:(WKPreviewElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WKFrameInfo *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(WKWebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(WKWebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webViewDidClose:(WKWebView *)arg1;
- (WKWebView *)webView:(WKWebView *)arg1 createWebViewWithConfiguration:(WKWebViewConfiguration *)arg2 forNavigationAction:(WKNavigationAction *)arg3 windowFeatures:(WKWindowFeatures *)arg4;
@end

@protocol WebNavigationControlsViewDelegate <NSObject>
- (void)webNavigationControlsUserDidTapForward:(WebNavigationControlsView *)arg1;
- (void)webNavigationControlsUserDidTapBack:(WebNavigationControlsView *)arg1;
@end

@protocol YTPlayerViewDelegate <NSObject>

@optional
- (UIView *)playerViewPreferredInitialLoadingView:(YTPlayerView *)arg1;
- (UIColor *)playerViewPreferredWebViewBackgroundColor:(YTPlayerView *)arg1;
- (void)playerView:(YTPlayerView *)arg1 didPlayTime:(float)arg2;
- (void)playerView:(YTPlayerView *)arg1 receivedError:(long long)arg2;
- (void)playerView:(YTPlayerView *)arg1 didChangeToQuality:(long long)arg2;
- (void)playerView:(YTPlayerView *)arg1 didChangeToState:(long long)arg2;
- (void)playerViewDidBecomeReady:(YTPlayerView *)arg1;
- (_Bool)playerView:(YTPlayerView *)arg1 handleNavigationToUrl:(NSURL *)arg2;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface LiveWebEmbedView : LiveUpdateEmbedView
{
    NSDictionary *_embedData;
    BaseView *_imageContainer;
    BaseImageView *_imageView;
    BaseLabel *_linkTitleLabel;
    BaseLabel *_linkDescriptionLabel;
    BaseLabel *_urlLabel;
    BaseView *_urlLabelDimmerView;
    NSURL *_imageURL;
}

+ (double)textWidth;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
+ (double)thumbnailHeightForDictionary:(id)arg1;
@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) BaseView *urlLabelDimmerView; // @synthesize urlLabelDimmerView=_urlLabelDimmerView;
@property(retain, nonatomic) BaseLabel *urlLabel; // @synthesize urlLabel=_urlLabel;
@property(retain, nonatomic) BaseLabel *linkDescriptionLabel; // @synthesize linkDescriptionLabel=_linkDescriptionLabel;
@property(retain, nonatomic) BaseLabel *linkTitleLabel; // @synthesize linkTitleLabel=_linkTitleLabel;
@property(retain, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) BaseView *imageContainer; // @synthesize imageContainer=_imageContainer;
@property(retain, nonatomic) NSDictionary *embedData; // @synthesize embedData=_embedData;
- (void).cxx_destruct;
- (id)domainNameFromURL:(id)arg1;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)configureWithEmbedData:(id)arg1;
- (id)init;

@end

@interface LocalizationHelper : NSObject
{
}

+ (id)localizedStringForFeedSortType:(unsigned long long)arg1 andTimeParameter:(unsigned long long)arg2;
+ (id)localizedStringForTimeParameter:(unsigned long long)arg1;
+ (id)localizedStringForFeedSortType:(unsigned long long)arg1;
+ (id)localizedStringForCommentSortType:(unsigned long long)arg1;
+ (id)localizedStringForThumbnailMode:(unsigned long long)arg1;
+ (id)localizedStringForFeedMode:(unsigned long long)arg1;

@end

@interface MPNativeCache : NSObject <NSCacheDelegate>
{
    int _cacheMethod;
    NSCache *_memoryCache;
    MPDiskLRUCache *_diskCache;
}

+ (id)sharedCache;
@property(nonatomic) int cacheMethod; // @synthesize cacheMethod=_cacheMethod;
@property(retain, nonatomic) MPDiskLRUCache *diskCache; // @synthesize diskCache=_diskCache;
@property(retain, nonatomic) NSCache *memoryCache; // @synthesize memoryCache=_memoryCache;
- (void).cxx_destruct;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)removeAllDataFromDisk;
- (void)removeAllDataFromMemory;
- (void)storeData:(id)arg1 forKey:(id)arg2 withCacheMethod:(int)arg3;
- (id)retrieveDataForKey:(id)arg1 withCacheMethod:(int)arg2;
- (_Bool)cachedDataExistsForKey:(id)arg1 withCacheMethod:(int)arg2;
- (void)removeAllDataFromCache;
- (void)storeData:(id)arg1 forKey:(id)arg2;
- (id)retrieveDataForKey:(id)arg1;
- (_Bool)cachedDataExistsForKey:(id)arg1;
- (void)setInMemoryCacheEnabled:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPAnalyticsTracker : NSObject
{
}

+ (id)tracker;
- (id)requestForURL:(id)arg1;
- (void)sendTrackingRequestForURLs:(id)arg1;
- (void)trackClickForConfiguration:(id)arg1;
- (void)trackImpressionForConfiguration:(id)arg1;

@end

@interface Multi : BaseModel
{
    NSString *_name;
    NSString *_displayName;
    NSArray *_subreddits;
    unsigned long long _feedMode;
    NSString *_urlPath;
}

+ (id)recommendationMultiFromData:(id)arg1;
+ (id)multiFromData:(id)arg1;
@property(copy, nonatomic) NSString *urlPath; // @synthesize urlPath=_urlPath;
@property(nonatomic) unsigned long long feedMode; // @synthesize feedMode=_feedMode;
@property(copy, nonatomic) NSArray *subreddits; // @synthesize subreddits=_subreddits;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSArray *sortedSubreddits;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MPiOS7SafeStoreProductViewController : SKStoreProductViewController
{
}

- (_Bool)shouldAutorotate;

@end

@interface MPStoreKitProvider : NSObject
{
}

+ (id)buildController;
+ (_Bool)deviceHasStoreKit;

@end

@interface BaseSlider : UISlider
{
    unsigned long long _numberOfValues;
    NSMutableArray *_coloredDots;
}

@property(copy, nonatomic) NSMutableArray *coloredDots; // @synthesize coloredDots=_coloredDots;
@property(nonatomic) unsigned long long numberOfValues; // @synthesize numberOfValues=_numberOfValues;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (void)setThumbColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ActionSheetItem : BaseActionSheetItem
{
    UIImage *_leftIconImage;
    UIImage *_leftSelectedImage;
    NSString *_text;
}

@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) UIImage *leftSelectedImage; // @synthesize leftSelectedImage=_leftSelectedImage;
@property(retain, nonatomic) UIImage *leftIconImage; // @synthesize leftIconImage=_leftIconImage;
- (void).cxx_destruct;
- (id)initWithLeftIconImage:(id)arg1 text:(id)arg2 identifier:(id)arg3 context:(id)arg4;

@end

@interface ImageLabelTableViewCell : BaseTableViewCell
{
    ImageLabelContentView *_imageLabelView;
}

@property(retain, nonatomic) ImageLabelContentView *imageLabelView; // @synthesize imageLabelView=_imageLabelView;
- (void).cxx_destruct;
- (void)setCustomImageAccessory:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface GTMFadeTruncatingLabel : UILabel
{
    int truncateMode_;
}

+ (id)getLinearGradient:(struct CGRect)arg1 fadeHead:(_Bool)arg2 fadeTail:(_Bool)arg3;
@property(nonatomic) int truncateMode; // @synthesize truncateMode=truncateMode_;
- (void)drawTextInRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setup;

@end

@interface MPAdServerCommunicator : NSObject <NSURLConnectionDataDelegate>
{
    _Bool _loading;
    id <MPAdServerCommunicatorDelegate> _delegate;
    NSURL *_URL;
    NSURLConnection *_connection;
    NSMutableData *_responseData;
    NSDictionary *_responseHeaders;
    MPLogEvent *_adRequestLatencyEvent;
}

@property(retain, nonatomic) MPLogEvent *adRequestLatencyEvent; // @synthesize adRequestLatencyEvent=_adRequestLatencyEvent;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) __weak id <MPAdServerCommunicatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)adRequestForURL:(id)arg1;
- (id)errorForStatusCode:(long long)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)cancel;
- (void)loadURL:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LinkKeyboardAccessoryView : BaseView
{
    UIButton *_linkButton;
    UIButton *_rightButton;
}

@property(readonly, nonatomic) UIButton *rightButton; // @synthesize rightButton=_rightButton;
@property(readonly, nonatomic) UIButton *linkButton; // @synthesize linkButton=_linkButton;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPAdAlertManager : NSObject <UIGestureRecognizerDelegate, MFMailComposeViewControllerDelegate, MPAdAlertManagerProtocol>
{
    _Bool _processedAlert;
    id _delegate;
    MPAdConfiguration *_adConfiguration;
    MPAdAlertGestureRecognizer *_adAlertGestureRecognizer;
    NSString *_adUnitId;
    UIView *_targetAdView;
    CLLocation *_location;
    MFMailComposeViewController *_currentOpenMailVC;
}

@property(retain, nonatomic) MFMailComposeViewController *currentOpenMailVC; // @synthesize currentOpenMailVC=_currentOpenMailVC;
@property(copy, nonatomic) CLLocation *location; // @synthesize location=_location;
@property(nonatomic) __weak UIView *targetAdView; // @synthesize targetAdView=_targetAdView;
@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(retain, nonatomic) MPAdAlertGestureRecognizer *adAlertGestureRecognizer; // @synthesize adAlertGestureRecognizer=_adAlertGestureRecognizer;
@property(nonatomic) _Bool processedAlert; // @synthesize processedAlert=_processedAlert;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)processAdAlertOnce;
- (void)endMonitoringAlerts;
- (void)beginMonitoringAlerts;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (id)stringFromDictionary:(id)arg1;
- (void)processAdParams:(id)arg1 andScreenshot:(id)arg2;
- (void)handleAdAlertGesture;
- (void)processAdAlert;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativePositionResponseDeserializer : NSObject
{
}

+ (id)deserializer;
- (id)deserializationErrorWithCode:(unsigned long long)arg1 userInfo:(id)arg2;
- (void)safeAssignError:(id *)arg1 code:(unsigned long long)arg2 description:(id)arg3 underlyingError:(id)arg4;
- (void)safeAssignError:(id *)arg1 code:(unsigned long long)arg2 description:(id)arg3;
- (void)safeAssignError:(id *)arg1 code:(unsigned long long)arg2 userInfo:(id)arg3;
- (long long)integerFromDictionary:(id)arg1 forKey:(id)arg2 defaultValue:(long long)arg3;
- (_Bool)validateRepeatingIntervalObject:(id)arg1 error:(id *)arg2;
- (_Bool)validatePositionObject:(id)arg1 error:(id *)arg2;
- (long long)parseRepeatingIntervalObject:(id)arg1 error:(id *)arg2;
- (id)parseFixedPositionsObject:(id)arg1 error:(id *)arg2;
- (id)clientPositioningForData:(id)arg1 error:(id *)arg2;

@end

@interface MRVideoPlayerManager : NSObject
{
    id <MRVideoPlayerManagerDelegate> _delegate;
}

@property(nonatomic) __weak id <MRVideoPlayerManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)moviePlayerPlaybackDidFinish:(id)arg1;
- (void)playVideo:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface PopularFeedViewController : FeedViewController
{
    _Bool _isOnTheMainTab;
}

@property(nonatomic) _Bool isOnTheMainTab; // @synthesize isOnTheMainTab=_isOnTheMainTab;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (id)init;

@end

@interface MPInternalUtils : NSObject
{
}

@end

@interface AuthenticationViewController : BaseViewController <AttributedLabelRegularDelegate, UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, ForgotPasswordViewControllerDelegate>
{
    _Bool _revealPassword;
    NSString *_initialUserNameString;
    long long _authenticationMode;
    id <AuthenticationViewControllerDelegate> _delegate;
    NSString *_username;
    NSString *_password;
    NSString *_email;
    BaseTableView *_tableView;
    AuthenticationHeaderView *_headerView;
    LoginFooterView *_loginFooterView;
    SignupFooterView *_signUpFooterView;
}

@property(retain, nonatomic) SignupFooterView *signUpFooterView; // @synthesize signUpFooterView=_signUpFooterView;
@property(retain, nonatomic) LoginFooterView *loginFooterView; // @synthesize loginFooterView=_loginFooterView;
@property(retain, nonatomic) AuthenticationHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) _Bool revealPassword; // @synthesize revealPassword=_revealPassword;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) __weak id <AuthenticationViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long authenticationMode; // @synthesize authenticationMode=_authenticationMode;
@property(copy, nonatomic) NSString *initialUserNameString; // @synthesize initialUserNameString=_initialUserNameString;
- (void).cxx_destruct;
- (void)logControlTapEvent:(id)arg1;
- (id)analyticsScreenViewName;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)didTapCloseAuthentication;
- (void)forgotPassswordViewControllerDidFinish:(id)arg1;
- (void)handleError:(id)arg1;
- (void)signup;
- (void)login;
- (void)didTapActionButton:(id)arg1;
- (void)didTapCloseForgotPassword;
- (void)didTapForgotPassword;
- (void)didTapRevealPassword:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (long long)preferredStatusBarStyle;
- (void)keyboardWillShow:(id)arg1;
- (id)init;
- (void)dealloc;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseScrollView : UIScrollView
{
    double _maxScrollOffset;
}

@property(nonatomic) double maxScrollOffset; // @synthesize maxScrollOffset=_maxScrollOffset;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)dealloc;

@end

@interface MPVASTCompanionAd : MPVASTModel
{
    double _assetHeight;
    double _assetWidth;
    NSURL *_clickThroughURL;
    NSArray *_clickTrackingURLs;
    double _height;
    NSArray *_HTMLResources;
    NSString *_identifier;
    NSArray *_iframeResources;
    NSArray *_staticResources;
    NSDictionary *_trackingEvents;
    double _width;
}

+ (id)modelMap;
@property(readonly, nonatomic) double width; // @synthesize width=_width;
@property(readonly, nonatomic) NSDictionary *trackingEvents; // @synthesize trackingEvents=_trackingEvents;
@property(readonly, nonatomic) NSArray *staticResources; // @synthesize staticResources=_staticResources;
@property(readonly, nonatomic) NSArray *iframeResources; // @synthesize iframeResources=_iframeResources;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSArray *HTMLResources; // @synthesize HTMLResources=_HTMLResources;
@property(readonly, nonatomic) double height; // @synthesize height=_height;
@property(readonly, nonatomic) NSArray *clickTrackingURLs; // @synthesize clickTrackingURLs=_clickTrackingURLs;
@property(readonly, copy, nonatomic) NSURL *clickThroughURL; // @synthesize clickThroughURL=_clickThroughURL;
@property(readonly, nonatomic) double assetWidth; // @synthesize assetWidth=_assetWidth;
@property(readonly, nonatomic) double assetHeight; // @synthesize assetHeight=_assetHeight;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface MRNativeCommandHandler : NSObject <MRCommandDelegate, MRVideoPlayerManagerDelegate>
{
    id <MRNativeCommandHandlerDelegate> _delegate;
    MRVideoPlayerManager *_videoPlayerManager;
}

@property(retain, nonatomic) MRVideoPlayerManager *videoPlayerManager; // @synthesize videoPlayerManager=_videoPlayerManager;
@property(nonatomic) __weak id <MRNativeCommandHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)viewControllerForPresentingVideoPlayer;
- (void)videoPlayerManagerDidDismissVideo:(id)arg1;
- (void)videoPlayerManagerWillPresentVideo:(id)arg1;
- (void)videoPlayerManager:(id)arg1 didFailToPlayVideoWithErrorMessage:(id)arg2;
- (void)mrCommandClose:(id)arg1;
- (void)mrCommand:(id)arg1 resizeWithParams:(id)arg2;
- (void)mrCommand:(id)arg1 expandWithParams:(id)arg2;
- (void)mrCommand:(id)arg1 openURL:(id)arg2;
- (void)mrCommand:(id)arg1 setOrientationPropertiesWithForceOrientation:(unsigned long long)arg2;
- (void)mrCommand:(id)arg1 shouldUseCustomClose:(_Bool)arg2;
- (void)mrCommand:(id)arg1 storePictureWithURL:(id)arg2;
- (void)mrCommand:(id)arg1 playVideoWithURL:(id)arg2;
- (void)mrCommand:(id)arg1 createCalendarEventWithParams:(id)arg2;
- (_Bool)shouldExecuteMRCommand:(id)arg1;
- (void)handleNativeCommand:(id)arg1 withProperties:(id)arg2;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVideoPlaybackCandidate : NSObject
{
    MPVASTLinearAd *_linearAd;
    NSArray *_errorURLs;
    NSArray *_impressionURLs;
    double _minimumViewabilityTimeInterval;
    double _minimumFractionOfVideoVisible;
    NSURL *_viewabilityTrackingURL;
}

@property(retain, nonatomic) NSURL *viewabilityTrackingURL; // @synthesize viewabilityTrackingURL=_viewabilityTrackingURL;
@property(nonatomic) double minimumFractionOfVideoVisible; // @synthesize minimumFractionOfVideoVisible=_minimumFractionOfVideoVisible;
@property(nonatomic) double minimumViewabilityTimeInterval; // @synthesize minimumViewabilityTimeInterval=_minimumViewabilityTimeInterval;
@property(retain, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(retain, nonatomic) NSArray *errorURLs; // @synthesize errorURLs=_errorURLs;
@property(retain, nonatomic) MPVASTLinearAd *linearAd; // @synthesize linearAd=_linearAd;
- (void).cxx_destruct;

@end

@interface MPVideoConfig : NSObject
{
    NSURL *_mediaURL;
    NSURL *_clickThroughURL;
    NSArray *_clickTrackingURLs;
    NSArray *_errorURLs;
    NSArray *_impressionURLs;
    NSArray *_creativeViewTrackers;
    NSArray *_startTrackers;
    NSArray *_firstQuartileTrackers;
    NSArray *_midpointTrackers;
    NSArray *_thirdQuartileTrackers;
    NSArray *_completionTrackers;
    NSArray *_muteTrackers;
    NSArray *_unmuteTrackers;
    NSArray *_pauseTrackers;
    NSArray *_rewindTrackers;
    NSArray *_resumeTrackers;
    NSArray *_fullscreenTrackers;
    NSArray *_exitFullscreenTrackers;
    NSArray *_expandTrackers;
    NSArray *_collapseTrackers;
    NSArray *_acceptInvitationLinearTrackers;
    NSArray *_closeLinearTrackers;
    NSArray *_skipTrackers;
    NSArray *_otherProgressTrackers;
    double _minimumViewabilityTimeInterval;
    double _minimumFractionOfVideoVisible;
    NSURL *_viewabilityTrackingURL;
}

@property(readonly, nonatomic) NSURL *viewabilityTrackingURL; // @synthesize viewabilityTrackingURL=_viewabilityTrackingURL;
@property(readonly, nonatomic) double minimumFractionOfVideoVisible; // @synthesize minimumFractionOfVideoVisible=_minimumFractionOfVideoVisible;
@property(readonly, nonatomic) double minimumViewabilityTimeInterval; // @synthesize minimumViewabilityTimeInterval=_minimumViewabilityTimeInterval;
@property(retain, nonatomic) NSArray *otherProgressTrackers; // @synthesize otherProgressTrackers=_otherProgressTrackers;
@property(retain, nonatomic) NSArray *skipTrackers; // @synthesize skipTrackers=_skipTrackers;
@property(retain, nonatomic) NSArray *closeLinearTrackers; // @synthesize closeLinearTrackers=_closeLinearTrackers;
@property(retain, nonatomic) NSArray *acceptInvitationLinearTrackers; // @synthesize acceptInvitationLinearTrackers=_acceptInvitationLinearTrackers;
@property(retain, nonatomic) NSArray *collapseTrackers; // @synthesize collapseTrackers=_collapseTrackers;
@property(retain, nonatomic) NSArray *expandTrackers; // @synthesize expandTrackers=_expandTrackers;
@property(retain, nonatomic) NSArray *exitFullscreenTrackers; // @synthesize exitFullscreenTrackers=_exitFullscreenTrackers;
@property(retain, nonatomic) NSArray *fullscreenTrackers; // @synthesize fullscreenTrackers=_fullscreenTrackers;
@property(retain, nonatomic) NSArray *resumeTrackers; // @synthesize resumeTrackers=_resumeTrackers;
@property(retain, nonatomic) NSArray *rewindTrackers; // @synthesize rewindTrackers=_rewindTrackers;
@property(retain, nonatomic) NSArray *pauseTrackers; // @synthesize pauseTrackers=_pauseTrackers;
@property(retain, nonatomic) NSArray *unmuteTrackers; // @synthesize unmuteTrackers=_unmuteTrackers;
@property(retain, nonatomic) NSArray *muteTrackers; // @synthesize muteTrackers=_muteTrackers;
@property(retain, nonatomic) NSArray *completionTrackers; // @synthesize completionTrackers=_completionTrackers;
@property(retain, nonatomic) NSArray *thirdQuartileTrackers; // @synthesize thirdQuartileTrackers=_thirdQuartileTrackers;
@property(retain, nonatomic) NSArray *midpointTrackers; // @synthesize midpointTrackers=_midpointTrackers;
@property(retain, nonatomic) NSArray *firstQuartileTrackers; // @synthesize firstQuartileTrackers=_firstQuartileTrackers;
@property(retain, nonatomic) NSArray *startTrackers; // @synthesize startTrackers=_startTrackers;
@property(readonly, nonatomic) NSArray *creativeViewTrackers; // @synthesize creativeViewTrackers=_creativeViewTrackers;
@property(retain, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(retain, nonatomic) NSArray *errorURLs; // @synthesize errorURLs=_errorURLs;
@property(retain, nonatomic) NSArray *clickTrackingURLs; // @synthesize clickTrackingURLs=_clickTrackingURLs;
@property(retain, nonatomic) NSURL *clickThroughURL; // @synthesize clickThroughURL=_clickThroughURL;
@property(retain, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
- (void).cxx_destruct;
- (id)dictionaryByMergingTrackingDictionaries:(id)arg1;
- (id)firstObjectForKey:(id)arg1 inDictionary:(id)arg2;
- (id)extensionFromInlineAd:(id)arg1 forKey:(id)arg2;
- (id)industryIconsFromWrapper:(id)arg1;
- (id)customClickURLsFromWrapper:(id)arg1;
- (id)clickTrackingURLsFromWrapper:(id)arg1;
- (id)trackingEventsFromWrapper:(id)arg1;
- (id)playbackCandidatesFromVASTResponse:(id)arg1;
- (void)commonInit:(id)arg1;
- (id)initWithVASTResponse:(id)arg1;

@end

@interface MPNativeAd : NSObject <MPNativeAdAdapterDelegate, MPNativeViewDelegate>
{
    _Bool _hasTrackedImpression;
    _Bool _hasTrackedClick;
    _Bool _hasAttachedToView;
    id <MPNativeAdDelegate> _delegate;
    id <MPNativeAdRenderer> _renderer;
    NSDate *_creationDate;
    NSMutableSet *_clickTrackerURLs;
    NSMutableSet *_impressionTrackerURLs;
    id <MPNativeAdAdapter> _adAdapter;
    NSString *_adIdentifier;
    MPNativeView *_associatedView;
}

@property(nonatomic) _Bool hasAttachedToView; // @synthesize hasAttachedToView=_hasAttachedToView;
@property(retain, nonatomic) MPNativeView *associatedView; // @synthesize associatedView=_associatedView;
@property(copy, nonatomic) NSString *adIdentifier; // @synthesize adIdentifier=_adIdentifier;
@property(nonatomic) _Bool hasTrackedClick; // @synthesize hasTrackedClick=_hasTrackedClick;
@property(nonatomic) _Bool hasTrackedImpression; // @synthesize hasTrackedImpression=_hasTrackedImpression;
@property(readonly, nonatomic) id <MPNativeAdAdapter> adAdapter; // @synthesize adAdapter=_adAdapter;
@property(retain, nonatomic) NSMutableSet *impressionTrackerURLs; // @synthesize impressionTrackerURLs=_impressionTrackerURLs;
@property(retain, nonatomic) NSMutableSet *clickTrackerURLs; // @synthesize clickTrackerURLs=_clickTrackerURLs;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) id <MPNativeAdRenderer> renderer; // @synthesize renderer=_renderer;
@property(nonatomic) __weak id <MPNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)nativeAdWillLeaveApplicationFromAdapter:(id)arg1;
- (void)nativeAdDidDismissModalForAdapter:(id)arg1;
- (void)nativeAdWillPresentModalForAdapter:(id)arg1;
- (void)nativeAdDidClick:(id)arg1;
- (void)nativeAdWillLogImpression:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (void)nativeViewWillMoveToSuperview:(id)arg1;
- (void)adViewTapped;
- (void)displayAdContent;
- (_Bool)isThirdPartyHandlingClicks;
- (void)willAttachToView:(id)arg1;
- (void)trackMetricForURL:(id)arg1;
- (void)trackMetricsForURLs:(id)arg1;
- (void)trackClick;
- (void)trackImpression;
@property(readonly, nonatomic) NSDictionary *properties;
- (id)retrieveAdViewWithError:(id *)arg1;
- (id)initWithAdAdapter:(id)arg1;
- (id)retrieveAdViewForSizeCalculationWithError:(id *)arg1;
- (void)updateAdViewSize:(struct CGSize)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPQRunLoopOperation : NSOperation
{
    int _state;
    NSThread *_runLoopThread;
    NSSet *_runLoopModes;
    NSError *_error;
}

@property(copy) NSError *error; // @synthesize error=_error;
@property(copy) NSSet *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
@property(retain) NSThread *runLoopThread; // @synthesize runLoopThread=_runLoopThread;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isConcurrent;
- (void)operationWillFinish;
- (void)operationDidStart;
- (void)finishWithError:(id)arg1;
- (void)cancelOnRunLoopThread;
- (void)startOnRunLoopThread;
@property int state; // @synthesize state=_state;
@property(readonly, copy) NSSet *actualRunLoopModes;
@property(readonly) _Bool isActualRunLoopThread;
@property(readonly) NSThread *actualRunLoopThread;
- (id)init;

@end

@interface Permissions : NSObject
{
}

+ (_Bool)hasPhotoPermission;

@end

@interface CommentComposeViewController : BaseViewController <UITextViewDelegate, UITextFieldDelegate, UINavigationControllerDelegate>
{
    _Bool _isEditingExistingComment;
    _Bool _isComposingCommentNotMessage;
    NSString *_placeHolderText;
    id <CommentComposeViewControllerDelegate> _delegate;
    CommentComposeView *_composeView;
    NSString *_targetPK;
}

@property(nonatomic) _Bool isComposingCommentNotMessage; // @synthesize isComposingCommentNotMessage=_isComposingCommentNotMessage;
@property(nonatomic) _Bool isEditingExistingComment; // @synthesize isEditingExistingComment=_isEditingExistingComment;
@property(copy, nonatomic) NSString *targetPK; // @synthesize targetPK=_targetPK;
@property(retain, nonatomic) CommentComposeView *composeView; // @synthesize composeView=_composeView;
@property(nonatomic) __weak id <CommentComposeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *placeHolderText; // @synthesize placeHolderText=_placeHolderText;
- (void).cxx_destruct;
- (void)didTapClose;
- (void)didTapSendButton:(id)arg1;
- (void)toggleSendButton:(id)arg1 asEnabled:(_Bool)arg2;
- (void)configureWithEditingComment:(id)arg1 andDelegate:(id)arg2;
- (void)configureWithMessage:(id)arg1 andDelegate:(id)arg2;
- (void)configureWithPost:(id)arg1 andDelegate:(id)arg2;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ToastView : BaseView <ToastViewProtocol>
{
    _Bool _hideActionLine;
    _Bool _isFading;
    UIImage *_icon;
    UIColor *_iconColor;
    NSString *_text;
    long long _type;
    BaseButton *_actionButton;
    UILabel *_label;
    UIImageView *_iconImageView;
    double _visibleKeyboardHeight;
}

+ (id)showMessageToastWithText:(id)arg1;
+ (id)showErrorToastWithText:(id)arg1;
+ (id)showToastWithIcon:(id)arg1 iconColor:(id)arg2 text:(id)arg3 type:(long long)arg4 animationType:(long long)arg5;
+ (id)showToastWithIcon:(id)arg1 iconColor:(id)arg2 text:(id)arg3 type:(long long)arg4;
@property(nonatomic) _Bool isFading; // @synthesize isFading=_isFading;
@property(nonatomic) double visibleKeyboardHeight; // @synthesize visibleKeyboardHeight=_visibleKeyboardHeight;
@property(retain, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic) _Bool hideActionLine; // @synthesize hideActionLine=_hideActionLine;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(retain, nonatomic) BaseButton *actionButton; // @synthesize actionButton=_actionButton;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(copy, nonatomic) UIColor *iconColor; // @synthesize iconColor=_iconColor;
@property(retain, nonatomic) UIImage *icon; // @synthesize icon=_icon;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (double)toastHeight;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ActionSheetItemWithCustomView : BaseActionSheetItem
{
    UIView *_view;
}

@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2 view:(id)arg3;

@end

@interface BaseSearchBar : UISearchBar
{
}

- (void)updateSearchBarBackgroundColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SVGImageCache : NSObject
{
    NSMutableDictionary *_cachedImages;
}

+ (id)sharedImageCache;
@property(retain, nonatomic) NSMutableDictionary *cachedImages; // @synthesize cachedImages=_cachedImages;
- (void).cxx_destruct;
- (void)addImageToCache:(id)arg1 forKey:(id)arg2;
- (id)cachedImageWithKey:(id)arg1;
- (void)clearImageCache:(id)arg1;
- (id)init;

@end

@interface SubredditHeaderView : BaseView <BaseModelObserver>
{
    _Bool _isFullyVisible;
    double _fullHeight;
    Subreddit *_subredditData;
    BaseButton *_postButton;
    id <SubredditHeaderViewCallback> _delegate;
    UIImageView *_navbarOverlayImageView;
    UILabel *_navbarTitleLabel;
    UIImageView *_backgroundImageView;
    UIView *_backgroundColorView;
    UIImageView *_logoImageView;
    UILabel *_mainLabel;
    UILabel *_detailLabel;
    UIView *_bottomLine;
    BaseButton *_followButton;
}

@property(nonatomic) _Bool isFullyVisible; // @synthesize isFullyVisible=_isFullyVisible;
@property(retain, nonatomic) BaseButton *followButton; // @synthesize followButton=_followButton;
@property(retain, nonatomic) UIView *bottomLine; // @synthesize bottomLine=_bottomLine;
@property(retain, nonatomic) UILabel *detailLabel; // @synthesize detailLabel=_detailLabel;
@property(retain, nonatomic) UILabel *mainLabel; // @synthesize mainLabel=_mainLabel;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
@property(retain, nonatomic) UIView *backgroundColorView; // @synthesize backgroundColorView=_backgroundColorView;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) UILabel *navbarTitleLabel; // @synthesize navbarTitleLabel=_navbarTitleLabel;
@property(retain, nonatomic) UIImageView *navbarOverlayImageView; // @synthesize navbarOverlayImageView=_navbarOverlayImageView;
@property(nonatomic) __weak id <SubredditHeaderViewCallback> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) BaseButton *postButton; // @synthesize postButton=_postButton;
@property(retain, nonatomic) Subreddit *subredditData; // @synthesize subredditData=_subredditData;
@property(nonatomic) double fullHeight; // @synthesize fullHeight=_fullHeight;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1;
- (void)updateViewWithTransformY:(double)arg1;
- (void)didTapFollow;
- (void)updateLayoutOfSubviews;
- (void)updateSubscriberCountLabel;
- (void)updateFollowButton;
- (void)setupContentSubViews;
- (void)updateBarColors:(id)arg1;
- (void)configureWithSubredditData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPMoPubNativeCustomEvent : MPNativeCustomEvent
{
}

- (void)requestAdWithCustomEventInfo:(id)arg1;

@end

@interface LiveTabViewController : PagedTabViewController <ActionSheetViewControllerDelegate, FeedPostCommentBarViewDelegate>
{
    LiveViewController *_liveController;
    LiveInfoViewController *_infoController;
    LiveEvent *_liveEvent;
    Post *_postData;
    FeedPostCommentsBarView *_commentBarView;
}

@property(retain, nonatomic) FeedPostCommentsBarView *commentBarView; // @synthesize commentBarView=_commentBarView;
@property(retain, nonatomic) Post *postData; // @synthesize postData=_postData;
@property(retain, nonatomic) LiveEvent *liveEvent; // @synthesize liveEvent=_liveEvent;
@property(retain, nonatomic) LiveInfoViewController *infoController; // @synthesize infoController=_infoController;
@property(retain, nonatomic) LiveViewController *liveController; // @synthesize liveController=_liveController;
- (void).cxx_destruct;
- (void)commentBarViewDidTapUpvote:(id)arg1;
- (void)commentBarViewDidTapDownvote:(id)arg1;
- (void)commentBarViewDidTapShare:(id)arg1;
- (void)commentBarViewDidTapComment:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)navigateToTheDetailedPostViewControllerWithPost:(id)arg1;
- (_Bool)prefersTabBarHidden;
- (void)didTapShare:(id)arg1;
- (void)configureWithPostData:(id)arg1;
- (void)configureWithURLString:(id)arg1;
- (long long)preferredStatusBarStyle;
- (struct UIEdgeInsets)preferredContentInset;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)configureNavigationBarAppearance;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPRewardedVideoConnection : NSObject
{
    NSURLConnection *_connection;
    NSURL *_url;
    unsigned long long _retryCount;
    double _accumulatedRetryInterval;
    id <MPRewardedVideoConnectionDelegate> _delegate;
}

@property(nonatomic) __weak id <MPRewardedVideoConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double accumulatedRetryInterval; // @synthesize accumulatedRetryInterval=_accumulatedRetryInterval;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (double)backoffTime:(unsigned long long)arg1;
- (void)retryRewardedVideoCompletionRequest;
- (void)sendRewardedVideoCompletionRequest;
- (id)initWithUrl:(id)arg1 delegate:(id)arg2;

@end

@interface SavedFeedViewController : FeedViewController
{
}

- (id)analyticsScreenViewName;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (void)viewDidLoad;

@end

@interface BaseActionSheetItem : NSObject
{
    _Bool _selected;
    NSString *_identifier;
    id _context;
}

@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithIdentifier:(id)arg1 context:(id)arg2;

@end

@interface CommentComposePlaceHolderView : BaseControl
{
    NSString *_placeHolderText;
    BaseTextView *_textView;
}

@property(retain, nonatomic) BaseTextView *textView; // @synthesize textView=_textView;
@property(copy, nonatomic) NSString *placeHolderText; // @synthesize placeHolderText=_placeHolderText;
- (void).cxx_destruct;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (id)init;

@end

@interface ContentDiskCacheManager : NSObject
{
    NSString *_cachePath;
    NSMutableDictionary *_contentDiskCache;
}

@property(retain, nonatomic) NSMutableDictionary *contentDiskCache; // @synthesize contentDiskCache=_contentDiskCache;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
- (void).cxx_destruct;
- (void)persistContentToDiskCache;
- (id)cachedContentForKey:(id)arg1;
- (void)removeContentForKey:(id)arg1;
- (void)cacheContent:(id)arg1 forKey:(id)arg2;
- (id)initWithCacheFolderPath:(id)arg1;

@end

@interface PostViewController : BaseViewController <ActionSheetViewControllerDelegate, RecentSubredditsViewControllerDelegate>
{
    SubredditBarView *_subredditDropdownView;
    NSString *_subredditName;
    id <PostViewControllerDelegate> _delegate;
    LoggedOutView *_loggedOutView;
}

@property(retain, nonatomic) LoggedOutView *loggedOutView; // @synthesize loggedOutView=_loggedOutView;
@property(nonatomic) __weak id <PostViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *subredditName; // @synthesize subredditName=_subredditName;
@property(retain, nonatomic) SubredditBarView *subredditDropdownView; // @synthesize subredditDropdownView=_subredditDropdownView;
- (void).cxx_destruct;
- (void)recentSubredditsViewController:(id)arg1 didSelectSubreddit:(id)arg2;
- (void)didTapClose;
- (void)didTapSubredditInfo;
- (void)didTapDropDown;
- (void)didTapSignupButton;
- (void)didTapLoginButton;
- (void)didTapClosePost;
- (void)didTapPostButton:(id)arg1;
- (void)viewDidLoad;
- (void)configureViewAppearance;
- (void)viewWillAppear:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PopupView : UIView
{
    double _visibleKeyboardHeight;
    UIViewController<PopupViewControllerProtocol> *_controller;
    UIControl *_dimmerView;
}

+ (id)instance;
@property(retain, nonatomic) UIControl *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(retain, nonatomic) UIViewController<PopupViewControllerProtocol> *controller; // @synthesize controller=_controller;
@property(nonatomic) double visibleKeyboardHeight; // @synthesize visibleKeyboardHeight=_visibleKeyboardHeight;
- (void).cxx_destruct;
- (void)didTapDimmerView;
- (void)dismissPopup:(_Bool)arg1;
- (void)showPopup:(_Bool)arg1;
- (void)centerControllerInScreen;
- (void)positionPopup:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithViewController:(id)arg1;
- (void)registerNotifications;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface MPHTMLInterstitialViewController : MPInterstitialViewController <MPAdWebViewAgentDelegate>
{
    id <MPInterstitialViewControllerDelegate> _delegate;
    MPAdWebViewAgent *_backingViewAgent;
    MPWebView *_backingView;
}

@property(retain, nonatomic) MPWebView *backingView; // @synthesize backingView=_backingView;
@property(retain, nonatomic) MPAdWebViewAgent *backingViewAgent; // @synthesize backingViewAgent=_backingViewAgent;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (void)adDidClose:(id)arg1;
- (void)adActionDidFinish:(id)arg1;
- (void)adActionWillLeaveApplication:(id)arg1;
- (void)adActionWillBegin:(id)arg1;
- (void)adDidFailToLoadAd:(id)arg1;
- (void)adDidFinishLoadingAd:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (id)adUnitId;
- (id)location;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)didDismissInterstitial;
- (void)willDismissInterstitial;
- (void)didPresentInterstitial;
- (void)willPresentInterstitial;
- (void)loadConfiguration:(id)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPURLResolver : NSObject <NSURLConnectionDataDelegate>
{
    NSURL *_originalURL;
    NSURL *_currentURL;
    NSURLConnection *_connection;
    NSMutableData *_responseData;
    CDUnknownBlockType _completion;
    unsigned long long _responseEncoding;
}

+ (id)resolverWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(nonatomic) unsigned long long responseEncoding; // @synthesize responseEncoding=_responseEncoding;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSURL *currentURL; // @synthesize currentURL=_currentURL;
@property(retain, nonatomic) NSURL *originalURL; // @synthesize originalURL=_originalURL;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (unsigned long long)stringEncodingFromContentType:(id)arg1;
- (id)safariURLForURL:(id)arg1;
- (id)storeItemIdentifierForURL:(id)arg1;
- (_Bool)URLPointsToAMap:(id)arg1;
- (_Bool)URLHasDeeplinkPlusScheme:(id)arg1;
- (_Bool)URLIsHTTPOrHTTPS:(id)arg1;
- (_Bool)URLShouldOpenInApplication:(id)arg1;
- (id)actionInfoFromURL:(id)arg1 error:(id *)arg2;
- (void)safeInvokeAndNilCompletionBlock:(id)arg1 error:(id)arg2;
- (void)cancel;
- (void)start;
- (id)initWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedPostCollectionViewCell : UICollectionViewCell
{
    FeedPostView *_feedPostView;
}

@property(retain, nonatomic) FeedPostView *feedPostView; // @synthesize feedPostView=_feedPostView;
- (void).cxx_destruct;
- (void)didEndDisplayingCell;
- (void)didBecomeFullyVisible;
- (void)willBeginDisplayingCell;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageHeaderCell : UICollectionViewCell
{
    MessageHeaderView *_messageHeaderView;
}

@property(retain, nonatomic) MessageHeaderView *messageHeaderView; // @synthesize messageHeaderView=_messageHeaderView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MediaModel : NSObject <NSCoding>
{
    NSString *_imageID;
    NSArray *_resolutionInfo;
    NSDictionary *_variantInfo;
}

+ (id)mediaModelFromData:(id)arg1;
@property(copy, nonatomic) NSDictionary *variantInfo; // @synthesize variantInfo=_variantInfo;
@property(copy, nonatomic) NSArray *resolutionInfo; // @synthesize resolutionInfo=_resolutionInfo;
@property(copy, nonatomic) NSString *imageID; // @synthesize imageID=_imageID;
- (void).cxx_destruct;
- (id)safeURLForDictionary:(id)arg1 key:(id)arg2;
- (_Bool)hasVideos;
- (id)debugDescription;
- (_Bool)hasBadImageQuality;
- (_Bool)isServerCroppingPreviewImages;
@property(readonly, copy, nonatomic) NSArray *allVideoURLs;
@property(readonly, copy, nonatomic) NSArray *allImageURLs;
- (struct CGSize)highestResolutionImageSize;
- (struct CGSize)lowestResolutionImageSize;
- (struct CGSize)lowestResolutionVideoSize;
- (struct CGSize)highestResolutionVideoSize;
- (struct CGSize)postVideoSizeFittingSize:(struct CGSize)arg1;
- (id)postVideoURLStringFittingSize:(struct CGSize)arg1;
- (id)lowestResolutionVideoURLString;
- (id)highestResolutionVideoURLString;
- (id)lowestResolutionVideoData;
- (id)highestResolutionVideoData;
- (id)lowestResolutionImageURLString;
- (id)highestResolutionImageURLString;
- (id)postImageURLStringFittingSize:(struct CGSize)arg1 shouldBlur:(_Bool)arg2;
- (id)postImageURLStringFittingSize:(struct CGSize)arg1;
- (struct CGSize)postImageSizeFittingSize:(struct CGSize)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface Token : NSObject
{
    unsigned short _command;
    NSMutableArray *_values;
}

@property(nonatomic) unsigned short command; // @synthesize command=_command;
- (void).cxx_destruct;
- (long long)valence;
- (double)parameter:(long long)arg1;
- (void)addValue:(double)arg1;
- (id)initWithCommand:(unsigned short)arg1;

@end

@interface PocketSVG : NSObject
{
    struct CGPoint _lastPoint;
    struct CGPoint _lastControlPoint;
    _Bool _validLastControlPoint;
    NSCharacterSet *_commandSet;
    NSMutableArray *_tokens;
    double _width;
    double _height;
    NSArray *_beziers;
}

@property(readonly, nonatomic) NSArray *beziers; // @synthesize beziers=_beziers;
@property(readonly, nonatomic) double height; // @synthesize height=_height;
@property(readonly, nonatomic) double width; // @synthesize width=_width;
- (void).cxx_destruct;
- (void)appendSVGSCommand:(id)arg1 toBezier:(struct UIBezierPath *)arg2;
- (void)appendSVGCCommand:(id)arg1 toBezier:(struct UIBezierPath *)arg2;
- (void)appendSVGLCommand:(id)arg1 toBezier:(struct UIBezierPath *)arg2;
- (void)appendSVGMCommand:(id)arg1 toBezier:(struct UIBezierPath *)arg2;
- (struct UIBezierPath *)generateBezierFromTokens:(id)arg1;
- (id)parsePath:(id)arg1;
- (struct UIBezierPath *)bezierFromPathElement:(id)arg1;
- (struct UIBezierPath *)bezierFromPolylineElement:(id)arg1;
- (struct UIBezierPath *)bezierFromLineElement:(id)arg1;
- (id)strokesFromXML:(id)arg1;
- (void)parseSVG:(id)arg1;
- (void)reset;
- (id)initFromSVGString:(id)arg1;
- (id)initFromSVGData:(id)arg1;
- (id)initFromSVGXML:(id)arg1;
- (id)initFromSVGFilename:(id)arg1 fileExtension:(id)arg2;
- (id)initFromSVGFile:(id)arg1;

@end

@interface SubredditFeedViewController : FeedViewController <UINavigationControllerDelegate, UICollectionViewDelegate, ActionSheetViewControllerDelegate, SubredditHeaderViewCallback>
{
    NSString *_subredditName;
    SubredditHeaderView *_headerView;
    FeedNavigationControllerDelegate *_navDelegate;
    BaseView *_tableHeaderPlaceholder;
    Subreddit *_subreddit;
}

@property(retain, nonatomic) Subreddit *subreddit; // @synthesize subreddit=_subreddit;
@property(retain, nonatomic) BaseView *tableHeaderPlaceholder; // @synthesize tableHeaderPlaceholder=_tableHeaderPlaceholder;
@property(retain, nonatomic) FeedNavigationControllerDelegate *navDelegate; // @synthesize navDelegate=_navDelegate;
@property(retain, nonatomic) SubredditHeaderView *headerView; // @synthesize headerView=_headerView;
@property(readonly, copy, nonatomic) NSString *subredditName; // @synthesize subredditName=_subredditName;
- (void).cxx_destruct;
- (void)commentBarViewDidTapShare:(id)arg1;
- (id)subredditParams;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)subredditHeaderViewDidTapFollowButton:(id)arg1;
- (void)subredditHeaderViewDidBecomeHidden:(id)arg1;
- (void)subredditHeaderViewDidBecomeVisible:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)toggleSubredditSubscription:(id)arg1;
- (double)floatingHeadingSnapDistance;
- (id)overflowItems;
- (_Bool)feedPostYouTubeEmbeddedViewShouldHideNsfw:(id)arg1;
- (_Bool)feedPostVideoViewShouldBlurNsfwPreviewImage:(id)arg1;
- (_Bool)feedPostImageViewShouldBlurNsfwImages:(id)arg1;
- (_Bool)feedPostTextViewShouldBlurNsfwImages:(id)arg1;
- (void)feedPostTitleView:(id)arg1 didTapLinkURL:(id)arg2;
- (_Bool)shouldBlurPreviews;
- (void)didTapPost;
- (void)setTimeParameter:(unsigned long long)arg1;
- (void)setSortType:(unsigned long long)arg1;
- (void)didTapCloseRoadblock;
- (void)willMoveFloatingHeaderViewWithTransformY:(double)arg1;
- (double)maxFloatingTransformY;
- (void)upgradeToBetaTesterIfPossibleWithSubredditName:(id)arg1;
- (void)configureWithSubreddit:(id)arg1;
- (void)configureWithSubredditName:(id)arg1;
- (void)configureNavigationBarAppearance;
- (struct UIEdgeInsets)preferredContentInset;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativeCustomEvent : NSObject
{
    id <MPNativeCustomEventDelegate> _delegate;
    MPImageDownloadQueue *_imageDownloadQueue;
}

@property(retain, nonatomic) MPImageDownloadQueue *imageDownloadQueue; // @synthesize imageDownloadQueue=_imageDownloadQueue;
@property(nonatomic) __weak id <MPNativeCustomEventDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)requestAdWithCustomEventInfo:(id)arg1;
- (void)precacheImagesWithURLs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface CommunityInfoViewController : WebViewController
{
    NSString *_subreddit;
}

@property(copy, nonatomic) NSString *subreddit; // @synthesize subreddit=_subreddit;
- (void).cxx_destruct;
- (void)configureWithSubreddit:(id)arg1;
- (id)analyticsScreenViewName;

@end

@interface MOPUBNativeVideoAdRendererSettings : NSObject <MPNativeAdRendererSettings>
{
    Class _renderingViewClass;
    CDUnknownBlockType _viewSizeHandler;
}

@property(copy, nonatomic) CDUnknownBlockType viewSizeHandler; // @synthesize viewSizeHandler=_viewSizeHandler;
@property(nonatomic) Class renderingViewClass; // @synthesize renderingViewClass=_renderingViewClass;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPImageDownloadQueue : NSObject
{
    _Bool _isCanceled;
    NSOperationQueue *_imageDownloadQueue;
}

@property _Bool isCanceled; // @synthesize isCanceled=_isCanceled;
@property(retain) NSOperationQueue *imageDownloadQueue; // @synthesize imageDownloadQueue=_imageDownloadQueue;
- (void).cxx_destruct;
- (void)cancelAllDownloads;
- (void)addDownloadImageURLs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 useCachedImage:(_Bool)arg3;
- (void)addDownloadImageURLs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MPNativeAdRequestTargeting : NSObject
{
    NSString *_keywords;
    CLLocation *_location;
    NSSet *_desiredAssets;
}

+ (id)targeting;
@property(retain, nonatomic) NSSet *desiredAssets; // @synthesize desiredAssets=_desiredAssets;
@property(copy, nonatomic) CLLocation *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
- (void).cxx_destruct;

@end

@interface MPClosableView : UIView <UIGestureRecognizerDelegate>
{
    _Bool _wasTapped;
    id <MPClosableViewDelegate> _delegate;
    long long _closeButtonType;
    long long _closeButtonLocation;
    UIButton *_closeButton;
    UIImage *_closeButtonImage;
    MPUserInteractionGestureRecognizer *_userInteractionRecognizer;
}

@property(retain, nonatomic) MPUserInteractionGestureRecognizer *userInteractionRecognizer; // @synthesize userInteractionRecognizer=_userInteractionRecognizer;
@property(retain, nonatomic) UIImage *closeButtonImage; // @synthesize closeButtonImage=_closeButtonImage;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) _Bool wasTapped; // @synthesize wasTapped=_wasTapped;
@property(nonatomic) long long closeButtonLocation; // @synthesize closeButtonLocation=_closeButtonLocation;
@property(nonatomic) long long closeButtonType; // @synthesize closeButtonType=_closeButtonType;
@property(nonatomic) __weak id <MPClosableViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)closeButtonPressed;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleInteraction:(id)arg1;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 closeButtonType:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPTimer : NSObject
{
    _Bool _isPaused;
    double _timeInterval;
    NSTimer *_timer;
    NSDate *_pauseDate;
    id _target;
    SEL _selector;
    NSString *_runLoopMode;
}

+ (id)timerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 repeats:(_Bool)arg4;
@property(copy, nonatomic) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
@property(nonatomic) _Bool isPaused; // @synthesize isPaused=_isPaused;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(copy, nonatomic) NSDate *pauseDate; // @synthesize pauseDate=_pauseDate;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
- (void).cxx_destruct;
- (double)initialTimeInterval;
- (_Bool)resume;
- (_Bool)pause;
- (_Bool)scheduleNow;
- (_Bool)isScheduled;
- (void)invalidate;
- (_Bool)isValid;
- (void)timerDidFire;
- (void)dealloc;

@end

@interface MPAdPositioning : NSObject <NSCopying>
{
    unsigned long long _repeatingInterval;
    NSMutableOrderedSet *_fixedPositions;
}

@property(retain, nonatomic) NSMutableOrderedSet *fixedPositions; // @synthesize fixedPositions=_fixedPositions;
@property(nonatomic) unsigned long long repeatingInterval; // @synthesize repeatingInterval=_repeatingInterval;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface SSKeychain : NSObject
{
}

+ (void)setAccessibilityType:(void *)arg1;
+ (void *)accessibilityType;
+ (id)accountsForService:(id)arg1 error:(id *)arg2;
+ (id)accountsForService:(id)arg1;
+ (id)allAccounts:(id *)arg1;
+ (id)allAccounts;
+ (_Bool)setPasswordData:(id)arg1 forService:(id)arg2 account:(id)arg3 error:(id *)arg4;
+ (_Bool)setPasswordData:(id)arg1 forService:(id)arg2 account:(id)arg3;
+ (_Bool)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3 error:(id *)arg4;
+ (_Bool)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3;
+ (_Bool)deletePasswordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (_Bool)deletePasswordForService:(id)arg1 account:(id)arg2;
+ (id)passwordDataForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (id)passwordDataForService:(id)arg1 account:(id)arg2;
+ (id)passwordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (id)passwordForService:(id)arg1 account:(id)arg2;

@end

@interface UserHeaderControl : ExpandableHeaderControl
{
}

@end

@interface MOPUBActivityIndicatorView : UIView
{
    UIActivityIndicatorView *_activityIndicator;
    UIView *_bgView;
}

@property(retain, nonatomic) UIView *bgView; // @synthesize bgView=_bgView;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
- (void).cxx_destruct;
- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)startAnimating;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPAdServerURLBuilder : NSObject
{
}

+ (_Bool)advertisingTrackingEnabled;
+ (id)queryParameterForAppTransportSecurity;
+ (id)queryParameterForBundleIdentifier;
+ (id)queryParameterForPhysicalScreenSize;
+ (id)queryParameterForAdSequence:(long long)arg1;
+ (id)queryParameterForDesiredAdAssets:(id)arg1;
+ (id)queryParameterForDeviceName;
+ (id)queryParameterForMobileCountryCode;
+ (id)queryParameterForMobileNetworkCode;
+ (id)queryParameterForISOCountryCode;
+ (id)queryParameterForCarrierName;
+ (id)queryParameterForApplicationVersion;
+ (id)queryParameterForConnectionType;
+ (id)queryParameterForDNT;
+ (id)queryParameterForMRAID;
+ (id)queryParameterForLocation:(id)arg1;
+ (id)queryParameterForTimeZone;
+ (id)queryParameterForScaleFactor;
+ (id)queryParameterForOrientation;
+ (id)queryParameterForKeywords:(id)arg1;
+ (id)URLWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 versionParameterName:(id)arg4 version:(id)arg5 testing:(_Bool)arg6 desiredAssets:(id)arg7 adSequence:(long long)arg8;
+ (id)URLWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 versionParameterName:(id)arg4 version:(id)arg5 testing:(_Bool)arg6 desiredAssets:(id)arg7;
+ (id)URLWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 testing:(_Bool)arg4;

@end

@interface OnboardingViewController : ListingViewController <UITableViewDataSource, UITableViewDelegate, AttributedLabelRegularDelegate>
{
    _Bool _shouldProceedToShowMainFeedView;
    NSObject<OnboardingViewControllerDelegate> *_delegate;
    AttributedLabelRegular *_headerView;
    BaseButton *_proceedButton;
    BaseView *_proceedButtonProgressiveBar;
    BaseTableView *_tableView;
    BaseView *_animationCanvas;
    BaseView *_statusBarOverlay;
}

@property(nonatomic) _Bool shouldProceedToShowMainFeedView; // @synthesize shouldProceedToShowMainFeedView=_shouldProceedToShowMainFeedView;
@property(retain, nonatomic) BaseView *statusBarOverlay; // @synthesize statusBarOverlay=_statusBarOverlay;
@property(retain, nonatomic) BaseView *animationCanvas; // @synthesize animationCanvas=_animationCanvas;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) BaseView *proceedButtonProgressiveBar; // @synthesize proceedButtonProgressiveBar=_proceedButtonProgressiveBar;
@property(retain, nonatomic) BaseButton *proceedButton; // @synthesize proceedButton=_proceedButton;
@property(retain, nonatomic) AttributedLabelRegular *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) __weak NSObject<OnboardingViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)animationSnooWithImageView:(id)arg1 delay:(double)arg2;
- (void)animateSnooAtIndex:(long long)arg1 isLastOne:(_Bool)arg2;
- (double)randomBetweenLowValue:(double)arg1 andHighValue:(double)arg2;
- (void)animate;
- (void)subscribeAndAnimate;
- (void)updateButtonColor;
- (id)suggestedButtonString;
- (long long)numberOfSelectedTopics;
- (void)updateProceedButtonVisual;
- (void)proceed;
- (void)didTapProceedButton;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (_Bool)prefersNavigationBarHidden;
- (_Bool)prefersTabBarHidden;
- (struct UIEdgeInsets)preferredContentInset;
- (id)majorContentScrollView;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FontStepSlider : LabeledStepSlider
{
}

@end

@interface PostStore : BaseStore
{
}

- (void)persistPost:(id)arg1;
- (void)fetchPostObjectsFromDisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getPostObjectFromPK:(id)arg1;
- (id)createOrGetPostObjectFromPK:(id)arg1;

@end

@interface MPActivityItemProviderWithSubject : UIActivityItemProvider
{
    NSString *_subject;
    NSString *_body;
}

@property(readonly, nonatomic) NSString *body; // @synthesize body=_body;
@property(readonly, nonatomic) NSString *subject; // @synthesize subject=_subject;
- (void).cxx_destruct;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)item;
- (id)initWithSubject:(id)arg1 body:(id)arg2;

@end

@interface MPActivityViewControllerHelper : NSObject
{
    id <MPActivityViewControllerHelperDelegate> _delegate;
}

@property(nonatomic) __weak id <MPActivityViewControllerHelperDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)presentActivityViewControllerWithSubject:(id)arg1 body:(id)arg2;
- (id)initializeActivityViewControllerWithSubject:(id)arg1 body:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (_Bool)presentActivityViewControllerWithTweetShareURL:(id)arg1;

@end

@interface SubredditBarView : BaseControl
{
    id _dropDownTarget;
    id _infoTarget;
    SEL _dropDownSelector;
    SEL _infoSelector;
    BaseImageView *_snooImageView;
    UILabel *_nameLabel;
    UIImageView *_arrowImageView;
    BaseButton *_infoButton;
}

@property(retain, nonatomic) BaseButton *infoButton; // @synthesize infoButton=_infoButton;
@property(retain, nonatomic) UIImageView *arrowImageView; // @synthesize arrowImageView=_arrowImageView;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) BaseImageView *snooImageView; // @synthesize snooImageView=_snooImageView;
@property(nonatomic) SEL infoSelector; // @synthesize infoSelector=_infoSelector;
@property(nonatomic) SEL dropDownSelector; // @synthesize dropDownSelector=_dropDownSelector;
@property(nonatomic) __weak id infoTarget; // @synthesize infoTarget=_infoTarget;
@property(nonatomic) __weak id dropDownTarget; // @synthesize dropDownTarget=_dropDownTarget;
- (void).cxx_destruct;
- (void)didTapInfoButton;
- (void)didTapDropDown;
- (void)setTarget:(id)arg1 selector:(SEL)arg2 forControlEvent:(unsigned long long)arg3;
- (void)layoutSubviews;
- (void)setSubredditName:(id)arg1;
- (id)init;

@end

@interface LiveUpdate : BaseModel
{
    _Bool _stricken;
    NSString *_body;
    NSAttributedString *_markdownBody;
    NSString *_name;
    NSString *_author;
    NSDate *_createdAt;
    NSArray *_embeds;
    NSArray *_renderedEmbeds;
}

+ (id)bodyForLiveUpdateWithoutEmbedUrls:(id)arg1;
+ (id)liveUpdateFromData:(id)arg1;
@property(nonatomic) _Bool stricken; // @synthesize stricken=_stricken;
@property(copy, nonatomic) NSArray *renderedEmbeds; // @synthesize renderedEmbeds=_renderedEmbeds;
@property(copy, nonatomic) NSArray *embeds; // @synthesize embeds=_embeds;
@property(copy, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSAttributedString *markdownBody; // @synthesize markdownBody=_markdownBody;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;

@end

@interface AuthenticationHeaderView : BaseView
{
    UIImageView *_headerLogoView;
    UILabel *_headerLabel;
    BaseButton *_closeButton;
}

@property(retain, nonatomic) BaseButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel=_headerLabel;
@property(retain, nonatomic) UIImageView *headerLogoView; // @synthesize headerLogoView=_headerLogoView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPBannerCustomEventAdapter : MPBaseBannerAdapter <MPPrivateBannerCustomEventDelegate>
{
    _Bool _hasTrackedImpression;
    _Bool _hasTrackedClick;
    MPBannerCustomEvent *_bannerCustomEvent;
    MPAdConfiguration *_configuration;
}

@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) MPBannerCustomEvent *bannerCustomEvent; // @synthesize bannerCustomEvent=_bannerCustomEvent;
@property(nonatomic) _Bool hasTrackedClick; // @synthesize hasTrackedClick=_hasTrackedClick;
@property(nonatomic) _Bool hasTrackedImpression; // @synthesize hasTrackedImpression=_hasTrackedImpression;
- (void).cxx_destruct;
- (void)trackClickOnce;
- (void)bannerCustomEventWillLeaveApplication:(id)arg1;
- (void)bannerCustomEventDidFinishAction:(id)arg1;
- (void)bannerCustomEventWillBeginAction:(id)arg1;
- (void)bannerCustomEvent:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)bannerCustomEvent:(id)arg1 didLoadAd:(id)arg2;
- (id)location;
- (id)bannerDelegate;
- (id)viewControllerForPresentingModalView;
- (id)adUnitId;
- (void)didDisplayAd;
- (void)rotateToOrientation:(long long)arg1;
- (void)getAdWithConfiguration:(id)arg1 containerSize:(struct CGSize)arg2;
- (void)unregisterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentReplyView : BaseScrollView <CommentTextViewDelegate, BaseTextViewDelegate, UITextViewDelegate, LinkViewControllerDelegate, CommentComposeKeyboardAccessoryViewDelegate>
{
    Comment *_comment;
    BaseTextView *_replyTextView;
    CommentTextView *_commentTextView;
    CommentComposeImageManager *_imageManager;
    CommentHeaderView *_commentHeaderView;
    BaseView *_seperatorLineView;
}

@property(retain, nonatomic) BaseView *seperatorLineView; // @synthesize seperatorLineView=_seperatorLineView;
@property(retain, nonatomic) CommentHeaderView *commentHeaderView; // @synthesize commentHeaderView=_commentHeaderView;
@property(retain, nonatomic) CommentComposeImageManager *imageManager; // @synthesize imageManager=_imageManager;
@property(retain, nonatomic) CommentTextView *commentTextView; // @synthesize commentTextView=_commentTextView;
@property(retain, nonatomic) BaseTextView *replyTextView; // @synthesize replyTextView=_replyTextView;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)commentTextViewDidChangeSelection:(id)arg1;
- (void)linkViewControllerDidTapInsert:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (void)commentTextViewDidWantToExpandOrCollapseCommandBar:(id)arg1;
- (void)commentTextViewDidWantToCollapse:(id)arg1;
- (void)commentTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)didTapCloseLinkPopUp;
- (void)commentComposeKeyboardAccessoryViewDidSelectPhotos:(id)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectCamera:(id)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectLink:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)configureWithComment:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedViewController : ListingViewController <FeedPostTitleViewDelegate, FeedPostWebLinkViewDelegate, FeedPostSelfTextViewDelegate, ReportViewControllerDelegate, FeedWebViewControllerDelegate, BaseModelObserver, MPNativeAdDelegate, HeaderBarViewDelegate, CarouselViewDelegate, ThemeUpdateCallbackProtocol, LiveBannerContentViewDelegate, ActionSheetViewControllerDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UICollectionViewDelegate, FeedPostCommentBarViewDelegate, FeedPostImageViewDelegate, FeedPostTextViewDelegate, FeedPostVideoViewDelegate, FeedPostYouTubeEmbeddedViewDelegate>
{
    _Bool _shouldFilterNotSafeForWorkForAnonymousUsers;
    _Bool _disableSorting;
    _Bool _disableAdvertisement;
    _Bool _showHiddenPosts;
    _Bool _hasFinishedFirstReload;
    _Bool _enableCarousel;
    unsigned long long _mode;
    unsigned long long _sortType;
    unsigned long long _timeParameter;
    NSIndexPath *_maxScrollIndexPath;
    NSString *_URLString;
    unsigned long long _feedSection;
    FeedViewFlowLayout *_feedViewFlowLayout;
    BaseCollectionView *_feedCollectionView;
    NSURL *_lastWebViewControllerURL;
}

@property(retain, nonatomic) NSURL *lastWebViewControllerURL; // @synthesize lastWebViewControllerURL=_lastWebViewControllerURL;
@property(retain, nonatomic) BaseCollectionView *feedCollectionView; // @synthesize feedCollectionView=_feedCollectionView;
@property(retain, nonatomic) FeedViewFlowLayout *feedViewFlowLayout; // @synthesize feedViewFlowLayout=_feedViewFlowLayout;
@property(nonatomic) unsigned long long feedSection; // @synthesize feedSection=_feedSection;
@property(copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(retain, nonatomic) NSIndexPath *maxScrollIndexPath; // @synthesize maxScrollIndexPath=_maxScrollIndexPath;
@property(nonatomic) _Bool enableCarousel; // @synthesize enableCarousel=_enableCarousel;
@property(nonatomic) _Bool hasFinishedFirstReload; // @synthesize hasFinishedFirstReload=_hasFinishedFirstReload;
@property(nonatomic) _Bool showHiddenPosts; // @synthesize showHiddenPosts=_showHiddenPosts;
@property(nonatomic) _Bool disableAdvertisement; // @synthesize disableAdvertisement=_disableAdvertisement;
@property(nonatomic) _Bool disableSorting; // @synthesize disableSorting=_disableSorting;
@property(nonatomic) unsigned long long timeParameter; // @synthesize timeParameter=_timeParameter;
@property(nonatomic) _Bool shouldFilterNotSafeForWorkForAnonymousUsers; // @synthesize shouldFilterNotSafeForWorkForAnonymousUsers=_shouldFilterNotSafeForWorkForAnonymousUsers;
@property(nonatomic) unsigned long long sortType; // @synthesize sortType=_sortType;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
- (void).cxx_destruct;
- (id)analyticsScrollEventParameters;
- (id)analyticsScreenViewParameters;
- (void)liveBannerContentViewDidTap:(id)arg1;
- (void)themeDidChange:(id)arg1;
- (void)showLightboxViewForImagePost:(id)arg1 fromContentImageView:(id)arg2;
- (void)showLightboxViewForVideoPost:(id)arg1 fromContentImageView:(id)arg2;
- (void)showFeedWebViewControllerForPost:(id)arg1;
- (void)carouselView:(id)arg1 didTapItem:(id)arg2;
- (void)headerBarViewDidTapRightButton:(id)arg1;
- (void)headerBarViewDidTapLeftButton:(id)arg1;
- (void)feedWebViewController:(id)arg1 didTapCommentsForPost:(id)arg2;
- (_Bool)feedPostVideoViewShouldBlurNsfwPreviewImage:(id)arg1;
- (void)feedPostVideoViewDidTap:(id)arg1;
- (void)notifyPossibleCellsAboutViewDisappearing;
- (_Bool)feedPostYouTubeEmbeddedViewShouldHideNsfw:(id)arg1;
- (void)feedPostYouTubeEmbeddedView:(id)arg1 handleURL:(id)arg2;
- (void)feedPostYouTubeEmbeddedViewDidTap:(id)arg1;
- (_Bool)feedPostImageViewShouldAlwaysShowImage:(id)arg1;
- (_Bool)feedPostImageViewShouldBlurNsfwImages:(id)arg1;
- (void)feedPostImageViewDidTap:(id)arg1;
- (void)showLightboxViewFromFeedPostView:(id)arg1;
- (void)feedPostSelfTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)feedPostTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (_Bool)feedPostTextViewShouldBlurSpoilers:(id)arg1;
- (_Bool)feedPostTextViewShouldBlurNsfwImages:(id)arg1;
- (_Bool)feedPostTextViewShouldHideThumbnail:(id)arg1;
- (void)feedPostTextView:(id)arg1 didTapImage:(id)arg2;
- (void)feedPostTextViewDidTapText:(id)arg1;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (_Bool)feedPostTextViewShouldShowSelfText:(id)arg1;
- (_Bool)feedPostTextViewShouldShowFlair:(id)arg1;
- (void)feedPostWebLinkViewDidTapLink:(id)arg1;
- (void)navigateToTheDetailedPostViewControllerWithPost:(id)arg1;
- (void)commentBarViewDidTapUpvote:(id)arg1;
- (void)commentBarViewDidTapDownvote:(id)arg1;
- (void)commentBarViewDidTapShare:(id)arg1;
- (void)commentBarViewDidTapComment:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideGilding:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideUsername:(id)arg1;
- (void)didTapCloseProfile:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideSubredditName:(id)arg1;
- (void)feedPostTitleView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)feedPostTitleView:(id)arg1 didTapOverflowWithPost:(id)arg2;
- (id)overflowItems;
- (void)handleTopSortItem:(id)arg1;
- (void)reloadFeedWithSortType:(unsigned long long)arg1 parameters:(id)arg2;
- (void)showSortActionSheetForController:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (id)viewControllerForPresentingModalView;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)listingNetworkSourceFeedAdTypeAllowed:(id)arg1;
- (_Bool)listingNetworkSourceShouldFilterObject:(id)arg1;
- (void)preCacheTextViewSizesForPost:(id)arg1;
- (void)listingNetworkSourceDidParseNewData:(id)arg1;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)updateContentViewsForData:(id)arg1;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (id)majorContentScrollView;
- (double)floatingHeadingSnapDistance;
- (void)adjustFloatingHeaderPositionForScrollView:(id)arg1;
- (void)scrollDidStopScrolling:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)startAutoplayVideoCellsInScrollView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)didTapOverflow:(id)arg1;
- (double)initialFloatingResistanceDistance;
- (void)fixNavbarLayout:(id)arg1;
- (void)viewDidLoad;
- (void)configureWithURLString:(id)arg1 sortType:(unsigned long long)arg2 parameters:(id)arg3;
- (void)configureWithURLString:(id)arg1 sortType:(unsigned long long)arg2;
- (void)configureWithURLString:(id)arg1 parameters:(id)arg2;
- (void)configureWithURLString:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseTableViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    BaseTableView *_tableView;
}

@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)majorContentView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithStyle:(long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVASTResponse : MPVASTModel
{
    NSArray *_ads;
    NSArray *_errorURLs;
    NSString *_version;
}

+ (id)modelMap;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSArray *errorURLs; // @synthesize errorURLs=_errorURLs;
@property(retain, nonatomic) NSArray *ads; // @synthesize ads=_ads;
- (void).cxx_destruct;

@end

@interface LoginFooterView : BaseView
{
    BaseLabel *_loginProgressText;
    BaseButton *_forgotButton;
}

@property(retain, nonatomic) BaseButton *forgotButton; // @synthesize forgotButton=_forgotButton;
@property(retain, nonatomic) BaseLabel *loginProgressText; // @synthesize loginProgressText=_loginProgressText;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FeedHistoryViewController : FeedViewController
{
    NSArray *_postHistoryIDs;
}

@property(retain, nonatomic) NSArray *postHistoryIDs; // @synthesize postHistoryIDs=_postHistoryIDs;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (id)init;

@end

@interface MPDiskLRUCacheFile : NSObject
{
    NSString *_filePath;
    double _lastModTimestamp;
    unsigned long long _fileSize;
}

@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(nonatomic) double lastModTimestamp; // @synthesize lastModTimestamp=_lastModTimestamp;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;

@end

@interface MPDiskLRUCache : NSObject
{
    NSObject<OS_dispatch_queue> *_diskIOQueue;
    NSString *_diskCachePath;
    unsigned long long _numBytesStoredForSizeCheck;
}

+ (id)sharedDiskCache;
@property unsigned long long numBytesStoredForSizeCheck; // @synthesize numBytesStoredForSizeCheck=_numBytesStoredForSizeCheck;
@property(copy, nonatomic) NSString *diskCachePath; // @synthesize diskCachePath=_diskCachePath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *diskIOQueue; // @synthesize diskIOQueue=_diskIOQueue;
- (void).cxx_destruct;
- (id)cacheFilePathForKey:(id)arg1;
- (unsigned long long)sizeOfCacheFilesInArray:(id)arg1;
- (id)cacheFilesSortedByModDate;
- (id)expiredCachedFilesInArray:(id)arg1;
- (void)ensureCacheSizeLimit;
- (void)storeData:(id)arg1 forKey:(id)arg2;
- (id)retrieveDataForKey:(id)arg1;
- (_Bool)cachedDataExistsForKey:(id)arg1;
- (void)removeAllCachedFiles;
- (void)dealloc;
- (id)init;

@end

@interface LightboxTopBarView : BaseView
{
    BaseView *_dimmerView;
    BaseButton *_saveButton;
    BaseButton *_closeButton;
}

@property(retain, nonatomic) BaseButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) BaseButton *saveButton; // @synthesize saveButton=_saveButton;
@property(retain, nonatomic) BaseView *dimmerView; // @synthesize dimmerView=_dimmerView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPNativeAdSourceQueue : NSObject
{
    _Bool _isAdLoading;
    id <MPNativeAdSourceQueueDelegate> _delegate;
    NSMutableArray *_adQueue;
    unsigned long long _adFetchRetryCounter;
    unsigned long long _currentSequence;
    NSString *_adUnitIdentifier;
    MPNativeAdRequestTargeting *_targeting;
    NSArray *_rendererConfigurations;
}

@property(nonatomic) _Bool isAdLoading; // @synthesize isAdLoading=_isAdLoading;
@property(retain, nonatomic) NSArray *rendererConfigurations; // @synthesize rendererConfigurations=_rendererConfigurations;
@property(retain, nonatomic) MPNativeAdRequestTargeting *targeting; // @synthesize targeting=_targeting;
@property(copy, nonatomic) NSString *adUnitIdentifier; // @synthesize adUnitIdentifier=_adUnitIdentifier;
@property(nonatomic) unsigned long long currentSequence; // @synthesize currentSequence=_currentSequence;
@property(nonatomic) unsigned long long adFetchRetryCounter; // @synthesize adFetchRetryCounter=_adFetchRetryCounter;
@property(retain, nonatomic) NSMutableArray *adQueue; // @synthesize adQueue=_adQueue;
@property(nonatomic) __weak id <MPNativeAdSourceQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)replenishCache;
- (void)loadAds;
- (void)resetBackoff;
- (_Bool)isAdAgeValid:(id)arg1 withMaxAge:(double)arg2;
- (void)cancelRequests;
- (unsigned long long)count;
- (void)addNativeAd:(id)arg1;
- (id)dequeueAdWithMaxAge:(double)arg1;
- (id)dequeueAd;
- (id)initWithAdUnitIdentifier:(id)arg1 rendererConfigurations:(id)arg2 andTargeting:(id)arg3;

@end

@interface ActivityItemProvider : UIActivityItemProvider
{
}

- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;

@end

@interface MPHTMLBannerCustomEvent : MPBannerCustomEvent <MPAdWebViewAgentDelegate>
{
    MPAdWebViewAgent *_bannerAgent;
}

@property(retain, nonatomic) MPAdWebViewAgent *bannerAgent; // @synthesize bannerAgent=_bannerAgent;
- (void).cxx_destruct;
- (void)adActionWillLeaveApplication:(id)arg1;
- (void)adActionDidFinish:(id)arg1;
- (void)adActionWillBegin:(id)arg1;
- (void)adDidClose:(id)arg1;
- (void)adDidFailToLoadAd:(id)arg1;
- (void)adDidFinishLoadingAd:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (id)adUnitId;
- (id)location;
- (void)rotateToOrientation:(long long)arg1;
- (void)dealloc;
- (void)requestAdWithSize:(struct CGSize)arg1 customEventInfo:(id)arg2;
- (_Bool)enableAutomaticImpressionAndClickTracking;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <MPPrivateBannerCustomEventDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ContentImageView : LoaderContentView
{
    _Bool _shouldAspectFillImageToFullImageView;
    _Bool _failed;
    NSString *_imageURLString;
    BaseImageView *_internalImageView;
    NSArray *_backupImageURLStrings;
    id <ContentImageViewDelegate> _delegate;
    UITapGestureRecognizer *_tapGesture;
    struct CGSize _contentImageSize;
}

@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(nonatomic) _Bool failed; // @synthesize failed=_failed;
@property(nonatomic) __weak id <ContentImageViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *backupImageURLStrings; // @synthesize backupImageURLStrings=_backupImageURLStrings;
@property(nonatomic) _Bool shouldAspectFillImageToFullImageView; // @synthesize shouldAspectFillImageToFullImageView=_shouldAspectFillImageToFullImageView;
@property(nonatomic) struct CGSize contentImageSize; // @synthesize contentImageSize=_contentImageSize;
@property(retain, nonatomic) BaseImageView *internalImageView; // @synthesize internalImageView=_internalImageView;
@property(copy, nonatomic) NSString *imageURLString; // @synthesize imageURLString=_imageURLString;
- (void).cxx_destruct;
- (void)didTapImage;
- (void)setFrame:(struct CGRect)arg1;
- (void)sharedInit;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface MPVASTWrapper : MPVASTModel
{
    NSArray *_creatives;
    NSArray *_errorURLs;
    NSArray *_extensions;
    NSArray *_impressionURLs;
    NSURL *_VASTAdTagURI;
    MPVASTResponse *_wrappedVASTResponse;
}

+ (id)modelMap;
@property(retain, nonatomic) MPVASTResponse *wrappedVASTResponse; // @synthesize wrappedVASTResponse=_wrappedVASTResponse;
@property(readonly, copy, nonatomic) NSURL *VASTAdTagURI; // @synthesize VASTAdTagURI=_VASTAdTagURI;
@property(readonly, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(readonly, nonatomic) NSArray *extensions; // @synthesize extensions=_extensions;
@property(readonly, nonatomic) NSArray *errorURLs; // @synthesize errorURLs=_errorURLs;
@property(readonly, nonatomic) NSArray *creatives; // @synthesize creatives=_creatives;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface MPUserInteractionGestureRecognizer : UIGestureRecognizer
{
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface MPVASTResource : MPVASTModel
{
    NSString *_content;
    NSString *_staticCreativeType;
}

+ (id)modelMap;
@property(readonly, nonatomic) NSString *staticCreativeType; // @synthesize staticCreativeType=_staticCreativeType;
@property(readonly, nonatomic) NSString *content; // @synthesize content=_content;
- (void).cxx_destruct;

@end

@interface SafariWebViewController : BaseWebViewController <SFSafariViewControllerDelegate>
{
    _Bool _navigationBarWasHidden;
    SFSafariViewController *_safariController;
    NSURLRequest *_URLRequest;
}

@property(copy, nonatomic) NSURLRequest *URLRequest; // @synthesize URLRequest=_URLRequest;
@property(retain, nonatomic) SFSafariViewController *safariController; // @synthesize safariController=_safariController;
@property(nonatomic) _Bool navigationBarWasHidden; // @synthesize navigationBarWasHidden=_navigationBarWasHidden;
- (void).cxx_destruct;
- (void)loadRequest:(id)arg1;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)viewWillLayoutSubviews;
- (struct UIEdgeInsets)preferredContentInset;
- (void)didMoveToParentViewController:(id)arg1;
- (id)webPageTitle;
- (id)originalRequestURL;
- (id)currentURL;
- (void)viewDidLoad;
- (_Bool)prefersNavigationBarHidden;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PermissionViewController : BaseViewController <PopupViewControllerProtocol>
{
    BaseLabel *_textLabel;
    BaseButton *_allowButton;
    BaseButton *_denyButton;
    CDUnknownBlockType _completionHandler;
}

+ (void)presentPermissionViewControllerWithTitle:(id)arg1 message:(id)arg2 allowButtonTitle:(id)arg3 denyButtonTitle:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) BaseButton *denyButton; // @synthesize denyButton=_denyButton;
@property(retain, nonatomic) BaseButton *allowButton; // @synthesize allowButton=_allowButton;
@property(retain, nonatomic) BaseLabel *textLabel; // @synthesize textLabel=_textLabel;
- (void).cxx_destruct;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
@property(readonly, nonatomic) double preferredPopupHeight;
- (void)didTouchDenyButton:(id)arg1;
- (void)didTouchAllowButton:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LoggedOutView : BaseView
{
    UIButton *_loginButton;
    UIButton *_signupButton;
    UILabel *_titleLabel;
    UIImageView *_logoImageView;
}

@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIButton *signupButton; // @synthesize signupButton=_signupButton;
@property(retain, nonatomic) UIButton *loginButton; // @synthesize loginButton=_loginButton;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPRewardedVideo : NSObject <MPRewardedVideoAdManagerDelegate, MPRewardedVideoConnectionDelegate>
{
    NSMutableDictionary *_rewardedVideoAdManagers;
    id <MPRewardedVideoDelegate> _delegate;
    NSMutableArray *_rewardedVideoConnections;
}

+ (void)initializeWithDelegate:(id)arg1;
+ (id)sharedInstance;
+ (void)presentRewardedVideoAdForAdUnitID:(id)arg1 fromViewController:(id)arg2;
+ (_Bool)hasAdAvailableForAdUnitID:(id)arg1;
+ (void)loadRewardedVideoAdWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 customerId:(id)arg4 mediationSettings:(id)arg5;
+ (void)loadRewardedVideoAdWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 mediationSettings:(id)arg4;
+ (void)loadRewardedVideoAdWithAdUnitID:(id)arg1 withMediationSettings:(id)arg2;
@property(retain, nonatomic) NSMutableArray *rewardedVideoConnections; // @synthesize rewardedVideoConnections=_rewardedVideoConnections;
@property(nonatomic) __weak id <MPRewardedVideoDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableDictionary *rewardedVideoAdManagers; // @synthesize rewardedVideoAdManagers=_rewardedVideoAdManagers;
- (void).cxx_destruct;
- (void)rewardedVideoConnectionCompleted:(id)arg1 url:(id)arg2;
- (void)startRewardedVideoConnectionWithUrl:(id)arg1;
- (void)rewardedVideoShouldRewardUserForAdManager:(id)arg1 reward:(id)arg2;
- (void)rewardedVideoWillLeaveApplicationForAdManager:(id)arg1;
- (void)rewardedVideoDidReceiveTapEventForAdManager:(id)arg1;
- (void)rewardedVideoDidDisappearForAdManager:(id)arg1;
- (void)rewardedVideoWillDisappearForAdManager:(id)arg1;
- (void)rewardedVideoDidAppearForAdManager:(id)arg1;
- (void)rewardedVideoWillAppearForAdManager:(id)arg1;
- (void)rewardedVideoDidFailToPlayForAdManager:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidExpireForAdManager:(id)arg1;
- (void)rewardedVideoDidFailToLoadForAdManager:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidLoadForAdManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EditPostView : BaseScrollView <LinkViewControllerDelegate>
{
    Post *_post;
    BaseLabel *_titleLabel;
    BaseView *_titleDivider;
    BaseTextView *_bodyTextView;
}

@property(retain, nonatomic) BaseTextView *bodyTextView; // @synthesize bodyTextView=_bodyTextView;
@property(retain, nonatomic) BaseView *titleDivider; // @synthesize titleDivider=_titleDivider;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
- (void).cxx_destruct;
- (void)linkViewControllerDidTapInsert:(id)arg1;
- (void)didTapCloseLink;
- (void)didTapLinkButton;
- (void)configureWithPost:(id)arg1;
- (void)layoutSubviews;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseTableViewCell : UITableViewCell
{
    UIView *_mainContentView;
}

@property(retain, nonatomic) UIView *mainContentView; // @synthesize mainContentView=_mainContentView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)setAccessoryView:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CommunityContentView : SwipyContentView
{
    _Bool _enableDeletion;
    _Bool _enableFavoriting;
    BaseButton *_subscribeButton;
    ImageLabelContentView *_mainCommunityContentView;
    BaseButton *_deleteButton;
    BaseButton *_favoriteButton;
    BaseView *_swipeContainerView;
}

@property(retain, nonatomic) BaseView *swipeContainerView; // @synthesize swipeContainerView=_swipeContainerView;
@property(retain, nonatomic) BaseButton *favoriteButton; // @synthesize favoriteButton=_favoriteButton;
@property(retain, nonatomic) BaseButton *deleteButton; // @synthesize deleteButton=_deleteButton;
@property(retain, nonatomic) ImageLabelContentView *mainCommunityContentView; // @synthesize mainCommunityContentView=_mainCommunityContentView;
@property(retain, nonatomic) BaseButton *subscribeButton; // @synthesize subscribeButton=_subscribeButton;
@property(nonatomic) _Bool enableFavoriting; // @synthesize enableFavoriting=_enableFavoriting;
@property(nonatomic) _Bool enableDeletion; // @synthesize enableDeletion=_enableDeletion;
- (void).cxx_destruct;
- (void)prepareContentViewForReuse;
- (void)refreshSwipeView;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CommentTextView : VerticalLineView <AttributedLabelDelegate, UIGestureRecognizerDelegate, BaseModelObserver>
{
    _Bool _shouldIgnoreLeveling;
    Comment *_comment;
    id <CommentTextViewDelegate> _delegate;
    AttributedLabel *_textViewLabel;
    UITapGestureRecognizer *_doubleTapRecognizer;
    UILongPressGestureRecognizer *_longPressRecognizer;
}

+ (struct CGSize)calculatedSizeOfTextViewWithData:(id)arg1 shouldIgnoreLeveling:(_Bool)arg2 useRawMarkdown:(_Bool)arg3;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 shouldIgnoreLeveling:(_Bool)arg2 useRawMarkdown:(_Bool)arg3;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressRecognizer; // @synthesize longPressRecognizer=_longPressRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapRecognizer; // @synthesize doubleTapRecognizer=_doubleTapRecognizer;
@property(retain, nonatomic) AttributedLabel *textViewLabel; // @synthesize textViewLabel=_textViewLabel;
@property(nonatomic) __weak id <CommentTextViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldIgnoreLeveling; // @synthesize shouldIgnoreLeveling=_shouldIgnoreLeveling;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)attributedLabelDidChangeSelection:(id)arg1;
- (void)didDoubleTapComment:(id)arg1;
- (void)attributedLabel:(id)arg1 didSelectCaptionedLinkWithURL:(id)arg2 caption:(id)arg3 range:(struct _NSRange)arg4;
- (void)attributedLabel:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)layoutSubviews;
- (void)updateLastVerticalLineColorForVoteStatus;
- (void)updateContentViewsForData:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)didLongTap;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PlayerView : BaseView
{
    _Bool _autoloop;
}

+ (Class)layerClass;
@property(nonatomic) _Bool autoloop; // @synthesize autoloop=_autoloop;
- (void)playerReachedEnd:(id)arg1;
@property(nonatomic) __weak AVPlayer *player;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface PostProgressViewCollectionCell : ProgressViewCollectionCell <BaseModelObserver>
{
    SubmittedPost *_post;
}

@property(retain, nonatomic) SubmittedPost *post; // @synthesize post=_post;
- (void).cxx_destruct;
- (void)updateContentViews;
- (void)updateContentViewsForData:(id)arg1;
- (void)prepareForReuse;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SubmittedFeedViewController : FeedViewController
{
    NSArray *_inProgressSubmissions;
    NSArray *_progressViews;
}

@property(copy, nonatomic) NSArray *progressViews; // @synthesize progressViews=_progressViews;
@property(copy, nonatomic) NSArray *inProgressSubmissions; // @synthesize inProgressSubmissions=_inProgressSubmissions;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (void)submittedPostWasCancelled:(id)arg1;
- (void)submittedPostDidSucceed:(id)arg1;
- (void)submittedPostDidFail:(id)arg1;
- (void)submittedPostDidBegin:(id)arg1;
- (void)didTapCancel:(id)arg1;
- (void)didTapRetry:(id)arg1;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 withPost:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

@end

@interface LiveTweetEmbedView : LiveUpdateEmbedView <TWTRTweetViewDelegate>
{
    TWTRTweetView *_tweetView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) TWTRTweetView *tweetView; // @synthesize tweetView=_tweetView;
- (void).cxx_destruct;
- (void)tweetView:(id)arg1 didTapVideoWithURL:(id)arg2;
- (void)tweetView:(id)arg1 didTapImage:(id)arg2 withURL:(id)arg3;
- (void)tweetView:(id)arg1 didTapURL:(id)arg2;
- (_Bool)tweetView:(id)arg1 shouldDisplayDetailViewController:(id)arg2;
- (void)themeDidChange:(id)arg1;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)configureWithEmbedData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentView : BaseView
{
    _Bool _isTopLevelExcludingFirst;
    Comment *_comment;
    CommentHeaderView *_headerView;
    CommentTextView *_textView;
    CommentCommandView *_commandView;
    CommentImagesView *_imagesView;
    CommentLoadMoreView *_loadMoreView;
    id _delegate;
    BaseView *_topLevelSpacerView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 atIndexPath:(id)arg2;
@property(retain, nonatomic) BaseView *topLevelSpacerView; // @synthesize topLevelSpacerView=_topLevelSpacerView;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isTopLevelExcludingFirst; // @synthesize isTopLevelExcludingFirst=_isTopLevelExcludingFirst;
@property(retain, nonatomic) CommentLoadMoreView *loadMoreView; // @synthesize loadMoreView=_loadMoreView;
@property(retain, nonatomic) CommentImagesView *imagesView; // @synthesize imagesView=_imagesView;
@property(retain, nonatomic) CommentCommandView *commandView; // @synthesize commandView=_commandView;
@property(retain, nonatomic) CommentTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) CommentHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)setShouldHighlightBackground:(_Bool)arg1;
- (void)setLoadingMoreText:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2 atIndexPath:(id)arg3;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageRepliesViewController : BaseViewController <UICollectionViewDataSource, UICollectionViewDelegate, UITextViewDelegate, AttributedLabelDelegate, CommentComposeViewControllerDelegate>
{
    id <MessagesRepliesViewControllerProcotol> _delegate;
    NSArray *_currentMessages;
    Message *_rootMessage;
    BaseCollectionView *_feedCollectionView;
    FeedViewFlowLayout *_feedViewFlowLayout;
    NSArray *_previousMessageVisuals;
    NSArray *_currentMessageVisuals;
    ThreadedObjectManager *_objectManager;
    CommentComposePlaceHolderView *_replyTextView;
    NSIndexPath *_indexPathOfFirstUnread;
}

@property(retain, nonatomic) NSIndexPath *indexPathOfFirstUnread; // @synthesize indexPathOfFirstUnread=_indexPathOfFirstUnread;
@property(retain, nonatomic) CommentComposePlaceHolderView *replyTextView; // @synthesize replyTextView=_replyTextView;
@property(retain, nonatomic) ThreadedObjectManager *objectManager; // @synthesize objectManager=_objectManager;
@property(copy, nonatomic) NSArray *currentMessageVisuals; // @synthesize currentMessageVisuals=_currentMessageVisuals;
@property(copy, nonatomic) NSArray *previousMessageVisuals; // @synthesize previousMessageVisuals=_previousMessageVisuals;
@property(retain, nonatomic) FeedViewFlowLayout *feedViewFlowLayout; // @synthesize feedViewFlowLayout=_feedViewFlowLayout;
@property(retain, nonatomic) BaseCollectionView *feedCollectionView; // @synthesize feedCollectionView=_feedCollectionView;
@property(retain, nonatomic) Message *rootMessage; // @synthesize rootMessage=_rootMessage;
@property(retain, nonatomic) NSArray *currentMessages; // @synthesize currentMessages=_currentMessages;
@property(nonatomic) __weak id <MessagesRepliesViewControllerProcotol> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)attributedLabel:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)commentComposeViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2 newItem:(id)arg3;
- (void)commentComposeViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2 editedItem:(id)arg3;
- (void)didTapSendMessageButton;
- (_Bool)shouldDisableSendMessageButton;
- (id)firstMessageThatRespondedToMe;
- (void)highlightCommentsInRect:(struct CGRect)arg1 duration:(double)arg2;
- (void)reloadMessagesCollectionViewWithCompletion:(CDUnknownBlockType)arg1 animated:(_Bool)arg2 highlight:(_Bool)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)majorContentView;
- (struct UIEdgeInsets)preferredContentInset;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (_Bool)prefersTabBarHidden;
- (void)configureWithMessage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ProgressContentView : UIView
{
    double _progressPercentage;
    UILabel *_mainLabel;
    UIImageView *_imageView;
    BaseButton *_retryButton;
    BaseButton *_cancelButton;
    BaseProgressView *_progressView;
}

@property(retain, nonatomic) BaseProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) BaseButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) BaseButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UILabel *mainLabel; // @synthesize mainLabel=_mainLabel;
@property(nonatomic) double progressPercentage; // @synthesize progressPercentage=_progressPercentage;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface FeedPostTitleView : BaseView <AttributedLabelRegularDelegate, BaseModelObserver>
{
    _Bool _shouldHideOverflowButtonForCommentsView;
    NSObject<FeedPostTitleViewDelegate> *_delegate;
    Post *_post;
    AttributedLabelRegular *_titleLabel;
    AttributedLabelRegular *_iconsLabel;
    BaseButton *_overflowButton;
}

+ (double)topInset;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegate:(id)arg2;
@property(nonatomic) _Bool shouldHideOverflowButtonForCommentsView; // @synthesize shouldHideOverflowButtonForCommentsView=_shouldHideOverflowButtonForCommentsView;
@property(retain, nonatomic) BaseButton *overflowButton; // @synthesize overflowButton=_overflowButton;
@property(retain, nonatomic) AttributedLabelRegular *iconsLabel; // @synthesize iconsLabel=_iconsLabel;
@property(retain, nonatomic) AttributedLabelRegular *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak NSObject<FeedPostTitleViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1;
- (void)didTapOverflowButton:(id)arg1;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)layoutSubviews;
- (void)appendBulletSeparatorToMutableAttributedString:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)gildedIcon;
- (id)iconsForData:(id)arg1;
- (id)textAttachmentWithImageNamed:(id)arg1;
- (void)reconfigureViews:(id)arg1;
- (void)showBottomBorder:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)prepareForReuse;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Carousel : FeedObjectModel
{
    NSDictionary *_networkData;
    NSArray *_postObjects;
}

@property(copy, nonatomic) NSArray *postObjects; // @synthesize postObjects=_postObjects;
@property(retain, nonatomic) NSDictionary *networkData; // @synthesize networkData=_networkData;
- (void).cxx_destruct;

@end

@interface MPAdConfiguration : NSObject
{
    _Bool _adUnitWarmingUp;
    _Bool _shouldInterceptLinks;
    _Bool _scrollable;
    _Bool _precacheRequired;
    _Bool _isVastVideoPlayer;
    _Bool _forceUIWebView;
    unsigned long long _adType;
    NSString *_networkType;
    NSURL *_clickTrackingURL;
    NSURL *_impressionTrackingURL;
    NSURL *_failoverURL;
    NSURL *_interceptURLPrefix;
    double _refreshInterval;
    double _adTimeoutInterval;
    NSData *_adResponseData;
    NSDictionary *_nativeSDKParameters;
    NSString *_customSelectorName;
    Class _customEventClass;
    NSDictionary *_customEventClassData;
    unsigned long long _orientationType;
    NSString *_dspCreativeId;
    NSDate *_creationTimestamp;
    NSString *_creativeId;
    NSString *_headerAdType;
    long long _nativeVideoPlayVisiblePercent;
    long long _nativeVideoPauseVisiblePercent;
    long long _nativeVideoImpressionMinVisiblePercent;
    double _nativeVideoImpressionVisible;
    double _nativeVideoMaxBufferingTime;
    MPRewardedVideoReward *_rewardedVideoReward;
    NSString *_rewardedVideoCompletionUrl;
    NSString *_adResponseHTMLString;
    struct CGSize _preferredSize;
}

@property(copy, nonatomic) NSString *adResponseHTMLString; // @synthesize adResponseHTMLString=_adResponseHTMLString;
@property(nonatomic) _Bool forceUIWebView; // @synthesize forceUIWebView=_forceUIWebView;
@property(copy, nonatomic) NSString *rewardedVideoCompletionUrl; // @synthesize rewardedVideoCompletionUrl=_rewardedVideoCompletionUrl;
@property(retain, nonatomic) MPRewardedVideoReward *rewardedVideoReward; // @synthesize rewardedVideoReward=_rewardedVideoReward;
@property(nonatomic) double nativeVideoMaxBufferingTime; // @synthesize nativeVideoMaxBufferingTime=_nativeVideoMaxBufferingTime;
@property(nonatomic) double nativeVideoImpressionVisible; // @synthesize nativeVideoImpressionVisible=_nativeVideoImpressionVisible;
@property(nonatomic) long long nativeVideoImpressionMinVisiblePercent; // @synthesize nativeVideoImpressionMinVisiblePercent=_nativeVideoImpressionMinVisiblePercent;
@property(nonatomic) long long nativeVideoPauseVisiblePercent; // @synthesize nativeVideoPauseVisiblePercent=_nativeVideoPauseVisiblePercent;
@property(nonatomic) long long nativeVideoPlayVisiblePercent; // @synthesize nativeVideoPlayVisiblePercent=_nativeVideoPlayVisiblePercent;
@property(copy, nonatomic) NSString *headerAdType; // @synthesize headerAdType=_headerAdType;
@property(copy, nonatomic) NSString *creativeId; // @synthesize creativeId=_creativeId;
@property(retain, nonatomic) NSDate *creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(nonatomic) _Bool isVastVideoPlayer; // @synthesize isVastVideoPlayer=_isVastVideoPlayer;
@property(nonatomic) _Bool precacheRequired; // @synthesize precacheRequired=_precacheRequired;
@property(copy, nonatomic) NSString *dspCreativeId; // @synthesize dspCreativeId=_dspCreativeId;
@property(nonatomic) unsigned long long orientationType; // @synthesize orientationType=_orientationType;
@property(retain, nonatomic) NSDictionary *customEventClassData; // @synthesize customEventClassData=_customEventClassData;
@property(nonatomic) Class customEventClass; // @synthesize customEventClass=_customEventClass;
@property(copy, nonatomic) NSString *customSelectorName; // @synthesize customSelectorName=_customSelectorName;
@property(retain, nonatomic) NSDictionary *nativeSDKParameters; // @synthesize nativeSDKParameters=_nativeSDKParameters;
@property(copy, nonatomic) NSData *adResponseData; // @synthesize adResponseData=_adResponseData;
@property(nonatomic) double adTimeoutInterval; // @synthesize adTimeoutInterval=_adTimeoutInterval;
@property(nonatomic) double refreshInterval; // @synthesize refreshInterval=_refreshInterval;
@property(nonatomic) _Bool scrollable; // @synthesize scrollable=_scrollable;
@property(nonatomic) _Bool shouldInterceptLinks; // @synthesize shouldInterceptLinks=_shouldInterceptLinks;
@property(retain, nonatomic) NSURL *interceptURLPrefix; // @synthesize interceptURLPrefix=_interceptURLPrefix;
@property(retain, nonatomic) NSURL *failoverURL; // @synthesize failoverURL=_failoverURL;
@property(retain, nonatomic) NSURL *impressionTrackingURL; // @synthesize impressionTrackingURL=_impressionTrackingURL;
@property(retain, nonatomic) NSURL *clickTrackingURL; // @synthesize clickTrackingURL=_clickTrackingURL;
@property(nonatomic) struct CGSize preferredSize; // @synthesize preferredSize=_preferredSize;
@property(copy, nonatomic) NSString *networkType; // @synthesize networkType=_networkType;
@property(nonatomic) _Bool adUnitWarmingUp; // @synthesize adUnitWarmingUp=_adUnitWarmingUp;
@property(nonatomic) unsigned long long adType; // @synthesize adType=_adType;
- (void).cxx_destruct;
- (unsigned long long)orientationTypeFromHeaders:(id)arg1;
- (id)adAmountFromHeaders:(id)arg1 key:(id)arg2;
- (double)adTimeoutIntervalFromHeaders:(id)arg1;
- (long long)percentFromHeaders:(id)arg1 forKey:(id)arg2;
- (double)timeIntervalFromMsHeaders:(id)arg1 forKey:(id)arg2;
- (double)refreshIntervalFromHeaders:(id)arg1;
- (id)dictionaryFromHeaders:(id)arg1 forKey:(id)arg2;
- (id)URLFromHeaders:(id)arg1 forKey:(id)arg2;
- (id)networkTypeFromHeaders:(id)arg1;
- (unsigned long long)adTypeFromHeaders:(id)arg1;
- (id)clickDetectionURLPrefix;
- (_Bool)hasPreferredSize;
- (id)customEventClassDataFromHeaders:(id)arg1;
- (Class)setUpCustomEventClassFromHeaders:(id)arg1;
- (id)initWithHeaders:(id)arg1 data:(id)arg2;

@end

@interface CommentStore : BaseStore
{
}

- (id)getCommentObjectFromPK:(id)arg1;
- (id)createOrGetCommentObjectFromPK:(id)arg1;

@end

@interface AccountManager : NSObject
{
    Account *_currentAccount;
    AFURLSessionManager *_loginSessionManager;
    NSString *_state;
    Account *_anonymousAccount;
    NSMutableDictionary *_allAccounts;
}

+ (id)accountsDirectoryPath;
+ (id)rawAccountsPath;
+ (id)userCacheRootDirectoryPath;
+ (id)sharedManager;
@property(retain, nonatomic) NSMutableDictionary *allAccounts; // @synthesize allAccounts=_allAccounts;
@property(retain, nonatomic) Account *anonymousAccount; // @synthesize anonymousAccount=_anonymousAccount;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(retain, nonatomic) AFURLSessionManager *loginSessionManager; // @synthesize loginSessionManager=_loginSessionManager;
@property(retain, nonatomic) Account *currentAccount; // @synthesize currentAccount=_currentAccount;
- (void).cxx_destruct;
- (void)increaseUnreadCountForCurrentAccount;
- (void)reduceUnreadCountForCurrentAccount;
- (void)getUnreadCountForCurrentAccount;
- (void)loadUserInboxDataForAccount:(id)arg1;
- (void)loadPreferencesForCurrentAccount:(CDUnknownBlockType)arg1;
- (void)getAccessTokenForCode:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 fromSignUp:(_Bool)arg4;
- (void)getCodeWithCookie:(id)arg1 modhash:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 fromSignUp:(_Bool)arg5;
- (void)signUpWithUsername:(id)arg1 password:(id)arg2 email:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)loginWithUsername:(id)arg1 password:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)refreshAccessTokenForAnonymous:(CDUnknownBlockType)arg1;
- (void)refreshAccessTokenForLoggedInUser:(CDUnknownBlockType)arg1;
- (void)refreshAccessToken:(CDUnknownBlockType)arg1;
- (void)refreshAccessTokenIfAccessIsReallyExpired;
- (void)logoutFromNetworkForUser:(id)arg1;
- (void)saveAccount:(id)arg1;
- (void)removeUser:(id)arg1 deleteFiles:(_Bool)arg2;
- (void)logoutUser:(id)arg1;
@property(readonly, nonatomic) NSDictionary *allNonAnonymousAccounts;
- (id)init;

@end

@interface BottomLabelButton : UIControl
{
    UIImageView *_imageView;
    UILabel *_label;
}

@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface AppRatingToastView : BaseView <ToastViewProtocol>
{
    id <AppRatingToastViewDelegate> _delegate;
    BaseImageView *_snooView;
    BaseLabel *_titleLabel;
    BaseButton *_noButton;
    BaseButton *_yesButton;
}

+ (id)showAppRatingToast;
@property(retain, nonatomic) BaseButton *yesButton; // @synthesize yesButton=_yesButton;
@property(retain, nonatomic) BaseButton *noButton; // @synthesize noButton=_noButton;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) BaseImageView *snooView; // @synthesize snooView=_snooView;
@property(nonatomic) __weak id <AppRatingToastViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (double)toastHeight;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LinkView : BaseView
{
    BaseTextField *_linkTextField;
    BaseTextField *_urlTextField;
    UIButton *_insertLinkButton;
}

@property(retain, nonatomic) UIButton *insertLinkButton; // @synthesize insertLinkButton=_insertLinkButton;
@property(retain, nonatomic) BaseTextField *urlTextField; // @synthesize urlTextField=_urlTextField;
@property(retain, nonatomic) BaseTextField *linkTextField; // @synthesize linkTextField=_linkTextField;
- (void).cxx_destruct;
- (_Bool)becomeFirstResponder;
- (void)layoutSubviews;
- (id)init;

@end

@interface MPVASTInline : MPVASTModel
{
    NSArray *_creatives;
    NSArray *_errorURLs;
    NSDictionary *_extensions;
    NSArray *_impressionURLs;
}

+ (id)modelMap;
@property(readonly, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(readonly, nonatomic) NSDictionary *extensions; // @synthesize extensions=_extensions;
@property(readonly, nonatomic) NSArray *errorURLs; // @synthesize errorURLs=_errorURLs;
@property(readonly, nonatomic) NSArray *creatives; // @synthesize creatives=_creatives;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface OpenBrowserActionViewController : ActionSheetViewController
{
    NSObject<OpenBrowserActionViewDelegate> *_browserActionDelegate;
    NSURL *_URL;
    NSString *_pageTitle;
}

+ (void)openBrowserActionViewController:(id)arg1 didSelectItem:(id)arg2;
+ (id)createViewControllerWithURL:(id)arg1 browserActionDelegate:(id)arg2;
@property(readonly) NSString *pageTitle; // @synthesize pageTitle=_pageTitle;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) __weak NSObject<OpenBrowserActionViewDelegate> *browserActionDelegate; // @synthesize browserActionDelegate=_browserActionDelegate;
- (void).cxx_destruct;
- (void)handleSelectionOfItem:(id)arg1;
- (void)userDidSelectPostToReddit;
- (void)userDidSelectRefresh;
- (void)userDidSelectShare;
- (void)userDidSelectOpenInChrome;
- (void)userDidSelectOpenInSafari;
- (void)populateActionItems;
- (id)initWithURL:(id)arg1 browserActionDelegate:(id)arg2;

@end

@interface OnboardingListNetworkSource : ListingNetworkSource
{
}

- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface PageSegmentedControl : BaseView
{
    NSArray *_items;
    long long _currentIndex;
    id <PageSegmentedControlDelegate> _delegate;
    BaseScrollView *_containerScrollView;
    BaseView *_indicatorBar;
}

@property(retain, nonatomic) BaseView *indicatorBar; // @synthesize indicatorBar=_indicatorBar;
@property(retain, nonatomic) BaseScrollView *containerScrollView; // @synthesize containerScrollView=_containerScrollView;
@property(nonatomic) __weak id <PageSegmentedControlDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (struct CGRect)indicatorBarFrameForIndex:(unsigned long long)arg1;
- (void)removeItem:(id)arg1;
- (void)insertItem:(id)arg1 atIndex:(long long)arg2;
- (void)addItems:(id)arg1;
- (void)layoutItems;
- (void)didTapButton:(id)arg1;
- (void)layoutSubviews;
- (double)largestWidth;
- (double)allItemWidth;
- (void)configureWithItems:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NetworkParameters : NSObject
{
}

+ (id)invertedParameterDictionary:(id)arg1;
+ (unsigned long long)modeForParameter:(id)arg1;
+ (id)parameterForMode:(unsigned long long)arg1;
+ (unsigned long long)timeParameterForParameter:(id)arg1;
+ (id)timeParameterForTime:(unsigned long long)arg1;
+ (id)imageNameForFeedSort:(unsigned long long)arg1 smallSize:(_Bool)arg2;
+ (unsigned long long)feedSortForParameter:(id)arg1;
+ (id)feedSortTypeNetworkParameter:(unsigned long long)arg1;
+ (id)imageNameForCommentSort:(unsigned long long)arg1 smallSize:(_Bool)arg2;
+ (unsigned long long)commentSortForParameter:(id)arg1;
+ (id)commentSortTypeNetworkParameter:(unsigned long long)arg1;
+ (id)commentSortMappingDictionary;
+ (void)setupTimeParameterMapping;
+ (void)setupFeedSortMapping;
+ (void)setupCommentSortMapping;
+ (void)setupThumbnailMapping;
+ (void)initialize;

@end

@interface MPVASTTrackingEvent : MPVASTModel
{
    NSString *_eventType;
    NSURL *_URL;
    MPVASTDurationOffset *_progressOffset;
}

@property(readonly, nonatomic) MPVASTDurationOffset *progressOffset; // @synthesize progressOffset=_progressOffset;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, copy, nonatomic) NSString *eventType; // @synthesize eventType=_eventType;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface LoaderContentView : BaseView
{
    BaseView *_initialFetchPlaceHolderView;
    LoaderSnooView *_snooForLoading;
}

@property(retain, nonatomic) LoaderSnooView *snooForLoading; // @synthesize snooForLoading=_snooForLoading;
@property(retain, nonatomic) BaseView *initialFetchPlaceHolderView; // @synthesize initialFetchPlaceHolderView=_initialFetchPlaceHolderView;
- (void).cxx_destruct;
- (void)removePlaceholders;
- (void)showFailedPlaceholder;
- (void)showInitialPlaceholder;
- (void)displayDownloadOverlayForProgress:(double)arg1;
- (void)layoutSubviews;

@end

@interface FeedPostWebLinkView : BaseView <ContentImageViewDelegate>
{
    NSObject<FeedPostWebLinkViewDelegate> *_delegate;
    Post *_post;
    ContentImageView *_imageView;
    BaseView *_linkView;
    BaseButton *_linkTextButton;
}

+ (_Bool)shouldUseLargeLayoutForPost:(id)arg1;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 shouldCropImage:(_Bool)arg2;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
+ (struct CGSize)imageSizeForData:(id)arg1 shouldCropImage:(_Bool)arg2;
@property(retain, nonatomic) BaseButton *linkTextButton; // @synthesize linkTextButton=_linkTextButton;
@property(retain, nonatomic) BaseView *linkView; // @synthesize linkView=_linkView;
@property(retain, nonatomic) ContentImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak NSObject<FeedPostWebLinkViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)linkDidTap:(id)arg1;
- (void)contentImageViewDidTapImage:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommunitySubscriptionViewDataSource : CommunityViewDataSource <ActionSheetViewControllerDelegate, SwipyContentViewDelegate, ListingNetworkSourceDelegate>
{
    NSArray *_currentObjects;
    NSString *_fetchURLString;
    SubredditsNetworkSource *_subscriptionNetworkSource;
}

@property(retain, nonatomic) SubredditsNetworkSource *subscriptionNetworkSource; // @synthesize subscriptionNetworkSource=_subscriptionNetworkSource;
@property(copy, nonatomic) NSString *fetchURLString; // @synthesize fetchURLString=_fetchURLString;
@property(copy, nonatomic) NSArray *currentObjects; // @synthesize currentObjects=_currentObjects;
- (void).cxx_destruct;
- (id)indexes;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)didTapFavoriteButton:(id)arg1;
- (void)didTapUnsubscribeButton:(id)arg1;
- (id)currentCachedSubscriptions;
- (void)saveCurrentSubscriptionsToCache;
- (void)baseContentViewHorizontalGestureDidCancel:(id)arg1;
- (void)baseContentViewHorizontalGestureDidEnd:(id)arg1;
- (void)baseContentViewHorizontalGestureDidBegin:(id)arg1;
- (void)refreshSubscriptions;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (_Bool)listingNetworkSourceShouldFilterObject:(id)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(id)arg1;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (void)didTapEdit:(id)arg1;
- (id)viewControllerForIndexPath:(id)arg1;
- (void)didTapSubscribeButton:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)sortedAndFilteredSubscriptions:(id)arg1;
- (void)sortAndReload;
@property(readonly, nonatomic) _Bool isFetchingMoreContent;
- (void)configureWithURLString:(id)arg1;
- (id)initWithTableView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativeAdRendererImageHandler : NSObject
{
    id <MPNativeAdRendererImageHandlerDelegate> _delegate;
    MPImageDownloadQueue *_imageDownloadQueue;
}

@property(retain, nonatomic) MPImageDownloadQueue *imageDownloadQueue; // @synthesize imageDownloadQueue=_imageDownloadQueue;
@property(nonatomic) __weak id <MPNativeAdRendererImageHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safeMainQueueSetImage:(id)arg1 intoImageView:(id)arg2;
- (void)loadImageForURL:(id)arg1 intoImageView:(id)arg2;
- (id)init;

@end

@interface MPLogEventCommunicator : NSObject
{
    NSObject<OS_dispatch_queue> *_eventProcessingQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *eventProcessingQueue; // @synthesize eventProcessingQueue=_eventProcessingQueue;
- (void).cxx_destruct;
- (id)makeParamStringForEvents:(id)arg1;
- (id)buildRequestWithEvents:(id)arg1;
- (_Bool)isOverLimit;
- (void)sendEvents:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ForgotPasswordViewController : BaseViewController <PopupViewControllerProtocol>
{
    id <ForgotPasswordViewControllerDelegate> _delegate;
    BaseTextField *_usernameField;
    UILabel *_subtextLabel;
    UIButton *_sendEmailButton;
    UIButton *_closeButton;
}

@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIButton *sendEmailButton; // @synthesize sendEmailButton=_sendEmailButton;
@property(retain, nonatomic) UILabel *subtextLabel; // @synthesize subtextLabel=_subtextLabel;
@property(retain, nonatomic) BaseTextField *usernameField; // @synthesize usernameField=_usernameField;
@property(nonatomic) __weak id <ForgotPasswordViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapSendEmail;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
@property(readonly, nonatomic) double preferredPopupHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ActionSheetViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource, UIViewControllerTransitioningDelegate>
{
    NSObject<ActionSheetViewControllerDelegate> *_delegate;
    NSArray *_items;
    BaseControl *_dimmerView;
    BaseView *_containerView;
    UIView *_senderView;
    NSString *_headerString;
    BaseTableView *_tableView;
    ActionSheetAnimator *_animator;
    ActionSheetFooter *_footerView;
    struct CGRect _senderFrame;
}

@property(nonatomic) struct CGRect senderFrame; // @synthesize senderFrame=_senderFrame;
@property(retain, nonatomic) ActionSheetFooter *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) ActionSheetAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
@property(copy, nonatomic) NSString *headerString; // @synthesize headerString=_headerString;
@property(retain, nonatomic) UIView *senderView; // @synthesize senderView=_senderView;
@property(retain, nonatomic) BaseView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) BaseControl *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) __weak NSObject<ActionSheetViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapFooter:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)dimmerViewTapped;
- (void)viewWillLayoutSubviews;
- (struct CGRect)calculatePopoverRectForSenderFrame:(struct CGRect)arg1;
- (void)layoutContainerView;
- (void)viewDidLoad;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)presentFromViewController:(id)arg1 fromView:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)configureViewAppearance;
- (long long)preferredStatusBarStyle;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ToggleImageTableViewCell : ImageLabelTableViewCell
{
    UISwitch *_accessorySwitch;
}

@property(retain, nonatomic) UISwitch *accessorySwitch; // @synthesize accessorySwitch=_accessorySwitch;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface FriendsViewController : BaseViewController
{
    FeedViewController *_friendFeedController;
    CommentListViewController *_friendCommentsController;
    PagedTabViewController *_pagedViewController;
    FriendListViewController *_friendListController;
    FriendListViewController *_blockListController;
}

@property(retain, nonatomic) FriendListViewController *blockListController; // @synthesize blockListController=_blockListController;
@property(retain, nonatomic) FriendListViewController *friendListController; // @synthesize friendListController=_friendListController;
@property(retain, nonatomic) PagedTabViewController *pagedViewController; // @synthesize pagedViewController=_pagedViewController;
@property(retain, nonatomic) CommentListViewController *friendCommentsController; // @synthesize friendCommentsController=_friendCommentsController;
@property(retain, nonatomic) FeedViewController *friendFeedController; // @synthesize friendFeedController=_friendFeedController;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)viewDidLoad;

@end

@interface ContentVideoView : LoaderContentView
{
    _Bool _disableAutoPlay;
    _Bool _isGifyContent;
    _Bool _isPlaying;
    _Bool _isDownloadingVideo;
    _Bool _isScheduledToPlay;
    NSString *_previewImageURLString;
    NSString *_videoURLString;
    BaseImageView *_previewImageView;
    AVPlayer *_videoPlayer;
    BaseImageView *_videoPlayButtonOverlay;
    AVPlayerItem *_playerItem;
    AVPlayerLayer *_playerLayer;
    NSURL *_videoFileDiskURL;
    NSString *_downloadToken;
    UIVisualEffectView *_blurEffectView;
    Post *_post;
    struct CGSize _contentVideoSize;
}

@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(retain, nonatomic) UIVisualEffectView *blurEffectView; // @synthesize blurEffectView=_blurEffectView;
@property(copy, nonatomic) NSString *downloadToken; // @synthesize downloadToken=_downloadToken;
@property(retain, nonatomic) NSURL *videoFileDiskURL; // @synthesize videoFileDiskURL=_videoFileDiskURL;
@property(nonatomic) _Bool isScheduledToPlay; // @synthesize isScheduledToPlay=_isScheduledToPlay;
@property(nonatomic) _Bool isDownloadingVideo; // @synthesize isDownloadingVideo=_isDownloadingVideo;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool isGifyContent; // @synthesize isGifyContent=_isGifyContent;
@property(nonatomic) _Bool disableAutoPlay; // @synthesize disableAutoPlay=_disableAutoPlay;
@property(retain, nonatomic) BaseImageView *videoPlayButtonOverlay; // @synthesize videoPlayButtonOverlay=_videoPlayButtonOverlay;
@property(nonatomic) struct CGSize contentVideoSize; // @synthesize contentVideoSize=_contentVideoSize;
@property(retain, nonatomic) AVPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) BaseImageView *previewImageView; // @synthesize previewImageView=_previewImageView;
@property(copy, nonatomic) NSString *videoURLString; // @synthesize videoURLString=_videoURLString;
@property(copy, nonatomic) NSString *previewImageURLString; // @synthesize previewImageURLString=_previewImageURLString;
- (void).cxx_destruct;
- (void)playerReachedEnd:(id)arg1;
- (void)stop;
- (void)play;
- (void)downloadAndPlay;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)stopBlur;
- (void)startBlur;
- (void)didTapBlurView;
- (void)configureWithPost:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CommentsViewController : ListingViewController <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, FeedPostWebLinkViewDelegate, FeedPostTextViewDelegate, FeedPostCommentBarViewDelegate, FeedPostImageViewDelegate, FeedPostTitleViewDelegate, FeedPostVideoViewDelegate, FeedPostYouTubeEmbeddedViewDelegate, FeedPostSelfTextViewDelegate, CommentHeaderViewDelegate, CommentTextViewDelegate, CommentImagesViewDelegate, ActionSheetViewControllerDelegate, CommentActionSheetDelegate, CommentCommandViewDelegate, ReportViewControllerDelegate, CommentReplyViewControllerDelegate, CommentComposeViewControllerDelegate, FeedWebViewControllerDelegate, UIGestureRecognizerDelegate, UIViewControllerPreviewingDelegate, UIPreviewActionItem, HeaderBarViewDelegate, CommentsFooterBarViewDelegate, AuthenticationViewControllerDelegate, FloatingHeaderCallbackProtocol, CommentsHeaderViewDelegate, CommentLoadModeViewDelegate, LiveHandlerDelegate, BaseModelObserver>
{
    _Bool _commentBarOnTop;
    _Bool _hasFinishedFirstLoad;
    _Bool _isFetchingBottomComments;
    _Bool _isSavingOrUnsaving;
    _Bool _showLoadParentCommentBar;
    _Bool _hasMovedToHighlightedCommentAlready;
    _Bool _shouldDisableCachingCommentsToPostData;
    Post *_postData;
    FeedViewFlowLayout *_feedViewFlowLayout;
    BaseCollectionView *_feedCollectionView;
    NSArray *_previousCommentVisuals;
    NSArray *_currentCommentVisuals;
    ThreadedObjectManager *_commentsManager;
    UIBarButtonItem *_moreButton;
    CommentsFloatingBarView *_commentBarView;
    CommentsFooterBarView *_footerBarView;
    FloatingHeaderManager *_footerBarFloatingManager;
    CommentsHeaderView *_headerView;
    unsigned long long _commentSortType;
    BaseButton *_scrollToNextCommentButton;
    UILongPressGestureRecognizer *_nextCommentLongPressGestureRecognizer;
    Comment *_commentToHighlight;
    NSString *_commentPkToHighlight;
    NSIndexPath *_maxScrollIndexPath;
    unsigned long long _newCommentsCount;
    LiveHandler *_liveHandler;
    struct CGPoint _nextCommentLongPressOffset;
}

@property(retain, nonatomic) LiveHandler *liveHandler; // @synthesize liveHandler=_liveHandler;
@property(nonatomic) unsigned long long newCommentsCount; // @synthesize newCommentsCount=_newCommentsCount;
@property(retain, nonatomic) NSIndexPath *maxScrollIndexPath; // @synthesize maxScrollIndexPath=_maxScrollIndexPath;
@property(nonatomic) _Bool shouldDisableCachingCommentsToPostData; // @synthesize shouldDisableCachingCommentsToPostData=_shouldDisableCachingCommentsToPostData;
@property(nonatomic) _Bool hasMovedToHighlightedCommentAlready; // @synthesize hasMovedToHighlightedCommentAlready=_hasMovedToHighlightedCommentAlready;
@property(nonatomic) _Bool showLoadParentCommentBar; // @synthesize showLoadParentCommentBar=_showLoadParentCommentBar;
@property(retain, nonatomic) NSString *commentPkToHighlight; // @synthesize commentPkToHighlight=_commentPkToHighlight;
@property(retain, nonatomic) Comment *commentToHighlight; // @synthesize commentToHighlight=_commentToHighlight;
@property(nonatomic) struct CGPoint nextCommentLongPressOffset; // @synthesize nextCommentLongPressOffset=_nextCommentLongPressOffset;
@property(nonatomic) _Bool isSavingOrUnsaving; // @synthesize isSavingOrUnsaving=_isSavingOrUnsaving;
@property(retain, nonatomic) UILongPressGestureRecognizer *nextCommentLongPressGestureRecognizer; // @synthesize nextCommentLongPressGestureRecognizer=_nextCommentLongPressGestureRecognizer;
@property(retain, nonatomic) BaseButton *scrollToNextCommentButton; // @synthesize scrollToNextCommentButton=_scrollToNextCommentButton;
@property(nonatomic) _Bool isFetchingBottomComments; // @synthesize isFetchingBottomComments=_isFetchingBottomComments;
@property(nonatomic) unsigned long long commentSortType; // @synthesize commentSortType=_commentSortType;
@property(nonatomic) _Bool hasFinishedFirstLoad; // @synthesize hasFinishedFirstLoad=_hasFinishedFirstLoad;
@property(retain, nonatomic) CommentsHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) FloatingHeaderManager *footerBarFloatingManager; // @synthesize footerBarFloatingManager=_footerBarFloatingManager;
@property(retain, nonatomic) CommentsFooterBarView *footerBarView; // @synthesize footerBarView=_footerBarView;
@property(nonatomic) _Bool commentBarOnTop; // @synthesize commentBarOnTop=_commentBarOnTop;
@property(retain, nonatomic) CommentsFloatingBarView *commentBarView; // @synthesize commentBarView=_commentBarView;
@property(retain, nonatomic) UIBarButtonItem *moreButton; // @synthesize moreButton=_moreButton;
@property(retain, nonatomic) ThreadedObjectManager *commentsManager; // @synthesize commentsManager=_commentsManager;
@property(copy, nonatomic) NSArray *currentCommentVisuals; // @synthesize currentCommentVisuals=_currentCommentVisuals;
@property(copy, nonatomic) NSArray *previousCommentVisuals; // @synthesize previousCommentVisuals=_previousCommentVisuals;
@property(retain, nonatomic) BaseCollectionView *feedCollectionView; // @synthesize feedCollectionView=_feedCollectionView;
@property(retain, nonatomic) FeedViewFlowLayout *feedViewFlowLayout; // @synthesize feedViewFlowLayout=_feedViewFlowLayout;
@property(retain, nonatomic) Post *postData; // @synthesize postData=_postData;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)authenticationViewController:(id)arg1 didLoginUser:(id)arg2 fromSignup:(_Bool)arg3;
- (void)presentLoginView;
- (void)commentsFooterBarViewDidTapButton:(id)arg1;
- (void)setSortBarLeftText:(id)arg1;
- (void)headerBarViewDidTapRightButton:(id)arg1;
- (void)headerBarViewDidTapLeftButton:(id)arg1;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (void)commentComposeViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2 editedItem:(id)arg3;
- (void)commentComposeViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2 newItem:(id)arg3;
- (void)commentReplyViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2 newComment:(id)arg3;
- (void)commentActionSheetViewControllerCollapseToRoot:(id)arg1;
- (void)commentActionSheetViewControllerDidReplyToComment:(id)arg1;
- (void)commentActionSheetViewControllerDidDeletePost:(id)arg1;
- (void)commentActionSheetViewControllerDidDeleteComment:(id)arg1;
- (void)commentLoadMoreViewDidTap:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)showSortActionSheetForController:(id)arg1;
- (void)commentCommandViewDidTapOverflow:(id)arg1;
- (void)downvoteComment:(id)arg1;
- (void)upvoteComment:(id)arg1;
- (void)commentCommandViewDidTapDownvote:(id)arg1;
- (void)commentCommandViewDidTapUpvote:(id)arg1;
- (void)commentCommandViewDidTapReply:(id)arg1;
- (void)commentCommandViewDidTapEdit:(id)arg1;
- (_Bool)commentCommandViewShouldShowReplyButton:(id)arg1;
- (_Bool)shouldLockComments;
- (void)presentEditCommentViewForComment:(id)arg1;
- (void)presentReplyToCommentViewForComment:(id)arg1;
- (void)feedWebViewController:(id)arg1 didTapCommentsForPost:(id)arg2;
- (void)handleTappingOnCaptionedURLForComment:(id)arg1 URL:(id)arg2 caption:(id)arg3 range:(struct _NSRange)arg4;
- (void)handleTappingURL:(id)arg1;
- (void)showOverflowActionSheetFromView:(id)arg1 withComment:(id)arg2;
- (void)commentTextViewDidDoubleTapText:(id)arg1;
- (void)commentTextViewDidChangeSelection:(id)arg1;
- (void)commentTextViewDidWantToCollapse:(id)arg1;
- (void)commentTextView:(id)arg1 didTapCaptionedLinkWithURL:(id)arg2 caption:(id)arg3 range:(struct _NSRange)arg4;
- (void)commentTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)commentHeaderView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)commentHeaderViewDidTap:(id)arg1;
- (void)commentImagesView:(id)arg1 didTapURL:(id)arg2;
- (void)commentImagesView:(id)arg1 didTapImage:(id)arg2;
- (_Bool)commentBarViewShouldUseDetailViewHeight:(id)arg1;
- (_Bool)commentBarViewShouldShowBottomLine:(id)arg1;
- (void)scrollToFirstComment;
- (void)commentBarViewDidTapShare:(id)arg1;
- (void)commentBarViewDidTapComment:(id)arg1;
- (void)commentBarViewDidTapUpvote:(id)arg1;
- (void)commentBarViewDidTapDownvote:(id)arg1;
- (_Bool)feedPostYouTubeEmbeddedViewShouldHideNsfw:(id)arg1;
- (void)feedPostYouTubeEmbeddedView:(id)arg1 handleURL:(id)arg2;
- (_Bool)feedPostYouTubeEmbeddedViewShouldAlwaysShowVideo:(id)arg1;
- (void)feedPostYouTubeEmbeddedViewDidTap:(id)arg1;
- (_Bool)feedPostVideoViewShouldBlurNsfwPreviewImage:(id)arg1;
- (void)feedPostVideoViewDidTap:(id)arg1;
- (_Bool)feedPostImageViewShouldBlurNsfwImages:(id)arg1;
- (void)feedPostImageViewDidTap:(id)arg1;
- (void)showLightboxViewFromFeedPostView:(id)arg1;
- (struct CGSize)feedPostImageViewLayoutSize:(id)arg1;
- (_Bool)feedPostImageViewShouldAlwaysShowImage:(id)arg1;
- (void)feedPostSelfTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (_Bool)feedPostTextViewShouldConfigureForCommentsView:(id)arg1;
- (_Bool)feedPostTextViewShouldBlurSpoilers:(id)arg1;
- (_Bool)feedPostTextViewShouldBlurNsfwImages:(id)arg1;
- (_Bool)feedPostTextViewShouldHideThumbnail:(id)arg1;
- (void)feedPostTextView:(id)arg1 didTapImage:(id)arg2;
- (void)feedPostTextView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)feedPostTextViewDidTapText:(id)arg1;
- (_Bool)feedPostTextViewShouldShowSelfText:(id)arg1;
- (_Bool)feedPostTextViewShouldShowFlair:(id)arg1;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (void)feedPostWebLinkViewDidTapLink:(id)arg1;
- (_Bool)feedPostTitleViewShouldConfigureForCommentsView:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideGilding:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideUsername:(id)arg1;
- (_Bool)feedPostTitleViewShouldHideSubredditName:(id)arg1;
- (void)feedPostTitleView:(id)arg1 didTapLinkURL:(id)arg2;
- (void)feedPostTitleView:(id)arg1 didTapOverflowWithPost:(id)arg2;
- (void)commentsHeaderViewDidPullToRefresh:(id)arg1;
- (void)commentsHeaderView:(id)arg1 didTapImageView:(id)arg2;
- (void)presentLightBoxFromContentImageView:(id)arg1 withMediaModelOrNil:(id)arg2 fromSourceView:(id)arg3;
- (void)presentLightBoxFromBaseImageView:(id)arg1 withMediaModelOrNil:(id)arg2 fromSourceView:(id)arg3;
- (void)collapseCommentToRoot:(id)arg1;
- (void)collapseComment:(id)arg1;
- (void)didTapOverflow:(id)arg1;
- (void)didTapBookMark;
- (void)scrollToNextComment:(id)arg1;
- (void)didTapAddComment;
- (void)reloadContentFromNetworkSource;
- (void)didPullToRefresh;
- (void)floatingHeaderShouldMove:(id)arg1;
- (void)loadParentComment;
- (_Bool)hasMoreParentComment;
- (void)scrollToHighlightedCommentIfNeeded;
- (void)updateFloatingViews;
- (id)postBodyAttributes;
- (void)scrollViewDidScroll:(id)arg1;
- (void)expandBottomComments;
- (void)reloadCommentsWithNewCommentsHighlight:(_Bool)arg1 autoScroll:(_Bool)arg2 animated:(_Bool)arg3;
- (void)highlightCommentsInRect:(struct CGRect)arg1;
- (void)highlightCellsWithAttributes:(id)arg1;
- (id)attributesForNewCommentIndexPaths:(id)arg1;
- (id)indexPathsOfNewCommentsInChangeOperations:(id)arg1;
- (void)updateForNewCommentsOffScreen;
- (_Bool)topCommentIsFullyVisible;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)expandCommentLoadMoreView:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)reloadCommentsData;
- (void)precalculateSizeForComments:(id)arg1;
- (void)listingNetworkSourceDidParseNewData:(id)arg1;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(id)arg1;
- (void)setupMiscViewsForPost:(id)arg1 andComments:(id)arg2;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
@property(retain, nonatomic) CommentNetworkSource *commentNetworkSource;
- (void)configureHeaderView;
- (_Bool)shouldHighlightComment:(id)arg1;
- (void)configureLiveHandler;
- (void)configureWithHighlightComment:(id)arg1;
- (void)configureWithPermalink:(id)arg1;
- (void)configureWithPostData:(id)arg1;
- (void)configureNavigationBarAppearance;
@property(readonly, copy, nonatomic) NSString *commentSortTypeNetworkParameter;
- (_Bool)prefersTabBarHidden;
- (void)didLongPressNextCommentButton:(id)arg1;
- (void)resetNextCommentButtonLocation;
- (void)resetNextCommentButtonIfNeeded;
- (void)saveNextCommentButtonLocation;
- (void)handleAppDidEnterForeground;
- (void)liveHandler:(id)arg1 didReceiveNewComment:(id)arg2;
- (void)addFirstTimeLoadingSpinnerIfNecessary;
- (id)majorContentView;
- (void)layoutCommentBarViewFrameForViewFrame:(struct CGRect)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (struct UIEdgeInsets)preferredContentInset;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (id)analyticsScrollEventParameters;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface TextPostViewController : PostViewController <UITextViewDelegate, BaseTextViewDelegate, LinkViewControllerDelegate>
{
    BaseScrollView *_wrapperScrollView;
    BaseTextView *_titleView;
    BaseTextView *_titleCharacterLimitIndicatorView;
    BaseTextView *_postView;
    NSString *_postViewPlaceholder;
    NSString *_titleViewPlaceholder;
}

@property(readonly, nonatomic) NSString *titleViewPlaceholder; // @synthesize titleViewPlaceholder=_titleViewPlaceholder;
@property(readonly, nonatomic) NSString *postViewPlaceholder; // @synthesize postViewPlaceholder=_postViewPlaceholder;
@property(retain, nonatomic) BaseTextView *postView; // @synthesize postView=_postView;
@property(retain, nonatomic) BaseTextView *titleCharacterLimitIndicatorView; // @synthesize titleCharacterLimitIndicatorView=_titleCharacterLimitIndicatorView;
@property(retain, nonatomic) BaseTextView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) BaseScrollView *wrapperScrollView; // @synthesize wrapperScrollView=_wrapperScrollView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)linkViewControllerDidTapInsert:(id)arg1;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (void)didTapPostButton:(id)arg1;
- (void)didTapCloseLink;
- (void)didTapLinkButton;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)layoutTextFieldsInScroller;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPWebView : UIView <UIWebViewDelegate, WKNavigationDelegate, WKUIDelegate, UIScrollViewDelegate>
{
    id <MPWebViewDelegate> _delegate;
    WKWebView *_wkWebView;
    UIWebView *_uiWebView;
}

@property(nonatomic) __weak UIWebView *uiWebView; // @synthesize uiWebView=_uiWebView;
@property(nonatomic) __weak WKWebView *wkWebView; // @synthesize wkWebView=_wkWebView;
@property(nonatomic) __weak id <MPWebViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)viewForZoomingInScrollView:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)disableJavaScriptDialogs;
- (void)mp_setScrollable:(_Bool)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
@property(readonly, nonatomic) _Bool allowsPictureInPictureMediaPlayback;
@property(readonly, nonatomic) _Bool mediaPlaybackAllowsAirPlay;
@property(readonly, nonatomic) _Bool mediaPlaybackRequiresUserAction;
@property(readonly, nonatomic) _Bool allowsInlineMediaPlayback;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) UIScrollView *scrollView;
@property(nonatomic) _Bool scalesPageToFit;
@property(nonatomic) _Bool allowsLinkPreview;
- (void)goForward;
- (void)goBack;
@property(readonly, nonatomic) _Bool canGoForward;
@property(readonly, nonatomic) _Bool canGoBack;
- (void)reload;
- (void)stopLoading;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)didMoveToWindow;
- (id)constructOffscreenView;
- (void)cleanUpOffscreenView;
- (void)retainWKWebViewOffscreen:(id)arg1;
- (void)setUpStepsForceUIWebView:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1 forceUIWebView:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface InboxViewController : PagedTabViewController <ComposeMessageViewControllerDelegate, ActionSheetViewControllerDelegate, ThemeUpdateCallbackProtocol>
{
    LoggedOutView *_loggedOutView;
    MessageListViewController *_messagesController;
    CommentListViewController *_userCommentsController;
    CommentListViewController *_postRepliesController;
    CommentListViewController *_mentionsController;
}

@property(retain, nonatomic) CommentListViewController *mentionsController; // @synthesize mentionsController=_mentionsController;
@property(retain, nonatomic) CommentListViewController *postRepliesController; // @synthesize postRepliesController=_postRepliesController;
@property(retain, nonatomic) CommentListViewController *userCommentsController; // @synthesize userCommentsController=_userCommentsController;
@property(retain, nonatomic) MessageListViewController *messagesController; // @synthesize messagesController=_messagesController;
@property(retain, nonatomic) LoggedOutView *loggedOutView; // @synthesize loggedOutView=_loggedOutView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)themeDidChange:(id)arg1;
- (void)composeMessageViewController:(id)arg1 didFinishWithSuccess:(_Bool)arg2;
- (void)didTapSignupButton;
- (void)didTapLoginButton;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)locallyMarkAllAsRead;
- (_Bool)shouldScrollContentViewToTop;
- (void)didTapMarkAllReadButton:(id)arg1;
- (void)didTapComposeButton:(id)arg1;
- (void)setupNavBarItems;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextViewLayoutCache : NSObject
{
}

+ (void)cacheHeight:(double)arg1 forText:(id)arg2 withFont:(id)arg3 atWidth:(double)arg4;
+ (double)heightForText:(id)arg1 withFont:(id)arg2 atWidth:(double)arg3;
+ (id)sharedCache;

@end

@interface FeedViewFlowLayout : UICollectionViewFlowLayout
{
}

- (id)init;

@end

@interface AccountSubscriptionViewDataSource : CommunitySubscriptionViewDataSource
{
    NSString *_originalFetchURLString;
}

@property(copy, nonatomic) NSString *originalFetchURLString; // @synthesize originalFetchURLString=_originalFetchURLString;
- (void).cxx_destruct;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (id)headerString;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)subredditSubscriptionDidChange:(id)arg1;
- (void)configureWithURLString:(id)arg1;
- (id)initWithTableView:(id)arg1;
- (void)dealloc;

@end

@interface ImageLabelContentView : BaseView
{
    _Bool _forceCircularCrop;
    RoundedImageView *_imageView;
    AttributedLabelRegular *_mainLabel;
    BaseLabel *_detailLabel;
    UIImage *_placeHolderImage;
    NSURL *_networkImageURL;
    double _leadingPadding;
    double _labelPadding;
    UIColor *_circularFillColor;
    UIColor *_circularBorderColor;
    struct CGSize _imageSize;
}

@property(copy, nonatomic) UIColor *circularBorderColor; // @synthesize circularBorderColor=_circularBorderColor;
@property(copy, nonatomic) UIColor *circularFillColor; // @synthesize circularFillColor=_circularFillColor;
@property(nonatomic) _Bool forceCircularCrop; // @synthesize forceCircularCrop=_forceCircularCrop;
@property(nonatomic) double labelPadding; // @synthesize labelPadding=_labelPadding;
@property(nonatomic) double leadingPadding; // @synthesize leadingPadding=_leadingPadding;
@property(copy, nonatomic) NSURL *networkImageURL; // @synthesize networkImageURL=_networkImageURL;
@property(retain, nonatomic) UIImage *placeHolderImage; // @synthesize placeHolderImage=_placeHolderImage;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) BaseLabel *detailLabel; // @synthesize detailLabel=_detailLabel;
@property(readonly, nonatomic) AttributedLabelRegular *mainLabel; // @synthesize mainLabel=_mainLabel;
@property(readonly, nonatomic) RoundedImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)prepareContentViewForReuse;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPStreamAdPlacer : NSObject <MPNativeAdSourceDelegate, MPNativeAdDelegate>
{
    NSArray *_visibleIndexPaths;
    NSArray *_rendererConfigurations;
    UIViewController *_viewController;
    id <MPStreamAdPlacerDelegate> _delegate;
    MPAdPositioning *_adPositioning;
    MPNativeAdSource *_adSource;
    MPNativePositionSource *_positioningSource;
    MPStreamAdPlacementData *_adPlacementData;
    NSString *_adUnitID;
    NSMutableDictionary *_sectionCounts;
    NSIndexPath *_topConsideredIndexPath;
    NSIndexPath *_bottomConsideredIndexPath;
}

+ (id)placerWithViewController:(id)arg1 adPositioning:(id)arg2 rendererConfigurations:(id)arg3;
@property(retain, nonatomic) NSIndexPath *bottomConsideredIndexPath; // @synthesize bottomConsideredIndexPath=_bottomConsideredIndexPath;
@property(retain, nonatomic) NSIndexPath *topConsideredIndexPath; // @synthesize topConsideredIndexPath=_topConsideredIndexPath;
@property(retain, nonatomic) NSMutableDictionary *sectionCounts; // @synthesize sectionCounts=_sectionCounts;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(retain, nonatomic) MPStreamAdPlacementData *adPlacementData; // @synthesize adPlacementData=_adPlacementData;
@property(retain, nonatomic) MPNativePositionSource *positioningSource; // @synthesize positioningSource=_positioningSource;
@property(retain, nonatomic) MPNativeAdSource *adSource; // @synthesize adSource=_adSource;
@property(copy, nonatomic) MPAdPositioning *adPositioning; // @synthesize adPositioning=_adPositioning;
@property(nonatomic) __weak id <MPStreamAdPlacerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSArray *rendererConfigurations; // @synthesize rendererConfigurations=_rendererConfigurations;
@property(retain, nonatomic) NSArray *visibleIndexPaths; // @synthesize visibleIndexPaths=_visibleIndexPaths;
- (void).cxx_destruct;
- (struct CGSize)sizeForAd:(id)arg1 withMaximumWidth:(double)arg2 andIndexPath:(id)arg3;
- (void)willLeaveApplicationFromNativeAd:(id)arg1;
- (void)didDismissModalForNativeAd:(id)arg1;
- (void)willPresentModalForNativeAd:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (void)adSourceDidFinishRequest:(id)arg1;
- (void)fillAdsInConsideredRange;
- (id)retrieveAdDataForInsertionPath:(id)arg1;
- (_Bool)shouldPlaceAdAtIndexPath:(id)arg1;
- (id)earliestValidIndexPathBeforeIndexPath:(id)arg1 withinDistance:(unsigned long long)arg2;
- (id)furthestValidIndexPathAfterIndexPath:(id)arg1 withinDistance:(unsigned long long)arg2;
- (struct _NSRange)rangeToDeleteInSection:(id)arg1 forOriginalContentIndexPaths:(id)arg2;
- (void)deleteItemCountSections:(id)arg1;
- (void)insertItemCountSections:(id)arg1;
- (void)moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)deleteSections:(id)arg1;
- (void)insertSections:(id)arg1;
- (void)moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)deleteItemsAtIndexPaths:(id)arg1;
- (void)insertItemsAtIndexPaths:(id)arg1;
- (id)originalIndexPathsForAdjustedIndexPaths:(id)arg1;
- (id)adjustedIndexPathsForOriginalIndexPaths:(id)arg1;
- (id)originalIndexPathForAdjustedIndexPath:(id)arg1;
- (id)adjustedIndexPathForOriginalIndexPath:(id)arg1;
- (unsigned long long)adjustedNumberOfItems:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (_Bool)isAdAtIndexPath:(id)arg1;
- (void)loadAdsForAdUnitID:(id)arg1 targeting:(id)arg2;
- (void)loadAdsForAdUnitID:(id)arg1;
- (struct CGSize)sizeForAdAtIndexPath:(id)arg1 withMaximumWidth:(double)arg2;
- (void)renderAdAtIndexPath:(id)arg1 inView:(id)arg2;
- (void)setItemCount:(unsigned long long)arg1 forSection:(long long)arg2;
- (void)dealloc;
- (id)initWithViewController:(id)arg1 adPositioning:(id)arg2 rendererConfigurations:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPMoPubNativeAdAdapter : NSObject <MPAdDestinationDisplayAgentDelegate, MPStaticNativeAdImpressionTimerDelegate, MPNativeAdAdapter>
{
    NSDictionary *_properties;
    NSURL *_defaultActionURL;
    id <MPNativeAdAdapterDelegate> _delegate;
    NSArray *_impressionTrackerURLs;
    NSArray *_clickTrackerURLs;
    MPAdConfiguration *_adConfiguration;
    MPStaticNativeAdImpressionTimer *_impressionTimer;
    MPAdDestinationDisplayAgent *_destinationDisplayAgent;
}

@property(readonly, nonatomic) MPAdDestinationDisplayAgent *destinationDisplayAgent; // @synthesize destinationDisplayAgent=_destinationDisplayAgent;
@property(retain, nonatomic) MPStaticNativeAdImpressionTimer *impressionTimer; // @synthesize impressionTimer=_impressionTimer;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(readonly, nonatomic) NSArray *clickTrackerURLs; // @synthesize clickTrackerURLs=_clickTrackerURLs;
@property(readonly, nonatomic) NSArray *impressionTrackerURLs; // @synthesize impressionTrackerURLs=_impressionTrackerURLs;
@property(nonatomic) __weak id <MPNativeAdAdapterDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSURL *defaultActionURL; // @synthesize defaultActionURL=_defaultActionURL;
@property(readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (id)viewControllerForPresentingModalView;
- (void)trackImpression;
- (void)displayContentForDAAIconTap;
- (void)displayContentForURL:(id)arg1 rootViewController:(id)arg2;
- (void)willAttachToView:(id)arg1;
- (void)dealloc;
- (id)initWithAdProperties:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentLoadMoreCell : UICollectionViewCell
{
    CommentLoadMoreView *_commentLoadMoreView;
}

@property(retain, nonatomic) CommentLoadMoreView *commentLoadMoreView; // @synthesize commentLoadMoreView=_commentLoadMoreView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FeedPostTextViewCompactWithImage : FeedPostTextViewCompact
{
}

+ (double)preferredTextWidth;

@end

@interface PostOverlay : BaseView <PostViewControllerDelegate>
{
    BaseButton *_textButton;
    BaseButton *_imageButton;
    BaseButton *_linkButton;
    UILabel *_headerLabel;
    UILabel *_textLabel;
    UILabel *_imageLabel;
    UILabel *_linkLabel;
    UIControl *_dimmerView;
    UIView *_internalOverlay;
    UIViewController *_presentingViewController;
}

+ (id)sharedOverlay;
@property(retain, nonatomic) UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(retain, nonatomic) UIView *internalOverlay; // @synthesize internalOverlay=_internalOverlay;
@property(retain, nonatomic) UIControl *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(retain, nonatomic) UILabel *linkLabel; // @synthesize linkLabel=_linkLabel;
@property(retain, nonatomic) UILabel *imageLabel; // @synthesize imageLabel=_imageLabel;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel=_headerLabel;
@property(retain, nonatomic) BaseButton *linkButton; // @synthesize linkButton=_linkButton;
@property(retain, nonatomic) BaseButton *imageButton; // @synthesize imageButton=_imageButton;
@property(retain, nonatomic) BaseButton *textButton; // @synthesize textButton=_textButton;
- (void).cxx_destruct;
- (void)postViewController:(id)arg1 didFinishWithPost:(id)arg2;
- (void)presentPostViewController:(id)arg1;
- (void)didTapLinkPostButton;
- (void)didTapImagePostButton;
- (void)didTapTextPostButton;
- (void)didTapOverlay;
- (void)layoutSubviews;
- (void)hideOverlay;
- (void)showOverlayOnWindow:(id)arg1 fromViewController:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentImagesView : VerticalLineView <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, ContentImageViewDelegate, BaseModelObserver>
{
    _Bool _shouldIgnoreLeveling;
    Comment *_comment;
    id <CommentImagesViewDelegate> _delegate;
    BaseCollectionView *_collectionView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) BaseCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) __weak id <CommentImagesViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldIgnoreLeveling; // @synthesize shouldIgnoreLeveling=_shouldIgnoreLeveling;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)contentImageViewDidFinishLoadingImage:(id)arg1 error:(id)arg2;
- (void)contentImageViewDidTapImage:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)layoutSubviews;
- (void)updateLastVerticalLineColorForVoteStatus;
- (void)updateContentViewsForData:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FloatingHeaderManager : NSObject
{
    id <FloatingHeaderCallbackProtocol> _delegate;
    double _suggestedTransformY;
    UIScrollView *_scrollView;
    double _allowedMaxTransformY;
    double _initialResistanceDistance;
    double _suggestedTransformYBeforeCalculatingResistance;
    struct UIEdgeInsets _originalScrollViewInsets;
}

@property(nonatomic) double suggestedTransformYBeforeCalculatingResistance; // @synthesize suggestedTransformYBeforeCalculatingResistance=_suggestedTransformYBeforeCalculatingResistance;
@property(nonatomic) double initialResistanceDistance; // @synthesize initialResistanceDistance=_initialResistanceDistance;
@property(nonatomic) double allowedMaxTransformY; // @synthesize allowedMaxTransformY=_allowedMaxTransformY;
@property(nonatomic) struct UIEdgeInsets originalScrollViewInsets; // @synthesize originalScrollViewInsets=_originalScrollViewInsets;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) double suggestedTransformY; // @synthesize suggestedTransformY=_suggestedTransformY;
@property(nonatomic) __weak id <FloatingHeaderCallbackProtocol> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)resetFloatingHeaderPosition;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)calculateTransformYFromOldOffset:(double)arg1 toNewOffset:(double)arg2;
- (id)init;
- (id)initWithScrollView:(id)arg1 allowedMaxTransformY:(double)arg2 initialResistanceDistance:(double)arg3;
- (id)initWithScrollView:(id)arg1 allowedMaxTransformY:(double)arg2;
- (void)dealloc;

@end

@interface UserStore : BaseStore
{
}

- (id)userObjectFromPK:(id)arg1;

@end

@interface SwipyContentView : BaseView <UIGestureRecognizerDelegate>
{
    UIView *_mainSwipeView;
    UIView *_rightSwipeView;
    id <SwipyContentViewDelegate> _delegate;
    UIPanGestureRecognizer *_panRecognizer;
    double _swipeXOffset;
    double _previousSwipeXOffset;
}

@property(nonatomic) double previousSwipeXOffset; // @synthesize previousSwipeXOffset=_previousSwipeXOffset;
@property(nonatomic) double swipeXOffset; // @synthesize swipeXOffset=_swipeXOffset;
@property(retain, nonatomic) UIPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(nonatomic) __weak id <SwipyContentViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *rightSwipeView; // @synthesize rightSwipeView=_rightSwipeView;
@property(retain, nonatomic) UIView *mainSwipeView; // @synthesize mainSwipeView=_mainSwipeView;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isRightSwipeViewVisible;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)cancelSwiping:(_Bool)arg1;
- (void)horizontalGestureDidPan:(id)arg1;
- (void)layoutSubviews;
- (void)prepareContentViewForReuse;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PostHistoryManager : NSObject
{
    NSString *_cachePath;
    NSMutableOrderedSet *_postIDSet;
}

@property(copy, nonatomic) NSMutableOrderedSet *postIDSet; // @synthesize postIDSet=_postIDSet;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
- (void).cxx_destruct;
- (id)currentHistoryPosts;
- (void)clearAllPostHistory;
- (_Bool)containsPostWithPK:(id)arg1;
- (void)addPostToHistory:(id)arg1;
- (id)initWithCacheFolderPath:(id)arg1;

@end

@interface CommunitySectionHeaderView : BaseView
{
    BaseLabel *_contentLabel;
}

@property(retain, nonatomic) BaseLabel *contentLabel; // @synthesize contentLabel=_contentLabel;
- (void).cxx_destruct;
- (void)configureWithText:(id)arg1;
- (void)layoutSubviews;
- (id)init;

@end

@interface BaseButton : UIButton
{
    _Bool _disableTemplatedImage;
    _Bool _showImageOnRight;
    struct UIEdgeInsets _extendedInsets;
}

+ (id)dockBounceAnimationWithViewHeight:(double)arg1;
+ (id)buttonWithType:(long long)arg1;
@property(nonatomic) _Bool showImageOnRight; // @synthesize showImageOnRight=_showImageOnRight;
@property(nonatomic) _Bool disableTemplatedImage; // @synthesize disableTemplatedImage=_disableTemplatedImage;
@property(nonatomic) struct UIEdgeInsets extendedInsets; // @synthesize extendedInsets=_extendedInsets;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)bounceOnScale:(double)arg1 endStateScale:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)bounceOnScale:(double)arg1;
- (void)bounceVertically:(double)arg1;
- (void)layoutSubviews;
- (void)centerImageAndTextWithSpacing:(double)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2 enableTemplateColor:(_Bool)arg3;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPVASTCreative : MPVASTModel
{
    NSString *_identifier;
    NSString *_sequence;
    NSString *_adID;
    MPVASTLinearAd *_linearAd;
    NSArray *_companionAds;
}

+ (id)modelMap;
@property(readonly, nonatomic) NSArray *companionAds; // @synthesize companionAds=_companionAds;
@property(readonly, nonatomic) MPVASTLinearAd *linearAd; // @synthesize linearAd=_linearAd;
@property(readonly, copy, nonatomic) NSString *adID; // @synthesize adID=_adID;
@property(readonly, copy, nonatomic) NSString *sequence; // @synthesize sequence=_sequence;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;

@end

@interface CommentsFloatingBarView : FeedPostCommentsBarView
{
    FloatingUpdateView *_floatingUpdateView;
}

@property(retain, nonatomic) FloatingUpdateView *floatingUpdateView; // @synthesize floatingUpdateView=_floatingUpdateView;
- (void).cxx_destruct;
- (void)didTouchFloatingUpdateButton:(id)arg1;
- (void)setUpdateViewHiddenAnimated:(_Bool)arg1;
- (void)setUpdateViewVisibleWithText:(id)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface AttributedLabelTableView : UIView <AttributedLabelRegularDelegate>
{
    NSObject<AttributedLabelTableViewDelegate> *_delegate;
    AttributedLabelRegular *_tableAttributedLabelView;
    UIScrollView *_scroller;
    NSAttributedString *_tableAttributedString;
}

@property(retain, nonatomic) NSAttributedString *tableAttributedString; // @synthesize tableAttributedString=_tableAttributedString;
@property(retain, nonatomic) UIScrollView *scroller; // @synthesize scroller=_scroller;
@property(retain, nonatomic) AttributedLabelRegular *tableAttributedLabelView; // @synthesize tableAttributedLabelView=_tableAttributedLabelView;
@property(nonatomic) __weak NSObject<AttributedLabelTableViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)setActiveLinkAttributes:(id)arg1;
- (void)setLinkAttributes:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1 tableAttributedString:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseViewController : UIViewController <UINavigationControllerDelegate, AuthenticationViewControllerDelegate, PagedTabControllerProtocol>
{
    _Bool _isPopping;
    _Bool _hasAppearedAndNotDisappeared;
    UIView *_navbarBottomLineView;
    BaseViewController *_parentContentViewController;
    id <NavigationProtocol> _universalNavigationController;
    NSString *_analyticsScreenViewName;
    NSDictionary *_analyticsScreenViewParameters;
    UIImage *_pageItemImage;
    UIImage *_pageItemSelectedImage;
    NSString *_pageItemText;
    UIPercentDrivenInteractiveTransition *_interactivePopTransition;
    UIPanGestureRecognizer *_popRecognizer;
    double _viewDidAppearTime;
    NSTimer *_heartbeatTimer;
}

@property(nonatomic) _Bool hasAppearedAndNotDisappeared; // @synthesize hasAppearedAndNotDisappeared=_hasAppearedAndNotDisappeared;
@property(retain, nonatomic) NSTimer *heartbeatTimer; // @synthesize heartbeatTimer=_heartbeatTimer;
@property(nonatomic) double viewDidAppearTime; // @synthesize viewDidAppearTime=_viewDidAppearTime;
@property(retain, nonatomic) UIPanGestureRecognizer *popRecognizer; // @synthesize popRecognizer=_popRecognizer;
@property(nonatomic) _Bool isPopping; // @synthesize isPopping=_isPopping;
@property(retain, nonatomic) UIPercentDrivenInteractiveTransition *interactivePopTransition; // @synthesize interactivePopTransition=_interactivePopTransition;
@property(copy, nonatomic) NSString *pageItemText; // @synthesize pageItemText=_pageItemText;
@property(retain, nonatomic) UIImage *pageItemSelectedImage; // @synthesize pageItemSelectedImage=_pageItemSelectedImage;
@property(retain, nonatomic) UIImage *pageItemImage; // @synthesize pageItemImage=_pageItemImage;
@property(readonly, copy, nonatomic) NSDictionary *analyticsScreenViewParameters; // @synthesize analyticsScreenViewParameters=_analyticsScreenViewParameters;
@property(readonly, copy, nonatomic) NSString *analyticsScreenViewName; // @synthesize analyticsScreenViewName=_analyticsScreenViewName;
@property(nonatomic) __weak id <NavigationProtocol> universalNavigationController; // @synthesize universalNavigationController=_universalNavigationController;
@property(nonatomic) __weak BaseViewController *parentContentViewController; // @synthesize parentContentViewController=_parentContentViewController;
@property(readonly, nonatomic) UIView *navbarBottomLineView; // @synthesize navbarBottomLineView=_navbarBottomLineView;
- (void).cxx_destruct;
- (void)authenticationViewController:(id)arg1 didLoginUser:(id)arg2 fromSignup:(_Bool)arg3;
- (void)presentLoginView;
- (void)handlePopRecognizer:(id)arg1;
- (id)navigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (long long)timeInMillisecondsSinceViewDidAppear;
- (void)logHeartbeatEvent;
- (void)stopHeartbeatLogging;
- (void)startHeartbeatLogging;
@property(readonly, nonatomic) _Bool heartbeatLoggingEnabled;
@property(readonly, copy, nonatomic) NSDictionary *analyticsScrollEventParameters;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldScrollContentViewToTop;
- (_Bool)prefersTabBarHidden;
- (void)didTapBackButton:(id)arg1;
- (id)navigationItem;
- (void)configureNavigationBarAppearance;
- (void)configureViewAppearance;
- (void)contentScrollViewContentInsetsDidChange;
- (_Bool)prefersNavigationBarHidden;
@property(readonly, nonatomic) struct UIEdgeInsets preferredContentInset;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (void)sendScreenViewEventFromBackground:(_Bool)arg1;
- (void)fireDisappearAnalyticsEvents;
- (void)fireAppearAnalyticsEvents;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)hidesBottomBarWhenPushed;
- (id)majorContentView;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)handleAppDidEnterBackgroundInternal;
- (void)handleAppDidEnterBackground;
- (void)handleAppDidEnterForegroundInternal;
- (void)handleAppDidEnterForeground;
@property(readonly, nonatomic) _Bool isTopViewController;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPMRAIDInterstitialCustomEvent : MPInterstitialCustomEvent <MPInterstitialViewControllerDelegate>
{
    MPMRAIDInterstitialViewController *_interstitial;
}

@property(retain, nonatomic) MPMRAIDInterstitialViewController *interstitial; // @synthesize interstitial=_interstitial;
- (void).cxx_destruct;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidReceiveTapEvent:(id)arg1;
- (void)interstitialDidDisappear:(id)arg1;
- (void)interstitialWillDisappear:(id)arg1;
- (void)interstitialDidAppear:(id)arg1;
- (void)interstitialWillAppear:(id)arg1;
- (void)interstitialDidFailToLoadAd:(id)arg1;
- (void)interstitialDidLoadAd:(id)arg1;
- (id)adUnitId;
- (id)location;
- (void)showInterstitialFromRootViewController:(id)arg1;
- (void)requestInterstitialWithCustomEventInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <MPPrivateInterstitialCustomEventDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ListingNetworkSource : NSObject
{
    _Bool _hasFinishedFirstFetch;
    _Bool _hasFinishedFirstSuccessfulFetch;
    _Bool _isFetching;
    _Bool _isFetchingMore;
    _Bool _isFailed;
    NSObject<OS_dispatch_queue> *_parsingQueue;
    NSObject<ListingNetworkSourceDelegate> *_delegate;
    NSString *_fetchURLString;
    NSDictionary *_parameters;
    NSArray *_objects;
    NSString *_afterID;
    NSString *_beforeID;
}

@property(retain, nonatomic) NSString *beforeID; // @synthesize beforeID=_beforeID;
@property(retain, nonatomic) NSString *afterID; // @synthesize afterID=_afterID;
@property(copy, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(nonatomic) _Bool isFailed; // @synthesize isFailed=_isFailed;
@property(nonatomic) _Bool isFetchingMore; // @synthesize isFetchingMore=_isFetchingMore;
@property(nonatomic) _Bool isFetching; // @synthesize isFetching=_isFetching;
@property(copy, nonatomic) NSString *fetchURLString; // @synthesize fetchURLString=_fetchURLString;
@property(nonatomic) _Bool hasFinishedFirstSuccessfulFetch; // @synthesize hasFinishedFirstSuccessfulFetch=_hasFinishedFirstSuccessfulFetch;
@property(nonatomic) _Bool hasFinishedFirstFetch; // @synthesize hasFinishedFirstFetch=_hasFinishedFirstFetch;
@property(nonatomic) __weak NSObject<ListingNetworkSourceDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *parsingQueue; // @synthesize parsingQueue=_parsingQueue;
- (void).cxx_destruct;
- (id)debugDescription;
@property(readonly, nonatomic) _Bool hasMoreContent;
- (void)fetchDataWithParameters:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)fetchMoreData;
- (void)fetchData;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;
- (id)initWithFetchURLString:(id)arg1 parameters:(id)arg2;
- (id)initWithFetchURLString:(id)arg1;

@end

@interface ToastManager : NSObject
{
    _Bool _fading;
    UIView<ToastViewProtocol> *_contentView;
    double _visibleKeyboardHeight;
    struct CGPoint _initialContentOrigin;
}

+ (id)instance;
@property(nonatomic) struct CGPoint initialContentOrigin; // @synthesize initialContentOrigin=_initialContentOrigin;
@property(nonatomic, getter=isFading) _Bool fading; // @synthesize fading=_fading;
@property(nonatomic) double visibleKeyboardHeight; // @synthesize visibleKeyboardHeight=_visibleKeyboardHeight;
@property(retain, nonatomic) UIView<ToastViewProtocol> *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (void)positionToastWithKeyboardNotification:(id)arg1;
- (void)positionToast;
- (void)dismissToastWithAnimationType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showToastWithAnimationType:(long long)arg1 delay:(double)arg2;
- (void)showToastWithAnimationType:(long long)arg1;
- (void)registerNotifications;
- (void)didPan:(id)arg1;
- (void)configureWithView:(id)arg1;

@end

@interface FriendNetworkSource : ListingNetworkSource
{
}

- (id)usersFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface MPHTMLInterstitialCustomEvent : MPInterstitialCustomEvent <MPInterstitialViewControllerDelegate>
{
    _Bool _trackedImpression;
    MPHTMLInterstitialViewController *_interstitial;
}

@property(nonatomic) _Bool trackedImpression; // @synthesize trackedImpression=_trackedImpression;
@property(retain, nonatomic) MPHTMLInterstitialViewController *interstitial; // @synthesize interstitial=_interstitial;
- (void).cxx_destruct;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidReceiveTapEvent:(id)arg1;
- (void)interstitialDidDisappear:(id)arg1;
- (void)interstitialWillDisappear:(id)arg1;
- (void)interstitialDidAppear:(id)arg1;
- (void)interstitialWillAppear:(id)arg1;
- (void)interstitialDidFailToLoadAd:(id)arg1;
- (void)interstitialDidLoadAd:(id)arg1;
- (id)adUnitId;
- (id)location;
- (void)showInterstitialFromRootViewController:(id)arg1;
- (void)requestInterstitialWithCustomEventInfo:(id)arg1;
- (_Bool)enableAutomaticImpressionAndClickTracking;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <MPPrivateInterstitialCustomEventDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ToastCollectionViewCell : UICollectionViewCell
{
    ToastView *_toastView;
}

@property(retain, nonatomic) ToastView *toastView; // @synthesize toastView=_toastView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CommentComposeImageManager : NSObject <UINavigationControllerDelegate, UIImagePickerControllerDelegate>
{
    UIViewController *_viewControllerForPresentation;
}

@property(nonatomic) __weak UIViewController *viewControllerForPresentation; // @synthesize viewControllerForPresentation=_viewControllerForPresentation;
- (void).cxx_destruct;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)presentImagePickerForSourceType:(long long)arg1;
- (void)showPermissionModalWithCompletion:(CDUnknownBlockType)arg1;
- (void)showCamera;
- (void)showPhotoPicker;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPMRAIDInterstitialViewController : MPInterstitialViewController <MRControllerDelegate, MPForceableOrientationProtocol>
{
    MPAdConfiguration *_configuration;
    MRController *_mraidController;
    UIView *_interstitialView;
    unsigned long long _supportedOrientationMask;
}

@property(nonatomic) unsigned long long supportedOrientationMask; // @synthesize supportedOrientationMask=_supportedOrientationMask;
@property(retain, nonatomic) UIView *interstitialView; // @synthesize interstitialView=_interstitialView;
@property(retain, nonatomic) MRController *mraidController; // @synthesize mraidController=_mraidController;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)rewardedVideoEnded;
- (void)appShouldResumeFromAd:(id)arg1;
- (void)appShouldSuspendForAd:(id)arg1;
- (void)adDidClose:(id)arg1;
- (void)adWillClose:(id)arg1;
- (void)adDidFailToLoad:(id)arg1;
- (void)adDidLoad:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (id)adConfiguration;
- (id)adUnitId;
- (id)location;
- (void)didDismissInterstitial;
- (void)willDismissInterstitial;
- (void)didPresentInterstitial;
- (void)willPresentInterstitial;
- (void)startLoading;
- (id)initWithAdConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MessageTextCell : UICollectionViewCell
{
    MessageTextView *_messageTextView;
}

@property(retain, nonatomic) MessageTextView *messageTextView; // @synthesize messageTextView=_messageTextView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ExpandableHeaderControl : UIControl
{
    _Bool _buttonExpanded;
    UIButton *_titleButton;
    UIButton *_expandButton;
    id _target;
    SEL _expansionSelector;
    SEL _collapseSelector;
}

@property(nonatomic) SEL collapseSelector; // @synthesize collapseSelector=_collapseSelector;
@property(nonatomic) SEL expansionSelector; // @synthesize expansionSelector=_expansionSelector;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(nonatomic) _Bool buttonExpanded; // @synthesize buttonExpanded=_buttonExpanded;
@property(readonly, nonatomic) UIButton *expandButton; // @synthesize expandButton=_expandButton;
@property(readonly, nonatomic) UIButton *titleButton; // @synthesize titleButton=_titleButton;
- (void).cxx_destruct;
- (void)setTitleButtonImage:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)setTarget:(id)arg1 selector:(SEL)arg2 forControlEvent:(unsigned long long)arg3;
- (void)didTapExpandButton;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)init;

@end

@interface CommentReplyViewController : BaseViewController <UITextViewDelegate, UITextFieldDelegate>
{
    Comment *_comment;
    id <CommentReplyViewControllerDelegate> _delegate;
    CommentReplyView *_composeView;
}

@property(retain, nonatomic) CommentReplyView *composeView; // @synthesize composeView=_composeView;
@property(nonatomic) __weak id <CommentReplyViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)didTap:(id)arg1;
- (void)didTapClose;
- (void)didTapPostButton:(id)arg1;
- (void)toggleSendButton:(id)arg1 asEnabled:(_Bool)arg2;
- (void)configureWithComment:(id)arg1 andDelegate:(id)arg2;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface REDRequest : NSMutableURLRequest
{
}

+ (void)appendSignedPostBodyToHeaderForRequest:(id)arg1 fromDictionary:(id)arg2;
+ (id)hmacStringForInputString:(id)arg1;
+ (id)processedURLStringFromURLString:(id)arg1;
+ (void)addAdditionalHeadersForRequest:(id)arg1;
+ (id)userAgent;

@end

@interface REDGetRequest : REDRequest
{
}

- (id)initWithUrlString:(id)arg1 parameters:(id)arg2 processURL:(_Bool)arg3;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2;

@end

@interface REDPostRequest : REDRequest
{
}

- (id)initWithUrlString:(id)arg1 parameters:(id)arg2 processURL:(_Bool)arg3 customSerialization:(CDUnknownBlockType)arg4;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2 processURL:(_Bool)arg3;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2;

@end

@interface REDPutRequest : REDRequest
{
}

- (id)initJSONRequestWithURLString:(id)arg1 bodyParameters:(id)arg2;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2;

@end

@interface REDDeleteRequest : REDRequest
{
}

- (id)initJSONRequestWithURLString:(id)arg1 bodyParameters:(id)arg2;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2;

@end

@interface REDPatchRequest : REDRequest
{
}

- (id)initJSONRequestWithURLString:(id)arg1 bodyParameters:(id)arg2;
- (id)initWithUrlString:(id)arg1 parameters:(id)arg2;

@end

@interface LocalFeedNetworkSource : ListingNetworkSource
{
}

- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;
- (void)fetchDataWithParameters:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)fetchData;

// Remaining properties
@property(nonatomic) _Bool isFailed;
@property(nonatomic) _Bool isFetching;

@end

@interface MPFacebookKeywordProvider : NSObject <MPKeywordProvider>
{
}

+ (id)keyword;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPRewardedVideoAdapter : NSObject <MPPrivateRewardedVideoCustomEventDelegate>
{
    _Bool _hasTrackedImpression;
    _Bool _hasTrackedClick;
    _Bool _hasSuccessfullyLoaded;
    _Bool _hasExpired;
    id <MPRewardedVideoAdapterDelegate> _delegate;
    MPRewardedVideoCustomEvent *_rewardedVideoCustomEvent;
    MPAdConfiguration *_configuration;
    MPTimer *_timeoutTimer;
}

@property(nonatomic) _Bool hasExpired; // @synthesize hasExpired=_hasExpired;
@property(nonatomic) _Bool hasSuccessfullyLoaded; // @synthesize hasSuccessfullyLoaded=_hasSuccessfullyLoaded;
@property(nonatomic) _Bool hasTrackedClick; // @synthesize hasTrackedClick=_hasTrackedClick;
@property(nonatomic) _Bool hasTrackedImpression; // @synthesize hasTrackedImpression=_hasTrackedImpression;
@property(retain, nonatomic) MPTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) MPRewardedVideoCustomEvent *rewardedVideoCustomEvent; // @synthesize rewardedVideoCustomEvent=_rewardedVideoCustomEvent;
@property(nonatomic) __weak id <MPRewardedVideoAdapterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)adUnitId;
- (id)customerIdForRewardedVideoCustomEvent:(id)arg1;
- (void)rewardedVideoShouldRewardUserForCustomEvent:(id)arg1 reward:(id)arg2;
- (void)rewardedVideoDidReceiveTapEventForCustomEvent:(id)arg1;
- (void)rewardedVideoWillLeaveApplicationForCustomEvent:(id)arg1;
- (void)rewardedVideoDidDisappearForCustomEvent:(id)arg1;
- (void)rewardedVideoWillDisappearForCustomEvent:(id)arg1;
- (void)rewardedVideoDidAppearForCustomEvent:(id)arg1;
- (void)rewardedVideoWillAppearForCustomEvent:(id)arg1;
- (void)rewardedVideoDidFailToPlayForCustomEvent:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidExpireForCustomEvent:(id)arg1;
- (void)rewardedVideoDidFailToLoadAdForCustomEvent:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidLoadAdForCustomEvent:(id)arg1;
- (id)instanceMediationSettingsForClass:(Class)arg1;
- (void)trackClick;
- (void)trackImpression;
- (id)rewardedVideoCompletionUrlByAppendingClientParams;
- (void)didStopLoading;
- (void)timeout;
- (void)startTimeoutTimer;
- (void)handleAdPlayedForCustomEventNetwork;
- (void)presentRewardedVideoFromViewController:(id)arg1;
- (_Bool)hasAdAvailable;
- (void)getAdWithConfiguration:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPInterstitialCustomEvent : NSObject
{
    id <MPInterstitialCustomEventDelegate> delegate;
}

@property(nonatomic) __weak id <MPInterstitialCustomEventDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)showInterstitialFromRootViewController:(id)arg1;
- (_Bool)enableAutomaticImpressionAndClickTracking;
- (void)requestInterstitialWithCustomEventInfo:(id)arg1;

@end

@interface FeedSponsoredCollectionViewCell : UICollectionViewCell
{
    FeedPostSponsoredView *_feedPostView;
}

@property(retain, nonatomic) FeedPostSponsoredView *feedPostView; // @synthesize feedPostView=_feedPostView;
- (void).cxx_destruct;
- (void)didBecomeFullyVisible;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TextFieldAccessoryButton : BaseButton
{
    UITextField *_textField;
}

@property(nonatomic) __weak UITextField *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;

@end

@interface ThreadedObjectManager : NSObject
{
    _Bool _useOldStyleNodes;
    NSArray *_objectVisualNodes;
    NSArray *_flattenedObjects;
    NSArray *_objects;
    NSArray *_optmizedObjectTree;
}

+ (id)getInvalidationRangesFromChanges:(id)arg1;
+ (id)calculateChangesFromOldVisualsNodes:(id)arg1 toNewVisualNodes:(id)arg2;
@property(copy, nonatomic) NSArray *optmizedObjectTree; // @synthesize optmizedObjectTree=_optmizedObjectTree;
@property(nonatomic) _Bool useOldStyleNodes; // @synthesize useOldStyleNodes=_useOldStyleNodes;
@property(copy, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(copy, nonatomic) NSArray *flattenedObjects; // @synthesize flattenedObjects=_flattenedObjects;
@property(copy, nonatomic) NSArray *objectVisualNodes; // @synthesize objectVisualNodes=_objectVisualNodes;
- (void).cxx_destruct;
- (id)optimizeCommentTree:(id)arg1 atLevel:(unsigned long long)arg2;
- (id)optimizeCommentTree:(id)arg1;
- (id)convertObjectTreeToFlatObjectArray:(id)arg1 atLevel:(unsigned long long)arg2;
- (id)convertObjectTreeToFlatObjectArray:(id)arg1;
- (void)collapseObject:(id)arg1 asCollapsed:(_Bool)arg2;
- (id)generateOldStyleVisualNodes:(id)arg1;
- (id)generateVisualNodes:(id)arg1;
- (void)calculateObjectVisuals;

@end

@interface FeedPostCommentsBarViewCompact : FeedPostCommentsBarView
{
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;

@end

@interface FeedNetworkSource : ListingNetworkSource
{
}

- (void)refreshPostDataForThemeChangeWithCompletion:(CDUnknownBlockType)arg1;
- (id)postsFromData:(id)arg1;
- (id)getAdPostWithType:(long long)arg1;
- (void)reblendAdsWithType:(long long)arg1;
- (id)insertAdsToFeedObjects:(id)arg1 fromLocation:(long long)arg2;
- (long long)lastAdLocationInFeedPosts:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface LiveUpdateEmbedView : BaseView <ThemeUpdateCallbackProtocol>
{
    id <LiveUpdateEmbedViewDelegate> _delegate;
    NSArray *_embeds;
}

@property(copy, nonatomic) NSArray *embeds; // @synthesize embeds=_embeds;
@property(nonatomic) __weak id <LiveUpdateEmbedViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)configureWithEmbedData:(id)arg1;
- (void)themeDidChange:(id)arg1;
- (void)prepareForReuse;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPXMLParser : NSObject <NSXMLParserDelegate>
{
    NSMutableArray *_elementStack;
    NSMutableString *_currentTextContent;
    NSError *_parseError;
}

@property(retain, nonatomic) NSError *parseError; // @synthesize parseError=_parseError;
@property(retain, nonatomic) NSMutableString *currentTextContent; // @synthesize currentTextContent=_currentTextContent;
@property(retain, nonatomic) NSMutableArray *elementStack; // @synthesize elementStack=_elementStack;
- (void).cxx_destruct;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)dictionaryWithData:(id)arg1 error:(id *)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StackedViewController : BaseNavigationViewController
{
    _Bool _dimmed;
    UIViewController *_contentViewController;
    id <StackedViewControllerDelegate> _stackedViewControllerDelegate;
    double _dimPercent;
    UIGestureRecognizer *_dimmerRecognizer;
    CALayer *_dimmerLayer;
}

@property(retain, nonatomic) CALayer *dimmerLayer; // @synthesize dimmerLayer=_dimmerLayer;
@property(retain, nonatomic) UIGestureRecognizer *dimmerRecognizer; // @synthesize dimmerRecognizer=_dimmerRecognizer;
@property(nonatomic) double dimPercent; // @synthesize dimPercent=_dimPercent;
@property(nonatomic) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(nonatomic) __weak id <StackedViewControllerDelegate> stackedViewControllerDelegate; // @synthesize stackedViewControllerDelegate=_stackedViewControllerDelegate;
@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)fireDisappearAnalyticsEvents;
- (void)fireAppearAnalyticsEvents;
- (void)removeCloseButton;
- (void)addCloseButton;
- (void)didTapFocus:(id)arg1;
- (void)didTapClose:(id)arg1;
- (void)configureNavigationBarAppearance;
- (void)dimmerTapped:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithViewController:(id)arg1;

@end

@interface AFSecurityPolicy : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _allowInvalidCertificates;
    _Bool _validatesDomainName;
    unsigned long long _SSLPinningMode;
    NSSet *_pinnedCertificates;
    NSSet *_pinnedPublicKeys;
}

+ (_Bool)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingPinnedPublicKeys;
+ (id)policyWithPinningMode:(unsigned long long)arg1 withPinnedCertificates:(id)arg2;
+ (id)policyWithPinningMode:(unsigned long long)arg1;
+ (id)defaultPolicy;
+ (id)defaultPinnedCertificates;
+ (id)certificatesInBundle:(id)arg1;
@property(retain, nonatomic) NSSet *pinnedPublicKeys; // @synthesize pinnedPublicKeys=_pinnedPublicKeys;
@property(nonatomic) _Bool validatesDomainName; // @synthesize validatesDomainName=_validatesDomainName;
@property(nonatomic) _Bool allowInvalidCertificates; // @synthesize allowInvalidCertificates=_allowInvalidCertificates;
@property(retain, nonatomic) NSSet *pinnedCertificates; // @synthesize pinnedCertificates=_pinnedCertificates;
@property(nonatomic) unsigned long long SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)evaluateServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (id)init;

@end

@interface FeedPostTextView : BaseView <UIGestureRecognizerDelegate, BaseModelObserver, ThemeUpdateCallbackProtocol, ContentImageViewDelegate, UITextViewDelegate, PeekPreviewProtocol>
{
    id <FeedPostTextViewDelegate> _delegate;
    UIGestureRecognizer *_recognizer;
    Post *_post;
    BaseTextView *_textView;
    ContentImageView *_thumbnailImageView;
    BaseLabel *_thumbnailUrlLabel;
    BaseImageView *_smallThumbnailIconImageView;
    BaseImageView *_thumbnailLinkTypeIconImageView;
}

+ (struct CGSize)thumbnailSize;
+ (struct UIEdgeInsets)thumbnailPadding;
+ (struct CGSize)thumbnailSizeWithPadding;
+ (_Bool)showThumbnailUrlLabelForPost:(id)arg1;
+ (_Bool)showThumbailLinkTypeIconForPost:(id)arg1;
+ (_Bool)smallThumbnailImageForPost:(id)arg1;
+ (_Bool)postHasThumbnailImage:(id)arg1;
+ (_Bool)showThumbnailForPost:(id)arg1 delegate:(id)arg2;
+ (_Bool)postHasLargeAssetsToDisplay:(id)arg1;
+ (id)textViewForSizeCalculationsForPost:(id)arg1 delegate:(id)arg2;
+ (struct UIEdgeInsets)textViewContainerInset;
+ (double)bottomTextPadding;
+ (double)topTextPaddingWithDelegate:(id)arg1;
+ (double)leftOrRightTextPadding;
+ (id)preferredFontWithDelegate:(id)arg1;
+ (double)preferredTextWidth;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegate:(id)arg2;
+ (_Bool)shouldAddBottomTextPaddingForPost:(id)arg1 delegate:(id)arg2;
+ (struct CGSize)textViewSizeWithData:(id)arg1 delegate:(id)arg2;
+ (id)textOfDisplayedContentForPost:(id)arg1 delegate:(id)arg2;
+ (long long)feedPostTypeForDelegate:(id)arg1;
@property(retain, nonatomic) BaseImageView *thumbnailLinkTypeIconImageView; // @synthesize thumbnailLinkTypeIconImageView=_thumbnailLinkTypeIconImageView;
@property(retain, nonatomic) BaseImageView *smallThumbnailIconImageView; // @synthesize smallThumbnailIconImageView=_smallThumbnailIconImageView;
@property(retain, nonatomic) BaseLabel *thumbnailUrlLabel; // @synthesize thumbnailUrlLabel=_thumbnailUrlLabel;
@property(retain, nonatomic) ContentImageView *thumbnailImageView; // @synthesize thumbnailImageView=_thumbnailImageView;
@property(retain, nonatomic) BaseTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(retain, nonatomic) UIGestureRecognizer *recognizer; // @synthesize recognizer=_recognizer;
@property(nonatomic) __weak id <FeedPostTextViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)findLinkAtLocation:(struct CGPoint)arg1 onComplete:(CDUnknownBlockType)arg2;
- (struct CGRect)peekPreviewSourceRectWhenTouchedAtLocation:(struct CGPoint)arg1;
- (id)peekPreviewURLAtTouchLocation:(struct CGPoint)arg1;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)contentImageViewDidTapImage:(id)arg1;
- (void)themeDidChange:(id)arg1;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)setTitleTextStatusColor:(id)arg1;
- (void)updateTextColorBasedOnReadStatus;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)didTapText;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseStore : NSObject
{
    NSString *_baseURLString;
    NSMapTable *_inMemStorage;
}

+ (id)writeQueue;
@property(retain, nonatomic) NSMapTable *inMemStorage; // @synthesize inMemStorage=_inMemStorage;
@property(copy, nonatomic) NSString *baseURLString; // @synthesize baseURLString=_baseURLString;
- (void).cxx_destruct;
- (void)deleteModelFromDiskWithPK:(id)arg1;
- (void)deleteModel:(id)arg1;
- (void)persistModel:(id)arg1;
- (id)initWithBaseURLString:(id)arg1;
- (id)init;

@end

@interface MPNativeAdRequest : NSObject <MPNativeCustomEventDelegate, MPAdServerCommunicatorDelegate>
{
    _Bool _loading;
    MPNativeAdRequestTargeting *_targeting;
    NSString *_adUnitIdentifier;
    NSArray *_rendererConfigurations;
    NSURL *_URL;
    MPAdServerCommunicator *_communicator;
    CDUnknownBlockType _completionHandler;
    MPNativeCustomEvent *_nativeCustomEvent;
    MPAdConfiguration *_adConfiguration;
    id <MPNativeAdRenderer> _customEventRenderer;
}

+ (id)requestWithAdUnitIdentifier:(id)arg1 rendererConfigurations:(id)arg2;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) id <MPNativeAdRenderer> customEventRenderer; // @synthesize customEventRenderer=_customEventRenderer;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(retain, nonatomic) MPNativeCustomEvent *nativeCustomEvent; // @synthesize nativeCustomEvent=_nativeCustomEvent;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) MPAdServerCommunicator *communicator; // @synthesize communicator=_communicator;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSArray *rendererConfigurations; // @synthesize rendererConfigurations=_rendererConfigurations;
@property(copy, nonatomic) NSString *adUnitIdentifier; // @synthesize adUnitIdentifier=_adUnitIdentifier;
@property(retain, nonatomic) MPNativeAdRequestTargeting *targeting; // @synthesize targeting=_targeting;
- (void).cxx_destruct;
- (void)nativeCustomEvent:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)nativeCustomEvent:(id)arg1 didLoadAd:(id)arg2;
- (void)communicatorDidFailWithError:(id)arg1;
- (void)communicatorDidReceiveAdConfiguration:(id)arg1;
- (void)completeAdRequestWithAdObject:(id)arg1 error:(id)arg2;
- (void)getAdWithConfiguration:(id)arg1;
- (void)loadAdWithURL:(id)arg1;
- (void)assignCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startForAdSequence:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithAdUnitIdentifier:(id)arg1 rendererConfigurations:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseBarButtonItem : UIBarButtonItem
{
}

- (id)initWithImage:(id)arg1 style:(long long)arg2 target:(id)arg3 action:(SEL)arg4;

@end

@interface FeedPostTitleViewExpanded : FeedPostTitleView
{
    BaseButton *_communityIconButton;
    NSString *_communityIconUrlString;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegate:(id)arg2;
@property(copy, nonatomic) NSString *communityIconUrlString; // @synthesize communityIconUrlString=_communityIconUrlString;
@property(retain, nonatomic) BaseButton *communityIconButton; // @synthesize communityIconButton=_communityIconButton;
- (void).cxx_destruct;
- (void)setCommunityIconToDefault;
- (void)setCommunityIconWithUrl:(id)arg1;
- (void)layoutSubviews;
- (void)didTapCommunityIconButton:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CommunityViewDataSource : NSObject <UITableViewDataSource>
{
    _Bool _editing;
    UITableView *_tableView;
    long long _section;
    NSString *_headerString;
    BaseViewController *_controller;
    id <CommunityViewDataSourceDelegate> _delegate;
}

@property(nonatomic) __weak id <CommunityViewDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak BaseViewController *controller; // @synthesize controller=_controller;
@property(copy, nonatomic) NSString *headerString; // @synthesize headerString=_headerString;
@property(nonatomic) _Bool editing; // @synthesize editing=_editing;
@property(nonatomic) long long section; // @synthesize section=_section;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *indexes;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableViewDidScroll;
- (void)refreshSubscriptions;
- (id)viewControllerForIndexPath:(id)arg1;
- (id)initWithTableView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MessageCommandView : BaseView
{
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;

@end

@interface MessageListViewController : ListingViewController <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, MessagesRepliesViewControllerProcotol, PagedTabControllerProtocol>
{
    BaseCollectionView *_collectionView;
    PageSegmentItem *_pageItem;
    NSArray *_currentMessages;
    NSArray *_currentMessageSubjects;
}

@property(copy, nonatomic) NSArray *currentMessageSubjects; // @synthesize currentMessageSubjects=_currentMessageSubjects;
@property(copy, nonatomic) NSArray *currentMessages; // @synthesize currentMessages=_currentMessages;
@property(retain, nonatomic) PageSegmentItem *pageItem; // @synthesize pageItem=_pageItem;
@property(retain, nonatomic) BaseCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (id)pageItemText;
- (id)pageItemSelectedImage;
- (id)pageItemImage;
- (void)messagesRepliesViewController:(id)arg1 didAddNewMessage:(id)arg2;
- (void)messagesRepliesViewController:(id)arg1 didMarkMessageAsRead:(id)arg2;
- (void)locallyMarkAllAsRead;
- (void)convertMessageTreeToReadingList;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (id)majorContentScrollView;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVASTMacroProcessor : NSObject
{
}

+ (id)macroExpandedURLForURL:(id)arg1 errorCode:(id)arg2 videoTimeOffset:(double)arg3 videoAssetURL:(id)arg4;
+ (id)macroExpandedURLForURL:(id)arg1 errorCode:(id)arg2;

@end

@interface MPInterstitialAdManager : NSObject <MPAdServerCommunicatorDelegate, MPInterstitialAdapterDelegate>
{
    _Bool _loading;
    _Bool _ready;
    id <MPInterstitialAdManagerDelegate> _delegate;
    MPAdServerCommunicator *_communicator;
    MPBaseInterstitialAdapter *_adapter;
    MPAdConfiguration *_configuration;
}

@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) MPBaseInterstitialAdapter *adapter; // @synthesize adapter=_adapter;
@property(retain, nonatomic) MPAdServerCommunicator *communicator; // @synthesize communicator=_communicator;
@property(nonatomic) __weak id <MPInterstitialAdManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool ready; // @synthesize ready=_ready;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
- (void).cxx_destruct;
- (void)interstitialWillLeaveApplicationForAdapter:(id)arg1;
- (void)interstitialDidReceiveTapEventForAdapter:(id)arg1;
- (void)interstitialDidExpireForAdapter:(id)arg1;
- (void)interstitialDidDisappearForAdapter:(id)arg1;
- (void)interstitialWillDisappearForAdapter:(id)arg1;
- (void)interstitialDidAppearForAdapter:(id)arg1;
- (void)interstitialWillAppearForAdapter:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)adapterDidFinishLoadingAd:(id)arg1;
- (void)setUpAdapterWithConfiguration:(id)arg1;
- (void)communicatorDidFailWithError:(id)arg1;
- (void)communicatorDidReceiveAdConfiguration:(id)arg1;
- (id)interstitialDelegate;
- (id)interstitialAdController;
- (id)location;
- (void)presentInterstitialFromViewController:(id)arg1;
- (void)loadInterstitialWithAdUnitID:(id)arg1 keywords:(id)arg2 location:(id)arg3 testing:(_Bool)arg4;
- (void)loadAdWithURL:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RecentSubredditsViewController : BaseViewController <UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource>
{
    _Bool _hasLoadedDataOnce;
    _Bool _isShowingAutocompleteSearchResults;
    id <RecentSubredditsViewControllerDelegate> _delegate;
    NSArray *_recentSubreddits;
    NSArray *_subscribedSubreddits;
    NSArray *_searchResults;
    NSString *_submittedQuery;
    BaseTableView *_tableView;
}

@property(nonatomic) _Bool isShowingAutocompleteSearchResults; // @synthesize isShowingAutocompleteSearchResults=_isShowingAutocompleteSearchResults;
@property(nonatomic) _Bool hasLoadedDataOnce; // @synthesize hasLoadedDataOnce=_hasLoadedDataOnce;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
@property(copy, nonatomic) NSString *submittedQuery; // @synthesize submittedQuery=_submittedQuery;
@property(copy, nonatomic) NSArray *searchResults; // @synthesize searchResults=_searchResults;
@property(copy, nonatomic) NSArray *subscribedSubreddits; // @synthesize subscribedSubreddits=_subscribedSubreddits;
@property(copy, nonatomic) NSArray *recentSubreddits; // @synthesize recentSubreddits=_recentSubreddits;
@property(nonatomic) __weak id <RecentSubredditsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (void)reloadWithNewSearchResults:(id)arg1;
- (void)updateSearchResultsWithAutocomplete:(id)arg1;
- (void)didTapCloseCommunityInfo;
- (void)showCommunityInfoForSubredditNamed:(id)arg1;
- (void)didTapSearchAccessoryButton:(id)arg1;
- (void)didTapRecentAccessoryButton:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)subredditForIndex:(id)arg1;
- (void)loadSubscribedSubsFromNetwork;
- (void)viewDidAppear:(_Bool)arg1;
- (struct UIEdgeInsets)preferredContentInset;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MoPub : NSObject <FABKit>
{
    NSArray *_globalMediationSettings;
}

+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *globalMediationSettings; // @synthesize globalMediationSettings=_globalMediationSettings;
- (void).cxx_destruct;
- (id)globalMediationSettingsForClass:(Class)arg1;
- (void)initializeRewardedVideoWithGlobalMediationSettings:(id)arg1 delegate:(id)arg2;
- (id)bundleIdentifier;
- (id)version;
- (void)start;
@property(nonatomic) _Bool frequencyCappingIdUsageEnabled;
@property(nonatomic) _Bool locationUpdatesEnabled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MainTabBarController : UITabBarController <UITabBarControllerDelegate>
{
    CommunityTabViewController *_communityViewController;
    AccountViewController *_userViewController;
    InboxViewController *_inboxViewController;
}

@property(retain, nonatomic) InboxViewController *inboxViewController; // @synthesize inboxViewController=_inboxViewController;
@property(retain, nonatomic) AccountViewController *userViewController; // @synthesize userViewController=_userViewController;
@property(retain, nonatomic) CommunityTabViewController *communityViewController; // @synthesize communityViewController=_communityViewController;
- (void).cxx_destruct;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)switchToInboxTab;
- (void)switchToCommunitiesTabAndStartSearch;
- (void)switchToCommunitiesTab;
- (void)switchToMainFeedTab;
- (void)refreshInboxStatusWithCount:(long long)arg1;
- (void)showSubmittedPostViewController;
- (id)lineViewFromView:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)createViewControllers;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YTPlayerView : UIView <UIWebViewDelegate>
{
    UIWebView *_webView;
    id <YTPlayerViewDelegate> _delegate;
    NSURL *_originURL;
    UIView *_initialLoadingView;
}

+ (id)frameworkBundle;
+ (id)stringForPlayerState:(long long)arg1;
+ (long long)playerStateForString:(id)arg1;
+ (id)stringForPlaybackQuality:(long long)arg1;
+ (long long)playbackQualityForString:(id)arg1;
@property(nonatomic) __weak UIView *initialLoadingView; // @synthesize initialLoadingView=_initialLoadingView;
@property(retain, nonatomic) NSURL *originURL; // @synthesize originURL=_originURL;
@property(nonatomic) __weak id <YTPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)removeWebView;
- (id)createNewWebView;
- (void)setWebView:(id)arg1;
- (id)stringForJSBoolean:(_Bool)arg1;
- (id)stringFromEvaluatingJavaScript:(id)arg1;
- (id)stringFromVideoIdArray:(id)arg1;
- (void)loadPlaylist:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)cuePlaylist:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (_Bool)loadWithPlayerParams:(id)arg1;
- (_Bool)handleHttpNavigationToUrl:(id)arg1;
- (void)notifyDelegateOfYouTubeCallbackUrl:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)availableQualityLevels;
- (void)playVideoAt:(int)arg1;
- (void)previousVideo;
- (void)nextVideo;
- (int)playlistIndex;
- (id)playlist;
- (id)videoEmbedCode;
- (id)videoUrl;
- (double)duration;
- (void)setPlaybackQuality:(long long)arg1;
- (long long)playbackQuality;
- (float)currentTime;
- (long long)playerState;
- (float)videoLoadedFraction;
- (void)setShuffle:(_Bool)arg1;
- (void)setLoop:(_Bool)arg1;
- (id)availablePlaybackRates;
- (void)setPlaybackRate:(float)arg1;
- (float)playbackRate;
- (void)loadPlaylistByVideos:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)loadPlaylistByPlaylistId:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)cuePlaylistByVideos:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)cuePlaylistByPlaylistId:(id)arg1 index:(int)arg2 startSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)loadVideoByURL:(id)arg1 startSeconds:(float)arg2 endSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)loadVideoByURL:(id)arg1 startSeconds:(float)arg2 suggestedQuality:(long long)arg3;
- (void)cueVideoByURL:(id)arg1 startSeconds:(float)arg2 endSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)cueVideoByURL:(id)arg1 startSeconds:(float)arg2 suggestedQuality:(long long)arg3;
- (void)loadVideoById:(id)arg1 startSeconds:(float)arg2 endSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)loadVideoById:(id)arg1 startSeconds:(float)arg2 suggestedQuality:(long long)arg3;
- (void)cueVideoById:(id)arg1 startSeconds:(float)arg2 endSeconds:(float)arg3 suggestedQuality:(long long)arg4;
- (void)cueVideoById:(id)arg1 startSeconds:(float)arg2 suggestedQuality:(long long)arg3;
- (void)seekToSeconds:(float)arg1 allowSeekAhead:(_Bool)arg2;
- (void)stopVideo;
- (void)pauseVideo;
- (void)playVideo;
- (_Bool)loadWithPlaylistId:(id)arg1 playerVars:(id)arg2;
- (_Bool)loadWithVideoId:(id)arg1 playerVars:(id)arg2;
- (_Bool)loadWithPlaylistId:(id)arg1;
- (_Bool)loadWithVideoId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MOPUBNativeVideoImpressionAgent : NSObject
{
    _Bool _requirementsSatisfied;
    double _requiredVisiblePercentage;
    double _requiredPlaybackDuration;
    double _visibilitySatisfiedPlaybackTime;
    UIView *_measuredVideoView;
}

@property(nonatomic) _Bool requirementsSatisfied; // @synthesize requirementsSatisfied=_requirementsSatisfied;
@property(nonatomic) __weak UIView *measuredVideoView; // @synthesize measuredVideoView=_measuredVideoView;
@property(nonatomic) double visibilitySatisfiedPlaybackTime; // @synthesize visibilitySatisfiedPlaybackTime=_visibilitySatisfiedPlaybackTime;
@property(nonatomic) double requiredPlaybackDuration; // @synthesize requiredPlaybackDuration=_requiredPlaybackDuration;
@property(nonatomic) double requiredVisiblePercentage; // @synthesize requiredVisiblePercentage=_requiredVisiblePercentage;
- (void).cxx_destruct;
- (_Bool)shouldTrackImpressionWithCurrentPlaybackTime:(double)arg1;
- (id)initWithVideoView:(id)arg1 requiredVisibilityPercentage:(double)arg2 requiredPlaybackDuration:(double)arg3;

@end

@interface MPTableViewAdPlacer : NSObject <UITableViewDataSource, UITableViewDelegate, MPStreamAdPlacerDelegate>
{
    id <MPTableViewAdPlacerDelegate> _delegate;
    MPStreamAdPlacer *_streamAdPlacer;
    UITableView *_tableView;
    id <UITableViewDataSource> _originalDataSource;
    id <UITableViewDelegate> _originalDelegate;
    MPTimer *_insertionTimer;
}

+ (id)placerWithTableView:(id)arg1 viewController:(id)arg2 adPositioning:(id)arg3 rendererConfigurations:(id)arg4;
+ (id)placerWithTableView:(id)arg1 viewController:(id)arg2 rendererConfigurations:(id)arg3;
@property(retain, nonatomic) MPTimer *insertionTimer; // @synthesize insertionTimer=_insertionTimer;
@property(nonatomic) __weak id <UITableViewDelegate> originalDelegate; // @synthesize originalDelegate=_originalDelegate;
@property(nonatomic) __weak id <UITableViewDataSource> originalDataSource; // @synthesize originalDataSource=_originalDataSource;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) MPStreamAdPlacer *streamAdPlacer; // @synthesize streamAdPlacer=_streamAdPlacer;
@property(nonatomic) __weak id <MPTableViewAdPlacerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 indentationLevelForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willDeselectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didUnhighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)nativeAdWillLeaveApplicationFromStreamAdPlacer:(id)arg1;
- (void)nativeAdDidDismissModalForStreamAdPlacer:(id)arg1;
- (void)nativeAdWillPresentModalForStreamAdPlacer:(id)arg1;
- (void)adPlacer:(id)arg1 didRemoveAdsAtIndexPaths:(id)arg2;
- (void)adPlacer:(id)arg1 didLoadAdAtIndexPath:(id)arg2;
- (void)updateVisibleCells;
- (void)loadAdsForAdUnitID:(id)arg1 targeting:(id)arg2;
- (void)loadAdsForAdUnitID:(id)arg1;
- (void)dealloc;
- (id)initWithTableView:(id)arg1 viewController:(id)arg2 adPositioning:(id)arg3 rendererConfigurations:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PeekPreviewHandler : NSObject
{
}

+ (id)previewControllerForContext:(id)arg1 location:(struct CGPoint)arg2;
+ (_Bool)isCompatibleWithController:(id)arg1;

@end

@interface ComposeMessageViewController : BaseViewController
{
    NSObject<ComposeMessageViewControllerDelegate> *_delegate;
    ComposeMessageView *_composeView;
    NSString *_recipient;
}

@property(copy, nonatomic) NSString *recipient; // @synthesize recipient=_recipient;
@property(retain, nonatomic) ComposeMessageView *composeView; // @synthesize composeView=_composeView;
@property(nonatomic) __weak NSObject<ComposeMessageViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)didTapPostButton:(id)arg1;
- (void)didTapClose;
- (void)toggleSendButton:(id)arg1 asEnabled:(_Bool)arg2;
- (void)setMessageModeratorsMode:(_Bool)arg1;
- (void)configureWithSubreddit:(id)arg1;
- (void)configureWithUsername:(id)arg1;
- (void)viewDidLoad;

@end

@interface TextFieldContentView : BaseView
{
    LabeledTextField *_textField;
}

@property(retain, nonatomic) LabeledTextField *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)layoutSubviews;
- (id)init;

@end

@interface MessageHeaderView : VerticalLineView
{
    UIView *_messageArrow;
    UILabel *_commentUserAndTimeLabel;
    Message *_message;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) Message *message; // @synthesize message=_message;
@property(retain, nonatomic) UILabel *commentUserAndTimeLabel; // @synthesize commentUserAndTimeLabel=_commentUserAndTimeLabel;
@property(retain, nonatomic) UIView *messageArrow; // @synthesize messageArrow=_messageArrow;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPStaticNativeAdRenderer : NSObject <MPNativeAdRendererImageHandlerDelegate, MPNativeAdRenderer>
{
    _Bool _adViewInViewHierarchy;
    CDUnknownBlockType _viewSizeHandler;
    UIView<MPNativeAdRendering> *_adView;
    id <MPNativeAdAdapter> _adapter;
    Class _renderingViewClass;
    MPNativeAdRendererImageHandler *_rendererImageHandler;
}

+ (id)rendererConfigurationWithRendererSettings:(id)arg1;
@property(retain, nonatomic) MPNativeAdRendererImageHandler *rendererImageHandler; // @synthesize rendererImageHandler=_rendererImageHandler;
@property(retain, nonatomic) Class renderingViewClass; // @synthesize renderingViewClass=_renderingViewClass;
@property(nonatomic) _Bool adViewInViewHierarchy; // @synthesize adViewInViewHierarchy=_adViewInViewHierarchy;
@property(retain, nonatomic) id <MPNativeAdAdapter> adapter; // @synthesize adapter=_adapter;
@property(retain, nonatomic) UIView<MPNativeAdRendering> *adView; // @synthesize adView=_adView;
@property(readonly, nonatomic) CDUnknownBlockType viewSizeHandler; // @synthesize viewSizeHandler=_viewSizeHandler;
- (void).cxx_destruct;
- (_Bool)nativeAdViewInViewHierarchy;
- (void)adViewWillMoveToSuperview:(id)arg1;
- (void)DAAIconTapped;
- (_Bool)shouldLoadMediaView;
- (id)retrieveViewWithAdapter:(id)arg1 error:(id *)arg2;
- (id)initWithRendererSettings:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RoadblockViewController : BaseViewController <PopupViewControllerProtocol>
{
    UIImageView *_iconImageView;
    UILabel *_titleLabel;
    UILabel *_textLabel;
    UIButton *_closeButton;
    UIButton *_doneButton;
    CALayer *_lineLayer;
}

@property(retain, nonatomic) CALayer *lineLayer; // @synthesize lineLayer=_lineLayer;
@property(retain, nonatomic) UIButton *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
- (void).cxx_destruct;
- (void)didTapDone:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)configureViewAppearance;
- (void)viewDidLoad;
- (void)configureWithTitle:(id)arg1 icon:(id)arg2 text:(id)arg3;
@property(readonly, nonatomic) double preferredPopupHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MenuAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _presenting;
}

@property(nonatomic) _Bool presenting; // @synthesize presenting=_presenting;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UploadRequestManager : NSObject
{
}

+ (void)deleteImage:(id)arg1 successHandler:(CDUnknownBlockType)arg2 failureHandler:(CDUnknownBlockType)arg3;
+ (void)uploadImageFilePath:(id)arg1 successHandler:(CDUnknownBlockType)arg2 progressHandler:(CDUnknownBlockType)arg3 failureHandler:(CDUnknownBlockType)arg4;
+ (_Bool)isUploading;
+ (void)initialize;

@end

@interface MPInterstitialViewController : UIViewController
{
    _Bool _applicationHasStatusBar;
    UIButton *_closeButton;
    unsigned long long _closeButtonStyle;
    unsigned long long _orientationType;
    id <MPInterstitialViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <MPInterstitialViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool applicationHasStatusBar; // @synthesize applicationHasStatusBar=_applicationHasStatusBar;
@property(nonatomic) unsigned long long orientationType; // @synthesize orientationType=_orientationType;
@property(nonatomic) unsigned long long closeButtonStyle; // @synthesize closeButtonStyle=_closeButtonStyle;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)prefersStatusBarHidden;
- (void)setApplicationStatusBarHidden:(_Bool)arg1;
- (void)dismissInterstitialAnimated:(_Bool)arg1;
- (void)closeButtonPressed;
- (void)setCloseButtonImageWithImageNamed:(id)arg1;
- (void)layoutCloseButton;
- (_Bool)shouldDisplayCloseButton;
- (void)didDismissInterstitial;
- (void)willDismissInterstitial;
- (void)didPresentInterstitial;
- (void)willPresentInterstitial;
- (void)presentInterstitialFromViewController:(id)arg1;
- (void)viewDidLoad;

@end

@interface FeedHeaderControl : ExpandableHeaderControl
{
}

- (void)updateTitleView:(id)arg1;
- (id)init;

@end

@interface BaseControl : UIControl <ThemeUpdateCallbackProtocol>
{
    CALayer *_topBorder;
    CALayer *_bottomBorder;
    CALayer *_trailingBorder;
    CALayer *_leadingBorder;
    struct UIEdgeInsets _borderSizes;
}

@property(retain, nonatomic) CALayer *leadingBorder; // @synthesize leadingBorder=_leadingBorder;
@property(retain, nonatomic) CALayer *trailingBorder; // @synthesize trailingBorder=_trailingBorder;
@property(retain, nonatomic) CALayer *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(retain, nonatomic) CALayer *topBorder; // @synthesize topBorder=_topBorder;
@property(nonatomic) struct UIEdgeInsets borderSizes; // @synthesize borderSizes=_borderSizes;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)themeDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABExperimentManager : NSObject <NSCoding>
{
    _Bool _hasPerformedInitialFetch;
    _Bool _startupDialogForce;
    _Bool _shouldStartOnboarding;
    _Bool _shouldRandomizeOnboarding;
    _Bool _shouldShowRecommendationTabs;
    _Bool _shouldShowFacebookLoginButton;
    _Bool _shouldShowLoginSkipButton;
    _Bool _enableCarousel;
    _Bool _enableGatewayForComments;
    _Bool _enableLiveComments;
    _Bool _enableAds;
    _Bool _enableHotAlgorithm;
    _Bool _allowSVC;
    NSString *_startupDialogMessage;
    NSString *_startupDialogActionURL;
    long long _appMinimalVersionRequired;
    NSString *_discoverCategoriesURLString;
    NSString *_imageUploadClientID;
    NSString *_imageUploadURLString;
    NSString *_imageUploadDisclaimer;
    NSString *_privacyPolicyURL;
    NSString *_userAgreementURL;
    NSString *_contentPolicyURL;
    NSString *_acknowledgementsURL;
    NSDictionary *_contentTypeConfigs;
    NSDictionary *_domainNameConfigs;
    NSString *_pushPromptCadance;
    NSString *_productionCardAdId;
    NSString *_productionCompactAdId;
    NSString *_debugCardAdId;
    NSString *_debugCompactAdId;
    NSDictionary *_bucketingEventConfig;
    NSString *_filePath;
}

@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(copy) NSDictionary *bucketingEventConfig; // @synthesize bucketingEventConfig=_bucketingEventConfig;
@property(nonatomic) _Bool allowSVC; // @synthesize allowSVC=_allowSVC;
@property(nonatomic) _Bool enableHotAlgorithm; // @synthesize enableHotAlgorithm=_enableHotAlgorithm;
@property(copy, nonatomic) NSString *debugCompactAdId; // @synthesize debugCompactAdId=_debugCompactAdId;
@property(copy, nonatomic) NSString *debugCardAdId; // @synthesize debugCardAdId=_debugCardAdId;
@property(copy, nonatomic) NSString *productionCompactAdId; // @synthesize productionCompactAdId=_productionCompactAdId;
@property(copy, nonatomic) NSString *productionCardAdId; // @synthesize productionCardAdId=_productionCardAdId;
@property(nonatomic) _Bool enableAds; // @synthesize enableAds=_enableAds;
@property(nonatomic) _Bool enableLiveComments; // @synthesize enableLiveComments=_enableLiveComments;
@property(nonatomic) _Bool enableGatewayForComments; // @synthesize enableGatewayForComments=_enableGatewayForComments;
@property(nonatomic) _Bool enableCarousel; // @synthesize enableCarousel=_enableCarousel;
@property(nonatomic) _Bool shouldShowLoginSkipButton; // @synthesize shouldShowLoginSkipButton=_shouldShowLoginSkipButton;
@property(nonatomic) _Bool shouldShowFacebookLoginButton; // @synthesize shouldShowFacebookLoginButton=_shouldShowFacebookLoginButton;
@property(nonatomic) _Bool shouldShowRecommendationTabs; // @synthesize shouldShowRecommendationTabs=_shouldShowRecommendationTabs;
@property(nonatomic) _Bool shouldRandomizeOnboarding; // @synthesize shouldRandomizeOnboarding=_shouldRandomizeOnboarding;
@property(nonatomic) _Bool shouldStartOnboarding; // @synthesize shouldStartOnboarding=_shouldStartOnboarding;
@property(copy, nonatomic) NSString *pushPromptCadance; // @synthesize pushPromptCadance=_pushPromptCadance;
@property(copy, nonatomic) NSDictionary *domainNameConfigs; // @synthesize domainNameConfigs=_domainNameConfigs;
@property(copy, nonatomic) NSDictionary *contentTypeConfigs; // @synthesize contentTypeConfigs=_contentTypeConfigs;
@property(copy, nonatomic) NSString *acknowledgementsURL; // @synthesize acknowledgementsURL=_acknowledgementsURL;
@property(copy, nonatomic) NSString *contentPolicyURL; // @synthesize contentPolicyURL=_contentPolicyURL;
@property(copy, nonatomic) NSString *userAgreementURL; // @synthesize userAgreementURL=_userAgreementURL;
@property(copy, nonatomic) NSString *privacyPolicyURL; // @synthesize privacyPolicyURL=_privacyPolicyURL;
@property(copy, nonatomic) NSString *imageUploadDisclaimer; // @synthesize imageUploadDisclaimer=_imageUploadDisclaimer;
@property(copy, nonatomic) NSString *imageUploadURLString; // @synthesize imageUploadURLString=_imageUploadURLString;
@property(copy, nonatomic) NSString *imageUploadClientID; // @synthesize imageUploadClientID=_imageUploadClientID;
@property(copy, nonatomic) NSString *discoverCategoriesURLString; // @synthesize discoverCategoriesURLString=_discoverCategoriesURLString;
@property(nonatomic) long long appMinimalVersionRequired; // @synthesize appMinimalVersionRequired=_appMinimalVersionRequired;
@property(copy, nonatomic) NSString *startupDialogActionURL; // @synthesize startupDialogActionURL=_startupDialogActionURL;
@property(copy, nonatomic) NSString *startupDialogMessage; // @synthesize startupDialogMessage=_startupDialogMessage;
@property(readonly, nonatomic) _Bool startupDialogForce; // @synthesize startupDialogForce=_startupDialogForce;
@property(nonatomic) _Bool hasPerformedInitialFetch; // @synthesize hasPerformedInitialFetch=_hasPerformedInitialFetch;
- (void).cxx_destruct;
- (void)toggleExperimentWithSetter:(SEL)arg1 value:(_Bool)arg2;
@property(readonly, copy, nonatomic) NSArray *allExperiments;
- (void)parseConfig:(id)arg1;
- (void)performHandshakeWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)logExperimentExposure;
- (void)overrideValuesForBetaTestingIfNeeded;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithAccount:(id)arg1;
- (id)experimentFilePath;

@end

@interface Account : User
{
    _Bool _isModerator;
    _Bool _isEmployee;
    _Bool _isSuspended;
    _Bool _doNotTrack;
    _Bool _shouldShowOnboarding;
    _Bool _over18;
    _Bool _hideNSFWThumbnails;
    NSString *_accessToken;
    NSString *_refreshToken;
    double _accessTokenExpirationTime;
    double _accessTokenTimeToLive;
    long long _inboxCount;
    long long _hasMail;
    long long _hasModMail;
    long long _goldCreddits;
    UserStore *_userStore;
    PostStore *_postStore;
    CommentStore *_commentStore;
    SubredditStore *_subredditStore;
    MultiStore *_multiStore;
    LiveEventStore *_liveEventStore;
    MultiStore *_recommendationMultiStore;
    PostHistoryManager *_postHistoryManager;
    SubredditListManager *_subredditHistoryManager;
    SubredditListManager *_favoriteSubredditsManager;
    SubscribedSubredditsManager *_subscribedSubredditsManager;
    SubmittedPostStore *_submittedPostStore;
    PostSubmissionManager *_postSubmissionManager;
    ContentDiskCacheManager *_contentDiskCacheManager;
    MessageListingNetworkSource *_messageListingNetworkSource;
    CommentListingNetworkSource *_commentReplyListingNetworkSource;
    CommentListingNetworkSource *_postReplyListingNetworkSource;
    CommentListingNetworkSource *_mentionsListingNetworkSource;
    CommentListingNetworkSource *_friendListingNetworkSource;
    CommentListingNetworkSource *_myCommentListingNetworkSource;
    ABExperimentManager *_experimentManager;
    NSDictionary *_preferences;
}

@property(retain, nonatomic) NSDictionary *preferences; // @synthesize preferences=_preferences;
@property(retain, nonatomic) ABExperimentManager *experimentManager; // @synthesize experimentManager=_experimentManager;
@property(retain, nonatomic) CommentListingNetworkSource *myCommentListingNetworkSource; // @synthesize myCommentListingNetworkSource=_myCommentListingNetworkSource;
@property(retain, nonatomic) CommentListingNetworkSource *friendListingNetworkSource; // @synthesize friendListingNetworkSource=_friendListingNetworkSource;
@property(retain, nonatomic) CommentListingNetworkSource *mentionsListingNetworkSource; // @synthesize mentionsListingNetworkSource=_mentionsListingNetworkSource;
@property(retain, nonatomic) CommentListingNetworkSource *postReplyListingNetworkSource; // @synthesize postReplyListingNetworkSource=_postReplyListingNetworkSource;
@property(retain, nonatomic) CommentListingNetworkSource *commentReplyListingNetworkSource; // @synthesize commentReplyListingNetworkSource=_commentReplyListingNetworkSource;
@property(retain, nonatomic) MessageListingNetworkSource *messageListingNetworkSource; // @synthesize messageListingNetworkSource=_messageListingNetworkSource;
@property(retain, nonatomic) ContentDiskCacheManager *contentDiskCacheManager; // @synthesize contentDiskCacheManager=_contentDiskCacheManager;
@property(retain, nonatomic) PostSubmissionManager *postSubmissionManager; // @synthesize postSubmissionManager=_postSubmissionManager;
@property(retain, nonatomic) SubmittedPostStore *submittedPostStore; // @synthesize submittedPostStore=_submittedPostStore;
@property(retain, nonatomic) SubscribedSubredditsManager *subscribedSubredditsManager; // @synthesize subscribedSubredditsManager=_subscribedSubredditsManager;
@property(retain, nonatomic) SubredditListManager *favoriteSubredditsManager; // @synthesize favoriteSubredditsManager=_favoriteSubredditsManager;
@property(retain, nonatomic) SubredditListManager *subredditHistoryManager; // @synthesize subredditHistoryManager=_subredditHistoryManager;
@property(retain, nonatomic) PostHistoryManager *postHistoryManager; // @synthesize postHistoryManager=_postHistoryManager;
@property(retain, nonatomic) MultiStore *recommendationMultiStore; // @synthesize recommendationMultiStore=_recommendationMultiStore;
@property(retain, nonatomic) LiveEventStore *liveEventStore; // @synthesize liveEventStore=_liveEventStore;
@property(retain, nonatomic) MultiStore *multiStore; // @synthesize multiStore=_multiStore;
@property(retain, nonatomic) SubredditStore *subredditStore; // @synthesize subredditStore=_subredditStore;
@property(retain, nonatomic) CommentStore *commentStore; // @synthesize commentStore=_commentStore;
@property(retain, nonatomic) PostStore *postStore; // @synthesize postStore=_postStore;
@property(retain, nonatomic) UserStore *userStore; // @synthesize userStore=_userStore;
@property(nonatomic) _Bool hideNSFWThumbnails; // @synthesize hideNSFWThumbnails=_hideNSFWThumbnails;
@property(nonatomic) _Bool over18; // @synthesize over18=_over18;
@property(nonatomic) _Bool shouldShowOnboarding; // @synthesize shouldShowOnboarding=_shouldShowOnboarding;
@property(nonatomic) _Bool doNotTrack; // @synthesize doNotTrack=_doNotTrack;
@property(nonatomic) _Bool isSuspended; // @synthesize isSuspended=_isSuspended;
@property(nonatomic) _Bool isEmployee; // @synthesize isEmployee=_isEmployee;
@property(nonatomic) _Bool isModerator; // @synthesize isModerator=_isModerator;
@property(nonatomic) long long goldCreddits; // @synthesize goldCreddits=_goldCreddits;
@property(nonatomic) long long hasModMail; // @synthesize hasModMail=_hasModMail;
@property(nonatomic) long long hasMail; // @synthesize hasMail=_hasMail;
@property(nonatomic) long long inboxCount; // @synthesize inboxCount=_inboxCount;
- (void).cxx_destruct;
- (id)selectorsToObserveChanges;
- (id)debugDescription;
@property(readonly, nonatomic) _Bool accessTokenExipringSoon;
@property(nonatomic) double accessTokenExpirationTime; // @synthesize accessTokenExpirationTime=_accessTokenExpirationTime;
@property(nonatomic) double accessTokenTimeToLive; // @synthesize accessTokenTimeToLive=_accessTokenTimeToLive;
@property(copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) _Bool isAnonymous;
@property(readonly, copy, nonatomic) NSString *accountCacheDirectoryPath;
@property(nonatomic) _Bool isBetaTester;
@property(nonatomic) _Bool shouldAutoPlayOnlyOnWifi;
@property(readonly, nonatomic) _Bool shouldIgnoreSuggestedCommentSort;
@property(nonatomic) unsigned long long defaultCommentSort;
@property(nonatomic) unsigned long long thumbnailMode;
@property(nonatomic) long long fontSizeDelta;
- (void)setHiddenFeedMode:(unsigned long long)arg1;
- (unsigned long long)hiddenFeedMode;
- (void)setUpvotedFeedMode:(unsigned long long)arg1;
- (unsigned long long)upvotedFeedMode;
- (void)setMyPostedFeedMode:(unsigned long long)arg1;
- (unsigned long long)myPostedFeedMode;
- (void)setSavedFeedMode:(unsigned long long)arg1;
- (unsigned long long)savedFeedMode;
- (void)setHistoryFeedMode:(unsigned long long)arg1;
- (unsigned long long)historyFeedMode;
- (void)setFrontPageFeedMode:(unsigned long long)arg1;
- (unsigned long long)frontPageFeedMode;
- (void)setPopularFeedMode:(unsigned long long)arg1;
- (unsigned long long)popularFeedMode;
@property(nonatomic) unsigned long long defaultFeedMode;
@property(copy, nonatomic) NSString *currentThemeName;
- (void)updatePreferences:(id)arg1;
- (void)configureWithPreferences:(id)arg1;
- (void)configureWithUserData:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface CarouselView : BaseView <CarouselItemViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
{
    unsigned long long _itemsPerScreen;
    NSObject<CarouselViewDelegate> *_delegate;
    double _itemWidth;
    BaseCollectionView *_contentScrollView;
    AttributedLabelRegular *_headerLabel;
    UIImage *_headerImage;
    NSString *_headerText;
    NSArray *_items;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(copy, nonatomic) NSString *headerText; // @synthesize headerText=_headerText;
@property(retain, nonatomic) UIImage *headerImage; // @synthesize headerImage=_headerImage;
@property(retain, nonatomic) AttributedLabelRegular *headerLabel; // @synthesize headerLabel=_headerLabel;
@property(retain, nonatomic) BaseCollectionView *contentScrollView; // @synthesize contentScrollView=_contentScrollView;
@property(nonatomic) double itemWidth; // @synthesize itemWidth=_itemWidth;
@property(nonatomic) __weak NSObject<CarouselViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long itemsPerScreen; // @synthesize itemsPerScreen=_itemsPerScreen;
- (void).cxx_destruct;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)carouselItemViewDidTap:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithItems:(id)arg1;
- (void)configureHeaderWithText:(id)arg1;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVASTIndustryIcon : MPVASTModel
{
    NSString *_program;
    double _height;
    double _width;
    NSString *_xPosition;
    NSString *_yPosition;
    NSString *_apiFramework;
    double _duration;
    MPVASTDurationOffset *_offset;
    NSURL *_clickThroughURL;
    NSArray *_clickTrackingURLs;
    NSArray *_viewTrackingURLs;
    MPVASTResource *_HTMLResource;
    MPVASTResource *_iframeResource;
    MPVASTResource *_staticResource;
}

+ (id)modelMap;
@property(readonly, nonatomic) MPVASTResource *staticResource; // @synthesize staticResource=_staticResource;
@property(readonly, nonatomic) MPVASTResource *iframeResource; // @synthesize iframeResource=_iframeResource;
@property(readonly, nonatomic) MPVASTResource *HTMLResource; // @synthesize HTMLResource=_HTMLResource;
@property(readonly, nonatomic) NSArray *viewTrackingURLs; // @synthesize viewTrackingURLs=_viewTrackingURLs;
@property(readonly, nonatomic) NSArray *clickTrackingURLs; // @synthesize clickTrackingURLs=_clickTrackingURLs;
@property(readonly, copy, nonatomic) NSURL *clickThroughURL; // @synthesize clickThroughURL=_clickThroughURL;
@property(readonly, nonatomic) MPVASTDurationOffset *offset; // @synthesize offset=_offset;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, copy, nonatomic) NSString *apiFramework; // @synthesize apiFramework=_apiFramework;
@property(readonly, copy, nonatomic) NSString *yPosition; // @synthesize yPosition=_yPosition;
@property(readonly, copy, nonatomic) NSString *xPosition; // @synthesize xPosition=_xPosition;
@property(readonly, nonatomic) double width; // @synthesize width=_width;
@property(readonly, nonatomic) double height; // @synthesize height=_height;
@property(readonly, copy, nonatomic) NSString *program; // @synthesize program=_program;
- (void).cxx_destruct;

@end

@interface FavouriteFeedViewController : FeedViewController
{
}

- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)configurePinnedFeedController;
- (void)viewDidLoad;

@end

@interface FeedPostSelfTextView : BaseView <AttributedLabelDelegate, BaseModelObserver, ThemeUpdateCallbackProtocol>
{
    id <FeedPostSelfTextViewDelegate> _delegate;
    AttributedLabel *_textViewLabel;
    Post *_post;
}

+ (double)bottomTextPadding;
+ (double)topTextPadding;
+ (double)leftOrRightTextPadding;
+ (id)preferredFont;
+ (double)preferredTextWidth;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
+ (struct CGSize)textViewSizeWithData:(id)arg1;
+ (id)textOfDisplayedContentForPost:(id)arg1;
+ (id)textForLayoutSizeCalculationForPost:(id)arg1;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(retain, nonatomic) AttributedLabel *textViewLabel; // @synthesize textViewLabel=_textViewLabel;
@property(nonatomic) __weak id <FeedPostSelfTextViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)themeDidChange:(id)arg1;
- (void)attributedLabel:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentManager : NSObject
{
}

+ (void)displayErrorMessageForError:(id)arg1;
+ (void)sendMessageWithTitleText:(id)arg1 andBodyText:(id)arg2 toUser:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (void)deleteCommentWithCommentPK:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)editComment:(id)arg1 withText:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)replyToPostPK:(id)arg1 withText:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)replyToCommentPK:(id)arg1 withText:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)replyToMessagePK:(id)arg1 withText:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)upvoteComment:(id)arg1 inProgress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)downvoteComment:(id)arg1 inProgress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;

@end

@interface MPClientAdPositioning : MPAdPositioning
{
}

+ (id)positioning;
- (void)enableRepeatingPositionsWithInterval:(unsigned long long)arg1;
- (void)addFixedIndexPath:(id)arg1;

@end

@interface MOPUBError : NSError
{
}

+ (id)errorWithCode:(int)arg1;

@end

@interface VideoCache : NSObject
{
    _Bool _running;
    _Bool _isHouseClean;
    NSString *_cacheFolderPath;
    NSMutableDictionary *_currentDownloads;
}

+ (void)stopHouseKeeping;
+ (void)startHouseKeeping;
+ (_Bool)shouldDoHouseKeeping;
+ (id)filesSortedByLastAccessDate;
+ (id)getFileAccessLastDateOfFile:(id)arg1;
+ (unsigned long long)fileSizeAtPath:(id)arg1;
+ (unsigned long long)folderSize:(id)arg1;
+ (id)fileEnumeratorInCacheFolder:(id)arg1;
+ (void)cancelVideoDownloadForURLString:(id)arg1;
+ (void)loadVideoForURL:(id)arg1 progress:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)cachePathForKey:(id)arg1;
+ (void)load;
@property(nonatomic) _Bool isHouseClean; // @synthesize isHouseClean=_isHouseClean;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(retain) NSMutableDictionary *currentDownloads; // @synthesize currentDownloads=_currentDownloads;
@property(copy, nonatomic) NSString *cacheFolderPath; // @synthesize cacheFolderPath=_cacheFolderPath;
- (void).cxx_destruct;
- (id)init;

@end

@interface FeedPostSponsoredView : BaseView
{
    UIView *_adView;
    unsigned long long _mode;
    Post *_post;
    FeedPostTitleView *_titleView;
    FeedPostTitleViewCompact *_compactTitleView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 forMode:(unsigned long long)arg2;
@property(retain, nonatomic) FeedPostTitleViewCompact *compactTitleView; // @synthesize compactTitleView=_compactTitleView;
@property(retain, nonatomic) FeedPostTitleView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) UIView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (void)didBecomeFullyVisible;
- (id)sponsoredTitleString;
@property(readonly, nonatomic) FeedPostSponsoredImageView *sponsoredImageView;
- (id)textAttachmentWithImageNamed:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CommentNetworkSource : ListingNetworkSource
{
    Post *_feedPost;
    NSArray *_commentsTree;
    NSMutableDictionary *_commentFastLookUpCache;
}

@property(retain, nonatomic) NSMutableDictionary *commentFastLookUpCache; // @synthesize commentFastLookUpCache=_commentFastLookUpCache;
@property(copy, nonatomic) NSArray *commentsTree; // @synthesize commentsTree=_commentsTree;
@property(retain, nonatomic) Post *feedPost; // @synthesize feedPost=_feedPost;
- (void).cxx_destruct;
- (id)findCommentWithCommentPK:(id)arg1 inComments:(id)arg2;
- (id)findCommentWithCommentPK:(id)arg1;
- (void)deleteCommentWithPK:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)insertOrReplaceComment:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)insertOrReplaceComment:(id)arg1 atTop:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)replaceComment:(id)arg1 withNewComment:(id)arg2;
- (void)fetchChildrenCommentsForComment:(id)arg1 successHandler:(CDUnknownBlockType)arg2 failureHandler:(CDUnknownBlockType)arg3;
- (void)fetchParentCommentsForComment:(id)arg1 successHandler:(CDUnknownBlockType)arg2 failureHandler:(CDUnknownBlockType)arg3;
- (id)childrenCommentPKListFromComment:(id)arg1;
- (id)parseListingData:(id)arg1 atLevel:(unsigned long long)arg2 withLinkID:(id)arg3 forParent:(id)arg4;
- (void)updateCommentFastLookupCacheForComments:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface MPEnhancedDeeplinkRequest : NSObject
{
    NSURL *_originalURL;
    NSURL *_primaryURL;
    NSArray *_primaryTrackingURLs;
    NSURL *_fallbackURL;
    NSArray *_fallbackTrackingURLs;
}

@property(retain) NSArray *fallbackTrackingURLs; // @synthesize fallbackTrackingURLs=_fallbackTrackingURLs;
@property(copy) NSURL *fallbackURL; // @synthesize fallbackURL=_fallbackURL;
@property(retain) NSArray *primaryTrackingURLs; // @synthesize primaryTrackingURLs=_primaryTrackingURLs;
@property(copy) NSURL *primaryURL; // @synthesize primaryURL=_primaryURL;
@property(copy) NSURL *originalURL; // @synthesize originalURL=_originalURL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1;

@end

@interface MOPUBNativeVideoAdConfigValues : NSObject
{
    long long _playVisiblePercent;
    long long _pauseVisiblePercent;
    long long _impressionMinVisiblePercent;
    double _impressionVisible;
    double _maxBufferingTime;
}

@property(readonly, nonatomic) double maxBufferingTime; // @synthesize maxBufferingTime=_maxBufferingTime;
@property(readonly, nonatomic) double impressionVisible; // @synthesize impressionVisible=_impressionVisible;
@property(readonly, nonatomic) long long impressionMinVisiblePercent; // @synthesize impressionMinVisiblePercent=_impressionMinVisiblePercent;
@property(readonly, nonatomic) long long pauseVisiblePercent; // @synthesize pauseVisiblePercent=_pauseVisiblePercent;
@property(readonly, nonatomic) long long playVisiblePercent; // @synthesize playVisiblePercent=_playVisiblePercent;
- (_Bool)isValidTimeInterval:(double)arg1;
- (_Bool)isValidPercentage:(long long)arg1;
- (_Bool)isValid;
- (id)initWithPlayVisiblePercent:(long long)arg1 pauseVisiblePercent:(long long)arg2 impressionMinVisiblePercent:(long long)arg3 impressionVisible:(double)arg4 maxBufferingTime:(double)arg5;

@end

@interface CommentComposeView : BaseScrollView <BaseTextViewDelegate, UITextViewDelegate, LinkViewControllerDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate, CommentComposeKeyboardAccessoryViewDelegate>
{
    BaseTextView *_replyTextView;
    CommentComposeImageManager *_imageManager;
    UIPopoverController *_popoverController;
}

@property(retain, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(retain, nonatomic) CommentComposeImageManager *imageManager; // @synthesize imageManager=_imageManager;
@property(retain, nonatomic) BaseTextView *replyTextView; // @synthesize replyTextView=_replyTextView;
- (void).cxx_destruct;
- (void)linkViewControllerDidTapInsert:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (void)didTapCloseLinkPopUp;
- (void)commentComposeKeyboardAccessoryViewDidSelectPhotos:(id)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectCamera:(id)arg1;
- (void)commentComposeKeyboardAccessoryViewDidSelectLink:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentsFooterBarView : BaseView
{
    id <CommentsFooterBarViewDelegate> _delegate;
    BaseButton *_button;
}

@property(retain, nonatomic) BaseButton *button; // @synthesize button=_button;
@property(nonatomic) __weak id <CommentsFooterBarViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapButton:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageTableViewCell : UITableViewCell
{
    MessageCellContentView *_messageView;
}

@property(retain, nonatomic) MessageCellContentView *messageView; // @synthesize messageView=_messageView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CommentListViewController : ListingViewController <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    BaseCollectionView *_collectionView;
}

@property(retain, nonatomic) BaseCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (id)majorContentScrollView;
- (void)locallyMarkAllAsRead;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)viewDidLoad;
- (void)configureWithCommentListingNetworkSource:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPRewardedVideoReward : NSObject
{
    NSString *_currencyType;
    NSNumber *_amount;
}

@property(readonly, nonatomic) NSNumber *amount; // @synthesize amount=_amount;
@property(readonly, nonatomic) NSString *currencyType; // @synthesize currencyType=_currencyType;
- (void).cxx_destruct;
- (id)initWithCurrencyAmount:(id)arg1;
- (id)initWithCurrencyType:(id)arg1 amount:(id)arg2;

@end

@interface MPStreamAdPlacementData : NSObject
{
    NSMutableDictionary *_desiredOriginalPositions;
    NSMutableDictionary *_desiredInsertionPositions;
    NSMutableDictionary *_originalAdIndexPaths;
    NSMutableDictionary *_adjustedAdIndexPaths;
    NSMutableDictionary *_adDataObjects;
}

@property(retain, nonatomic) NSMutableDictionary *adDataObjects; // @synthesize adDataObjects=_adDataObjects;
@property(retain, nonatomic) NSMutableDictionary *adjustedAdIndexPaths; // @synthesize adjustedAdIndexPaths=_adjustedAdIndexPaths;
@property(retain, nonatomic) NSMutableDictionary *originalAdIndexPaths; // @synthesize originalAdIndexPaths=_originalAdIndexPaths;
@property(retain, nonatomic) NSMutableDictionary *desiredInsertionPositions; // @synthesize desiredInsertionPositions=_desiredInsertionPositions;
@property(retain, nonatomic) NSMutableDictionary *desiredOriginalPositions; // @synthesize desiredOriginalPositions=_desiredOriginalPositions;
- (void).cxx_destruct;
- (void)updateSectionForPositioningArray:(id)arg1 toSection:(unsigned long long)arg2;
- (void)updateAllSectionsForPositioningArraysAtSection:(unsigned long long)arg1;
- (void)moveAllPositioningArraysInDictionariesAtSection:(unsigned long long)arg1 toSection:(unsigned long long)arg2;
- (void)clearPositioningArraysInDictionariesAtSection:(unsigned long long)arg1;
- (void)copyPositioningArrayInDictionary:(id)arg1 atSection:(unsigned long long)arg2 toSection:(unsigned long long)arg3;
- (unsigned long long)largestSectionIndexContainingAds;
- (void)decrementPlacedIndexPathsAtIndex:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (void)decrementDesiredIndexPathsAtIndex:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (void)incrementPlacedIndexPathsAtIndex:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (void)incrementDesiredIndexPathsAtIndex:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (unsigned long long)indexOfIndexPath:(id)arg1 inSortedArray:(id)arg2 options:(unsigned long long)arg3;
- (void)moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)deleteItemsAtIndexPaths:(id)arg1;
- (void)insertItemsAtIndexPaths:(id)arg1;
- (void)moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)deleteSections:(id)arg1;
- (void)insertSections:(id)arg1;
- (id)adDataAtAdjustedIndexPath:(id)arg1;
- (id)adjustedIndexPathsWithAdsInSection:(unsigned long long)arg1;
- (_Bool)isAdAtAdjustedIndexPath:(id)arg1;
- (void)clearAdsInAdjustedRange:(struct _NSRange)arg1 inSection:(long long)arg2;
- (id)adjustedAdIndexPathsInAdjustedRange:(struct _NSRange)arg1 inSection:(long long)arg2;
- (void)insertAdData:(id)arg1 atIndexPath:(id)arg2;
- (id)previousAdInsertionIndexPathForAdjustedIndexPath:(id)arg1;
- (id)nextAdInsertionIndexPathForAdjustedIndexPath:(id)arg1;
- (id)originalIndexPathForAdjustedIndexPath:(id)arg1;
- (id)adjustedIndexPathForOriginalIndexPath:(id)arg1;
- (unsigned long long)adjustedNumberOfItems:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (void)insertDesiredPositionsForIndexPath:(id)arg1;
- (void)initializeDesiredPositionsFromPositioning:(id)arg1;
- (id)positioningArrayForSection:(unsigned long long)arg1 inDictionary:(id)arg2;
- (id)initWithPositioning:(id)arg1;

@end

@interface AutoThemeManager : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    NSTimer *_updateTimer;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void).cxx_destruct;
- (void)showLocationNeededAlert;
- (void)updateThemeIfNeeded;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (_Bool)locationIsAuthorized;
@property(readonly, nonatomic) _Bool isDaylight;
@property(readonly, nonatomic) EDSunriseSet *sunriseSetTomorrow;
@property(readonly, nonatomic) EDSunriseSet *sunriseSetToday;
@property(readonly, nonatomic) CLLocation *currentLocation;
- (_Bool)attemptToSetEnabled:(_Bool)arg1 withDayTheme:(unsigned long long)arg2;
@property(nonatomic) _Bool hasAttemptedLocationPermission;
@property(nonatomic) _Bool enabled;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentCell : UICollectionViewCell
{
    CommentView *_commentView;
}

@property(retain, nonatomic) CommentView *commentView; // @synthesize commentView=_commentView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DropdownView : BaseView
{
    BaseLabel *_label;
    BaseImageView *_imageView;
}

@property(retain, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) BaseLabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LinkViewController : BaseViewController <PopupViewControllerProtocol>
{
    id <LinkViewControllerDelegate> _delegate;
    LinkView *_linkView;
}

@property(retain, nonatomic) LinkView *linkView; // @synthesize linkView=_linkView;
@property(nonatomic) __weak id <LinkViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapInsertLink:(id)arg1;
@property(readonly, nonatomic) double preferredPopupHeight;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FriendListViewController : ListingViewController <UITableViewDelegate, UITableViewDataSource>
{
    BaseTableView *_tableView;
    NSArray *_friends;
}

@property(copy, nonatomic) NSArray *friends; // @synthesize friends=_friends;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)didTapFriendButton:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (void)configureWithURLString:(id)arg1;
- (void)viewDidLoad;
- (id)majorContentScrollView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPCollectionViewAdPlacerCell : UICollectionViewCell
{
}

@end

@interface MPSharedTweet : NSObject
{
    NSString *_screenName;
    NSString *_tweetURL;
}

@property(readonly, nonatomic) NSString *tweetURL; // @synthesize tweetURL=_tweetURL;
@property(readonly, nonatomic) NSString *screenName; // @synthesize screenName=_screenName;
- (void).cxx_destruct;
- (id)initWithShareURL:(id)arg1;

@end

@interface AdManager : NSObject
{
    NSMutableArray *_prefetchedAds;
    MPStaticNativeAdRendererSettings *_mopubSettings;
    MPNativeAdRendererConfiguration *_mopubConfiguration;
    NSMutableArray *_prefetchedCardAds;
    long long _adInterval;
    unsigned long long _adOffset;
    NSArray *_impressions;
    long long _dailyImpressionCap;
}

+ (id)sharedManager;
@property(nonatomic) long long dailyImpressionCap; // @synthesize dailyImpressionCap=_dailyImpressionCap;
@property(copy, nonatomic) NSArray *impressions; // @synthesize impressions=_impressions;
@property(nonatomic) unsigned long long adOffset; // @synthesize adOffset=_adOffset;
@property(nonatomic) long long adInterval; // @synthesize adInterval=_adInterval;
@property(copy, nonatomic) NSMutableArray *prefetchedCardAds; // @synthesize prefetchedCardAds=_prefetchedCardAds;
@property(retain, nonatomic) MPNativeAdRendererConfiguration *mopubConfiguration; // @synthesize mopubConfiguration=_mopubConfiguration;
@property(retain, nonatomic) MPStaticNativeAdRendererSettings *mopubSettings; // @synthesize mopubSettings=_mopubSettings;
@property(readonly, copy, nonatomic) NSMutableArray *prefetchedAds; // @synthesize prefetchedAds=_prefetchedAds;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long impressionCount;
- (void)registerImpression;
- (void)trimImpressionsIfNeeded;
- (id)takeFirstAd;
- (unsigned long long)fixedPositionForAdType:(long long)arg1;
- (long long)intervalForAdType:(long long)arg1;
- (void)prefetchAd;
@property(readonly, nonatomic) NSString *currentIdentifier;
- (void)fetchConfiguration;
- (id)init;

@end

@interface MPNativeAdSource : NSObject <MPNativeAdSourceQueueDelegate>
{
    id <MPNativeAdSourceDelegate> _delegate;
    NSMutableDictionary *_adQueueDictionary;
}

+ (id)source;
@property(retain, nonatomic) NSMutableDictionary *adQueueDictionary; // @synthesize adQueueDictionary=_adQueueDictionary;
@property(nonatomic) __weak id <MPNativeAdSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)adSourceQueueAdIsAvailable:(id)arg1;
- (void)deleteCacheForAdUnitIdentifier:(id)arg1;
- (id)dequeueAdForAdUnitIdentifier:(id)arg1;
- (void)loadAdsWithAdUnitIdentifier:(id)arg1 rendererConfigurations:(id)arg2 andTargeting:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MOPUBReplayView : UIView
{
    CDUnknownBlockType _actionBlock;
    UIView *_overlayView;
    UIButton *_replayVideoButton;
}

@property(retain, nonatomic) UIButton *replayVideoButton; // @synthesize replayVideoButton=_replayVideoButton;
@property(retain, nonatomic) UIView *overlayView; // @synthesize overlayView=_overlayView;
@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
- (void).cxx_destruct;
- (void)replayButtonTapped;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 displayMode:(unsigned long long)arg2;

@end

@interface MarkdownTableParser : NSObject
{
}

+ (id)generateTabbedAttributedStringFromTableMarkdown:(id)arg1 baseFont:(id)arg2 boldBaseFont:(id)arg3;

@end

@interface MarkdownTableModel : NSObject
{
    NSMutableArray *_rows;
    UIFont *_baseFont;
    UIFont *_boldBaseFont;
}

@property(retain, nonatomic) UIFont *boldBaseFont; // @synthesize boldBaseFont=_boldBaseFont;
@property(retain, nonatomic) UIFont *baseFont; // @synthesize baseFont=_baseFont;
@property(readonly, nonatomic) NSMutableArray *rows; // @synthesize rows=_rows;
- (void).cxx_destruct;
- (id)attributedStringRepresentation;
- (id)recommendedTabStopsForRow:(id)arg1;
- (double)recommendedWidthForColumn:(unsigned long long)arg1 inRow:(id)arg2;
- (void)populateWithTableMarkdown:(id)arg1;
- (id)initWithTableMarkdown:(id)arg1 baseFont:(id)arg2 boldBaseFont:(id)arg3;

@end

@interface MarkdownTableRow : NSObject
{
    MarkdownTableRowConfiguration *_rowConfiguration;
    NSMutableArray *_cells;
}

@property(readonly, nonatomic) NSMutableArray *cells; // @synthesize cells=_cells;
@property(retain, nonatomic) MarkdownTableRowConfiguration *rowConfiguration; // @synthesize rowConfiguration=_rowConfiguration;
- (void).cxx_destruct;
- (void)populateWithRowMarkdown:(id)arg1 parser:(id)arg2 forcedRowFontOrNil:(id)arg3 rowConfiguration:(id)arg4;
- (id)init;

@end

@interface MarkdownTableRowConfiguration : NSObject
{
    NSMutableArray *_cellConfiguration;
}

@property(readonly, nonatomic) NSMutableArray *cellConfiguration; // @synthesize cellConfiguration=_cellConfiguration;
- (void).cxx_destruct;
- (id)initWithRowString:(id)arg1;
- (id)initWithColumeCount:(unsigned long long)arg1;

@end

@interface MarkdownTableCell : NSObject
{
    NSAttributedString *_attributedRepresentation;
}

@property(retain, nonatomic) NSAttributedString *attributedRepresentation; // @synthesize attributedRepresentation=_attributedRepresentation;
- (void).cxx_destruct;
- (void)populateWithCellMarkdown:(id)arg1 parser:(id)arg2 forcedCellFontOrNil:(id)arg3 cellConfiguration:(id)arg4;

@end

@interface MarkdownTableCellConfiguration : NSObject
{
    long long _textAlignment;
}

@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;

@end

@interface ReportItem : NSObject
{
    NSString *_localizedName;
    NSString *_englishName;
}

@property(copy, nonatomic) NSString *englishName; // @synthesize englishName=_englishName;
@property(copy, nonatomic) NSString *localizedName; // @synthesize localizedName=_localizedName;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 localizedName:(id)arg2;

@end

@interface ReportViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource, PopupViewControllerProtocol>
{
    NSString *_thingID;
    id <ReportViewControllerDelegate> _delegate;
    NSArray *_items;
    long long _selectedIndex;
    BaseView *_footerView;
    UIButton *_reportButton;
    BaseTableView *_tableView;
}

@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIButton *reportButton; // @synthesize reportButton=_reportButton;
@property(retain, nonatomic) BaseView *footerView; // @synthesize footerView=_footerView;
@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) __weak id <ReportViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *thingID; // @synthesize thingID=_thingID;
- (void).cxx_destruct;
- (void)didTapCloseReport:(id)arg1;
- (void)didTapReport;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)configureViewAppearance;
- (void)viewDidLoad;
@property(readonly, nonatomic) double preferredPopupHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedPopAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _interactive;
    UIView *_headerView;
    id <UIViewControllerContextTransitioning> _context;
    UIView *_originalSuperview;
    struct CGRect _startingFrame;
}

@property(nonatomic) __weak UIView *originalSuperview; // @synthesize originalSuperview=_originalSuperview;
@property(nonatomic) struct CGRect startingFrame; // @synthesize startingFrame=_startingFrame;
@property(retain, nonatomic) id <UIViewControllerContextTransitioning> context; // @synthesize context=_context;
@property(nonatomic) _Bool interactive; // @synthesize interactive=_interactive;
@property(nonatomic) __weak UIView *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PagingScrollView : UIScrollView <UIGestureRecognizerDelegate>
{
    StackedNavigationViewController *_parentController;
    unsigned long long _numDelayedTouches;
    unsigned long long _numPanTouches;
}

@property unsigned long long numPanTouches; // @synthesize numPanTouches=_numPanTouches;
@property unsigned long long numDelayedTouches; // @synthesize numDelayedTouches=_numDelayedTouches;
@property __weak StackedNavigationViewController *parentController; // @synthesize parentController=_parentController;
- (void).cxx_destruct;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LiveUpdateContentView : BaseView <LiveUpdateEmbedViewDelegate, AttributedLabelRegularDelegate>
{
    id <LiveUpdateContentViewDelegate> _delegate;
    AttributedLabelRegular *_titleLabel;
    AttributedLabelRegular *_bodyLabel;
    LiveTweetEmbedView *_tweetEmbedView;
    LiveWebEmbedView *_webEmbedView;
    LiveUpdate *_update;
}

+ (id)appendBulletSeparatorToMutableAttributedString:(id)arg1;
+ (id)titleStringForUpdate:(id)arg1;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) LiveUpdate *update; // @synthesize update=_update;
@property(retain, nonatomic) LiveWebEmbedView *webEmbedView; // @synthesize webEmbedView=_webEmbedView;
@property(retain, nonatomic) LiveTweetEmbedView *tweetEmbedView; // @synthesize tweetEmbedView=_tweetEmbedView;
@property(retain, nonatomic) AttributedLabelRegular *bodyLabel; // @synthesize bodyLabel=_bodyLabel;
@property(retain, nonatomic) AttributedLabelRegular *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak id <LiveUpdateContentViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)liveUpdateEmbedView:(id)arg1 didTapVideoWithURL:(id)arg2;
- (void)liveUpdateEmbedView:(id)arg1 didTapImage:(id)arg2 withURL:(id)arg3;
- (void)liveUpdateEmbedView:(id)arg1 didTapLinkWithURLString:(id)arg2;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)didTapContentView:(id)arg1;
@property(readonly, nonatomic) LiveUpdateEmbedView *currentEmbedView;
- (void)layoutSubviews;
- (void)configureWithLiveUpdate:(id)arg1;
- (void)prepareForReuse;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MultiViewDataSource : CommunityViewDataSource <ListingNetworkSourceDelegate>
{
    _Bool _isFetchingMoreContent;
    MultiNetworkSource *_multiNetworkSource;
    NSArray *_objects;
}

@property(copy, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(retain, nonatomic) MultiNetworkSource *multiNetworkSource; // @synthesize multiNetworkSource=_multiNetworkSource;
@property(readonly, nonatomic) _Bool isFetchingMoreContent; // @synthesize isFetchingMoreContent=_isFetchingMoreContent;
- (void).cxx_destruct;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(id)arg1;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (id)indexes;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableViewDidScroll;
- (id)multiForIndexPath:(id)arg1;
- (id)headerString;
- (id)viewControllerForIndexPath:(id)arg1;
- (void)refreshSubscriptions;
- (id)initWithTableView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ActionSheetAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _presenting;
}

@property(nonatomic) _Bool presenting; // @synthesize presenting=_presenting;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LiveEventStore : BaseStore
{
}

- (void)persistLiveEvent:(id)arg1;
- (void)fetchLiveEventObjectsFromDisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getLiveEventObjectFromPK:(id)arg1;
- (id)createOrGetLiveEventObjectFromPK:(id)arg1;

@end

@interface AFHTTPSessionManager : AFURLSessionManager <NSSecureCoding, NSCopying>
{
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
}

+ (_Bool)supportsSecureCoding;
+ (id)manager;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)dataTaskWithHTTPMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 uploadProgress:(CDUnknownBlockType)arg4 downloadProgress:(CDUnknownBlockType)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PATCH:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HEAD:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @dynamic responseSerializer;
- (id)initWithBaseURL:(id)arg1 sessionConfiguration:(id)arg2;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface User : BaseModel <NSSecureCoding>
{
    _Bool _goldSubscriber;
    _Bool _isFriend;
    NSString *_username;
    NSDate *_createdAt;
    long long _commentKarma;
    long long _linkKarma;
    long long _totalKarma;
}

+ (_Bool)supportsSecureCoding;
+ (id)userFromData:(id)arg1;
@property(nonatomic) _Bool isFriend; // @synthesize isFriend=_isFriend;
@property(nonatomic) _Bool goldSubscriber; // @synthesize goldSubscriber=_goldSubscriber;
@property(nonatomic) long long totalKarma; // @synthesize totalKarma=_totalKarma;
@property(nonatomic) long long linkKarma; // @synthesize linkKarma=_linkKarma;
@property(nonatomic) long long commentKarma; // @synthesize commentKarma=_commentKarma;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (void)configureWithUserData:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface CommentActionSheetViewController : ActionSheetViewController <ActionSheetViewControllerDelegate>
{
    Comment *_comment;
    id <CommentActionSheetDelegate> _commentActionSheetDelegate;
    unsigned long long _commentSortType;
}

@property(nonatomic) unsigned long long commentSortType; // @synthesize commentSortType=_commentSortType;
@property(nonatomic) __weak id <CommentActionSheetDelegate> commentActionSheetDelegate; // @synthesize commentActionSheetDelegate=_commentActionSheetDelegate;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)removeDistinguishComment:(id)arg1;
- (void)performDistinguishComment:(id)arg1 forDistinguishType:(id)arg2;
- (void)performReportComment:(id)arg1;
- (void)gildComment:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (id)initWithComment:(id)arg1 parentPost:(id)arg2 customActions:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LiveInfoViewController : WebViewController <PagedTabControllerProtocol>
{
    LiveEvent *_liveEvent;
}

@property(retain, nonatomic) LiveEvent *liveEvent; // @synthesize liveEvent=_liveEvent;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (_Bool)heartbeatLoggingEnabled;
- (id)majorContentScrollView;
- (id)pageItemText;
- (id)pageItemSelectedImage;
- (id)pageItemImage;
- (void)liveEventDidUpdate:(id)arg1;
- (void)configureWithLiveEvent:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)configureNavigationBarAppearance;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AppDelegate : UIResponder <UIApplicationDelegate>
{
    _Bool _didShowWelcomeBack;
    UIWindow *_window;
    unsigned long long _currentBGTaskID;
}

@property(nonatomic) unsigned long long currentBGTaskID; // @synthesize currentBGTaskID=_currentBGTaskID;
@property(nonatomic) _Bool didShowWelcomeBack; // @synthesize didShowWelcomeBack=_didShowWelcomeBack;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)migrateAppDataIfNeeded;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)applicationHasUpgraded;
- (void)applicationWillResignActive:(id)arg1;
- (void)pushViewControllersForExternalURL:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)logLaunchFromPushNotifcationIfNeededFromLaunchOptions:(id)arg1;
- (void)prefetchNetworkContent;
- (void)setupAppWindows;
- (void)warmUpMiscSingletons;
- (void)setupAFNetworking;
- (void)setupAnalyticsWithLaunchOptions:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PostManager : NSObject
{
}

+ (void)downvotePost:(id)arg1 inProgress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)upvotePost:(id)arg1 inProgress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;

@end

@interface LegacyHomeViewController : BaseViewController <ActionSheetViewControllerDelegate, UIViewControllerTransitioningDelegate, ThemeUpdateCallbackProtocol, OnboardingViewControllerDelegate>
{
    FeedHeaderControl *_feedHeaderControl;
    MainFeedViewController *_feedViewController;
    OnboardingViewController *_onboardingController;
}

@property(retain, nonatomic) OnboardingViewController *onboardingController; // @synthesize onboardingController=_onboardingController;
@property(retain, nonatomic) MainFeedViewController *feedViewController; // @synthesize feedViewController=_feedViewController;
@property(retain, nonatomic) FeedHeaderControl *feedHeaderControl; // @synthesize feedHeaderControl=_feedHeaderControl;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (_Bool)shouldScrollContentViewToTop;
- (void)themeDidChange:(id)arg1;
- (void)setupMainFeedViewAnimated:(_Bool)arg1;
- (void)onboardingViewControllerDidFinish:(id)arg1;
- (_Bool)prefersNavigationBarHidden;
- (_Bool)shouldShowOnboarding;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AccountViewController : BaseTableViewController <UITableViewDelegate, UITableViewDataSource, AuthenticationViewControllerDelegate, UIViewControllerTransitioningDelegate, ThemeUpdateCallbackProtocol>
{
    NSArray *_items;
    UserHeaderControl *_userHeaderControl;
    UserTableHeaderView *_userTableHeaderView;
    LoggedOutView *_loggedOutView;
}

@property(retain, nonatomic) LoggedOutView *loggedOutView; // @synthesize loggedOutView=_loggedOutView;
@property(retain, nonatomic) UserTableHeaderView *userTableHeaderView; // @synthesize userTableHeaderView=_userTableHeaderView;
@property(retain, nonatomic) UserHeaderControl *userHeaderControl; // @synthesize userHeaderControl=_userHeaderControl;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)themeDidChange:(id)arg1;
- (void)didLongPressTabBar:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)authenticationViewController:(id)arg1 didLoginUser:(id)arg2 fromSignup:(_Bool)arg3;
- (void)pushSubmittedTab;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didTapAccountCloseButton;
- (void)didTapCollapse:(id)arg1;
- (void)didTapExpand:(id)arg1;
- (void)didTapSettingsButton;
- (void)didTapSignupButton;
- (void)didTapLoginButton;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VerticalLineView : BaseView
{
    NSArray *_verticalLines;
}

+ (unsigned long long)maxLevelForDisplay;
@property(retain, nonatomic) NSArray *verticalLines; // @synthesize verticalLines=_verticalLines;
- (void).cxx_destruct;
- (void)setVerticalLineBottomInset:(long long)arg1;
- (void)resetColorForLastVerticalLine;
- (void)setColorForLastVerticalLine:(id)arg1;
- (void)setShouldHighlightBackground:(_Bool)arg1;
- (void)setLevel:(unsigned long long)arg1 ignoreMaxLevelForDisplay:(_Bool)arg2;
- (void)setLevel:(unsigned long long)arg1;

@end

@interface MPGeolocationProvider : NSObject <CLLocationManagerDelegate>
{
    _Bool _locationUpdatesEnabled;
    _Bool _authorizedForLocationServices;
    CLLocation *_lastKnownLocation;
    CLLocationManager *_locationManager;
    NSDate *_timeOfLastLocationUpdate;
    MPTimer *_nextLocationUpdateTimer;
    MPTimer *_locationUpdateDurationTimer;
}

+ (id)sharedProvider;
@property(retain, nonatomic) MPTimer *locationUpdateDurationTimer; // @synthesize locationUpdateDurationTimer=_locationUpdateDurationTimer;
@property(retain, nonatomic) MPTimer *nextLocationUpdateTimer; // @synthesize nextLocationUpdateTimer=_nextLocationUpdateTimer;
@property(retain, nonatomic) NSDate *timeOfLastLocationUpdate; // @synthesize timeOfLastLocationUpdate=_timeOfLastLocationUpdate;
@property(nonatomic) _Bool authorizedForLocationServices; // @synthesize authorizedForLocationServices=_authorizedForLocationServices;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) CLLocation *lastKnownLocation; // @synthesize lastKnownLocation=_lastKnownLocation;
@property(nonatomic) _Bool locationUpdatesEnabled; // @synthesize locationUpdatesEnabled=_locationUpdatesEnabled;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (_Bool)isLocation:(id)arg1 olderThanLocation:(id)arg2;
- (_Bool)locationHasValidCoordinates:(id)arg1;
- (_Bool)isLocation:(id)arg1 betterThanLocation:(id)arg2;
- (void)resumeLocationUpdatesAfterBackgrounding;
- (void)stopAllCurrentOrScheduledLocationUpdates;
- (void)scheduleNextLocationUpdateAfterDelay:(double)arg1;
- (void)currentLocationUpdateDidFinish;
- (void)startRecurringLocationUpdates;
- (_Bool)isAuthorizedStatus:(int)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MarkDownParser : NSObject
{
}

+ (id)attributedStringFromMarkdownString:(id)arg1;

@end

@interface BaseImageView : UIImageView
{
}

@end

@interface UserAboutViewController : BaseTableViewController <ActionSheetViewControllerDelegate, PagedTabControllerProtocol>
{
    NSString *_username;
    UserTableHeaderView *_userTableHeaderView;
    User *_user;
    UIButton *_messageButton;
    AnimatedSpinner *_firstLoadSpinner;
}

@property(retain, nonatomic) AnimatedSpinner *firstLoadSpinner; // @synthesize firstLoadSpinner=_firstLoadSpinner;
@property(retain, nonatomic) UIButton *messageButton; // @synthesize messageButton=_messageButton;
@property(retain, nonatomic) User *user; // @synthesize user=_user;
@property(retain, nonatomic) UserTableHeaderView *userTableHeaderView; // @synthesize userTableHeaderView=_userTableHeaderView;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (void)reloadContentFromNetworkSource;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)sendUnfriendRequest;
- (void)showUnfriendActionSheetFromCell:(id)arg1;
- (void)sendFriendRequest;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)majorContentScrollView;
- (id)pageItemText;
- (id)pageItemSelectedImage;
- (id)pageItemImage;
- (id)initWithUsername:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFCachedImage : NSObject
{
    UIImage *_image;
    NSString *_identifier;
    unsigned long long _totalBytes;
    NSDate *_lastAccessDate;
    unsigned long long _currentMemoryUsage;
}

@property(nonatomic) unsigned long long currentMemoryUsage; // @synthesize currentMemoryUsage=_currentMemoryUsage;
@property(retain, nonatomic) NSDate *lastAccessDate; // @synthesize lastAccessDate=_lastAccessDate;
@property(nonatomic) unsigned long long totalBytes; // @synthesize totalBytes=_totalBytes;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)description;
- (id)accessImage;
- (id)initWithImage:(id)arg1 identifier:(id)arg2;

@end

@interface AFAutoPurgingImageCache : NSObject <AFImageRequestCache>
{
    unsigned long long _memoryCapacity;
    unsigned long long _preferredMemoryUsageAfterPurge;
    NSMutableDictionary *_cachedImages;
    unsigned long long _currentMemoryUsage;
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue; // @synthesize synchronizationQueue=_synchronizationQueue;
@property(nonatomic) unsigned long long currentMemoryUsage; // @synthesize currentMemoryUsage=_currentMemoryUsage;
@property(retain, nonatomic) NSMutableDictionary *cachedImages; // @synthesize cachedImages=_cachedImages;
@property(nonatomic) unsigned long long preferredMemoryUsageAfterPurge; // @synthesize preferredMemoryUsageAfterPurge=_preferredMemoryUsageAfterPurge;
@property(nonatomic) unsigned long long memoryCapacity; // @synthesize memoryCapacity=_memoryCapacity;
- (void).cxx_destruct;
- (id)imageCacheKeyFromURLRequest:(id)arg1 withAdditionalIdentifier:(id)arg2;
- (id)imageforRequest:(id)arg1 withAdditionalIdentifier:(id)arg2;
- (_Bool)removeImageforRequest:(id)arg1 withAdditionalIdentifier:(id)arg2;
- (void)addImage:(id)arg1 forRequest:(id)arg2 withAdditionalIdentifier:(id)arg3;
- (id)imageWithIdentifier:(id)arg1;
- (_Bool)removeAllImages;
- (_Bool)removeImageWithIdentifier:(id)arg1;
- (void)addImage:(id)arg1 withIdentifier:(id)arg2;
@property(readonly, nonatomic) unsigned long long memoryUsage;
- (void)dealloc;
- (id)initWithMemoryCapacity:(unsigned long long)arg1 preferredMemoryCapacity:(unsigned long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRProperty : NSObject
{
}

- (id)jsonString;
- (id)description;

@end

@interface MRHostSDKVersionProperty : MRProperty
{
    NSString *_version;
}

+ (id)defaultProperty;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)description;

@end

@interface MRPlacementTypeProperty : MRProperty
{
    unsigned long long _placementType;
}

+ (id)propertyWithType:(unsigned long long)arg1;
@property(nonatomic) unsigned long long placementType; // @synthesize placementType=_placementType;
- (id)description;

@end

@interface MRStateProperty : MRProperty
{
    unsigned long long _state;
}

+ (id)propertyWithState:(unsigned long long)arg1;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
- (id)description;

@end

@interface MRScreenSizeProperty : MRProperty
{
    struct CGSize _screenSize;
}

+ (id)propertyWithSize:(struct CGSize)arg1;
@property(nonatomic) struct CGSize screenSize; // @synthesize screenSize=_screenSize;
- (id)description;

@end

@interface MRSupportsProperty : MRProperty
{
    _Bool _supportsSms;
    _Bool _supportsTel;
    _Bool _supportsCalendar;
    _Bool _supportsStorePicture;
    _Bool _supportsInlineVideo;
}

+ (id)propertyWithSupportedFeaturesDictionary:(id)arg1;
+ (id)defaultProperty;
+ (id)supportedFeatures;
@property(nonatomic) _Bool supportsInlineVideo; // @synthesize supportsInlineVideo=_supportsInlineVideo;
@property(nonatomic) _Bool supportsStorePicture; // @synthesize supportsStorePicture=_supportsStorePicture;
@property(nonatomic) _Bool supportsCalendar; // @synthesize supportsCalendar=_supportsCalendar;
@property(nonatomic) _Bool supportsTel; // @synthesize supportsTel=_supportsTel;
@property(nonatomic) _Bool supportsSms; // @synthesize supportsSms=_supportsSms;
- (id)javascriptBooleanStringFromBoolValue:(_Bool)arg1;
- (id)description;

@end

@interface MRViewableProperty : MRProperty
{
    _Bool _isViewable;
}

+ (id)propertyWithViewable:(_Bool)arg1;
@property(nonatomic) _Bool isViewable; // @synthesize isViewable=_isViewable;
- (id)description;

@end

@interface MPStaticNativeAdRendererSettings : NSObject <MPNativeAdRendererSettings>
{
    Class _renderingViewClass;
    CDUnknownBlockType _viewSizeHandler;
}

@property(copy, nonatomic) CDUnknownBlockType viewSizeHandler; // @synthesize viewSizeHandler=_viewSizeHandler;
@property(nonatomic) Class renderingViewClass; // @synthesize renderingViewClass=_renderingViewClass;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPAdBrowserController : UIViewController <MPWebViewDelegate, UIActionSheetDelegate>
{
    _Bool _hasAppeared;
    int _webViewLoadCount;
    MPWebView *_webView;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIBarButtonItem *_refreshButton;
    UIBarButtonItem *_safariButton;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_spinnerItem;
    UIActivityIndicatorView *_spinner;
    UIActionSheet *_actionSheet;
    id <MPAdBrowserControllerDelegate> _delegate;
    NSURL *_URL;
    NSString *_HTMLString;
    MPLogEvent *_dwellEvent;
}

@property(nonatomic) _Bool hasAppeared; // @synthesize hasAppeared=_hasAppeared;
@property(retain, nonatomic) MPLogEvent *dwellEvent; // @synthesize dwellEvent=_dwellEvent;
@property(retain, nonatomic) NSString *HTMLString; // @synthesize HTMLString=_HTMLString;
@property(nonatomic) int webViewLoadCount; // @synthesize webViewLoadCount=_webViewLoadCount;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) __weak id <MPAdBrowserControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIBarButtonItem *spinnerItem; // @synthesize spinnerItem=_spinnerItem;
@property(retain, nonatomic) UIBarButtonItem *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIBarButtonItem *safariButton; // @synthesize safariButton=_safariButton;
@property(retain, nonatomic) UIBarButtonItem *refreshButton; // @synthesize refreshButton=_refreshButton;
@property(retain, nonatomic) UIBarButtonItem *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) UIBarButtonItem *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) MPWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (id)forwardArrowImage;
- (id)backArrowImage;
- (struct CGContext *)createContext;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)dismissActionSheet;
- (void)safari;
- (void)forward;
- (void)back;
- (void)done;
- (void)refresh;
- (_Bool)prefersStatusBarHidden;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithURL:(id)arg1 delegate:(id)arg2;
- (id)initWithURL:(id)arg1 HTMLString:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Post : FeedObjectModel
{
    _Bool _hiddenScore;
    _Bool _showMedia;
    _Bool _nsfw;
    _Bool _archived;
    _Bool _edited;
    _Bool _hidden;
    _Bool _locked;
    _Bool _saved;
    _Bool _selfPost;
    _Bool _stickied;
    _Bool _visited;
    _Bool _contestMode;
    _Bool _spoiler;
    _Bool _sponsored;
    _Bool _deleted;
    _Bool _shouldBlurContent;
    unsigned long long _postType;
    NSString *_postID;
    NSURL *_linkURL;
    NSURL *_thumbnailURL;
    NSString *_websocketUrlString;
    NSString *_title;
    NSString *_domain;
    NSString *_selfText;
    NSAttributedString *_selfTextAttributed;
    NSString *_selfTextHTML;
    NSString *_postHint;
    NSArray *_mediaModels;
    NSString *_permalink;
    Subreddit *_subreddit;
    NSString *_author;
    NSDate *_createdAt;
    long long _score;
    long long _voteStatus;
    unsigned long long _commentCount;
    unsigned long long _gilded;
    NSString *_distinguished;
    MPNativeAd *_ad;
    long long _adType;
    NSString *_linkFlairCSSClass;
    NSString *_linkFlairText;
    NSString *_authorFlairCSSClass;
    NSString *_authorFlairText;
    NSArray *_comments;
    unsigned long long _commentSortType;
    NSAttributedString *_feedPostTextString;
    NSAttributedString *_feedPostTextStringNoPreview;
    NSAttributedString *_feedPostTextStringCompact;
    NSAttributedString *_subredditFeedPostTextString;
    NSAttributedString *_subredditFeedPostTextStringNoPreview;
    NSAttributedString *_subredditFeedPostTextStringCompact;
    NSAttributedString *_commentFeedPostTextString;
    NSObject *_debugData;
}

+ (unsigned long long)postTypeForPost:(id)arg1;
+ (_Bool)shouldOverridePostType:(unsigned long long *)arg1 forPost:(id)arg2;
+ (id)postFromData:(id)arg1;
@property(retain, nonatomic) NSObject *debugData; // @synthesize debugData=_debugData;
@property(copy, nonatomic) NSAttributedString *commentFeedPostTextString; // @synthesize commentFeedPostTextString=_commentFeedPostTextString;
@property(copy, nonatomic) NSAttributedString *subredditFeedPostTextStringCompact; // @synthesize subredditFeedPostTextStringCompact=_subredditFeedPostTextStringCompact;
@property(copy, nonatomic) NSAttributedString *subredditFeedPostTextStringNoPreview; // @synthesize subredditFeedPostTextStringNoPreview=_subredditFeedPostTextStringNoPreview;
@property(copy, nonatomic) NSAttributedString *subredditFeedPostTextString; // @synthesize subredditFeedPostTextString=_subredditFeedPostTextString;
@property(copy, nonatomic) NSAttributedString *feedPostTextStringCompact; // @synthesize feedPostTextStringCompact=_feedPostTextStringCompact;
@property(copy, nonatomic) NSAttributedString *feedPostTextStringNoPreview; // @synthesize feedPostTextStringNoPreview=_feedPostTextStringNoPreview;
@property(copy, nonatomic) NSAttributedString *feedPostTextString; // @synthesize feedPostTextString=_feedPostTextString;
@property(nonatomic) unsigned long long commentSortType; // @synthesize commentSortType=_commentSortType;
@property(retain, nonatomic) NSArray *comments; // @synthesize comments=_comments;
@property(nonatomic) _Bool shouldBlurContent; // @synthesize shouldBlurContent=_shouldBlurContent;
@property(nonatomic) _Bool deleted; // @synthesize deleted=_deleted;
@property(copy, nonatomic) NSString *authorFlairText; // @synthesize authorFlairText=_authorFlairText;
@property(copy, nonatomic) NSString *authorFlairCSSClass; // @synthesize authorFlairCSSClass=_authorFlairCSSClass;
@property(copy, nonatomic) NSString *linkFlairText; // @synthesize linkFlairText=_linkFlairText;
@property(copy, nonatomic) NSString *linkFlairCSSClass; // @synthesize linkFlairCSSClass=_linkFlairCSSClass;
@property(nonatomic) long long adType; // @synthesize adType=_adType;
@property(retain, nonatomic) MPNativeAd *ad; // @synthesize ad=_ad;
@property(nonatomic) _Bool sponsored; // @synthesize sponsored=_sponsored;
@property(copy, nonatomic) NSString *distinguished; // @synthesize distinguished=_distinguished;
@property(nonatomic) _Bool spoiler; // @synthesize spoiler=_spoiler;
@property(nonatomic) _Bool contestMode; // @synthesize contestMode=_contestMode;
@property(nonatomic) _Bool visited; // @synthesize visited=_visited;
@property(nonatomic) _Bool stickied; // @synthesize stickied=_stickied;
@property(nonatomic, getter=isSelfPost) _Bool selfPost; // @synthesize selfPost=_selfPost;
@property(nonatomic) _Bool saved; // @synthesize saved=_saved;
@property(nonatomic) _Bool locked; // @synthesize locked=_locked;
@property(nonatomic) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) unsigned long long gilded; // @synthesize gilded=_gilded;
@property(nonatomic) _Bool edited; // @synthesize edited=_edited;
@property(nonatomic) _Bool archived; // @synthesize archived=_archived;
@property(nonatomic) _Bool nsfw; // @synthesize nsfw=_nsfw;
@property(nonatomic) _Bool showMedia; // @synthesize showMedia=_showMedia;
@property(nonatomic) unsigned long long commentCount; // @synthesize commentCount=_commentCount;
@property(nonatomic) _Bool hiddenScore; // @synthesize hiddenScore=_hiddenScore;
@property(nonatomic) long long voteStatus; // @synthesize voteStatus=_voteStatus;
@property(nonatomic) long long score; // @synthesize score=_score;
@property(copy, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(retain, nonatomic) Subreddit *subreddit; // @synthesize subreddit=_subreddit;
@property(copy, nonatomic) NSString *permalink; // @synthesize permalink=_permalink;
@property(copy, nonatomic) NSArray *mediaModels; // @synthesize mediaModels=_mediaModels;
@property(copy, nonatomic) NSString *postHint; // @synthesize postHint=_postHint;
@property(copy, nonatomic) NSString *selfTextHTML; // @synthesize selfTextHTML=_selfTextHTML;
@property(copy, nonatomic) NSAttributedString *selfTextAttributed; // @synthesize selfTextAttributed=_selfTextAttributed;
@property(copy, nonatomic) NSString *selfText; // @synthesize selfText=_selfText;
@property(copy, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *websocketUrlString; // @synthesize websocketUrlString=_websocketUrlString;
@property(copy, nonatomic) NSURL *thumbnailURL; // @synthesize thumbnailURL=_thumbnailURL;
@property(copy, nonatomic) NSURL *linkURL; // @synthesize linkURL=_linkURL;
@property(copy, nonatomic) NSString *postID; // @synthesize postID=_postID;
@property(nonatomic) unsigned long long postType; // @synthesize postType=_postType;
- (void).cxx_destruct;
- (id)selectorsToObserveChanges;
- (id)debugDescription;
- (void)generateFeedPostTextStrings;
- (void)regenerateFormattedStringsForced:(_Bool)arg1;
@property(readonly, copy, nonatomic) NSString *sharingPermalinkIncludingDomain;
@property(readonly, copy, nonatomic) NSString *internalPermalinkIncludingDomain;
@property(readonly, copy, nonatomic) NSString *longDomain;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface StepSliderItem : NSObject
{
    NSString *_title;
    NSString *_value;
}

@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithLabel:(id)arg1 value:(id)arg2;

@end

@interface LabeledStepSlider : BaseControl
{
    NSArray *_items;
    unsigned long long _step;
    id <LabeledStepSliderDelegate> _delegate;
    BaseSlider *_slider;
    BaseLabel *_label;
    UIColor *_thumbColor;
}

@property(retain, nonatomic) UIColor *thumbColor; // @synthesize thumbColor=_thumbColor;
@property(retain, nonatomic) BaseLabel *label; // @synthesize label=_label;
@property(retain, nonatomic) BaseSlider *slider; // @synthesize slider=_slider;
@property(nonatomic) __weak id <LabeledStepSliderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long step; // @synthesize step=_step;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (unsigned long long)currentStep;
- (void)didEndSliderTracking:(id)arg1;
- (double)mappedProgressFromSliderProgress:(double)arg1;
- (void)didChangeValue:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 initialStep:(unsigned long long)arg2 items:(id)arg3;

@end

@interface MPVASTDurationOffset : MPVASTModel
{
    unsigned long long _type;
    NSString *_offset;
}

@property(readonly, copy, nonatomic) NSString *offset; // @synthesize offset=_offset;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (double)timeIntervalForVideoWithDuration:(double)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface RecommendationsNetworkSource : ListingNetworkSource
{
}

- (id)multisFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface MOPUBPlayerView : UIControl
{
    MOPUBAVPlayer *_avPlayer;
    unsigned long long _displayMode;
    NSString *_videoGravity;
    MOPUBAVPlayerView *_avView;
    MOPUBReplayView *_replayView;
    UIButton *_replayVideoButton;
    UIView *_progressBarBackground;
    UIView *_progressBar;
    UIView *_gradientView;
    CAGradientLayer *_gradient;
    UITapGestureRecognizer *_tapGestureRecognizer;
    id <MOPUBPlayerViewDelegate> _delegate;
}

@property(nonatomic) __weak id <MOPUBPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(retain, nonatomic) CAGradientLayer *gradient; // @synthesize gradient=_gradient;
@property(retain, nonatomic) UIView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIView *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) UIView *progressBarBackground; // @synthesize progressBarBackground=_progressBarBackground;
@property(retain, nonatomic) UIButton *replayVideoButton; // @synthesize replayVideoButton=_replayVideoButton;
@property(retain, nonatomic) MOPUBReplayView *replayView; // @synthesize replayView=_replayView;
@property(retain, nonatomic) MOPUBAVPlayerView *avView; // @synthesize avView=_avView;
@property(copy, nonatomic) NSString *videoGravity; // @synthesize videoGravity=_videoGravity;
@property(nonatomic) unsigned long long displayMode; // @synthesize displayMode=_displayMode;
@property(retain, nonatomic) MOPUBAVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
- (void).cxx_destruct;
- (void)layoutReplayView;
- (void)layoutGradientview;
- (void)layoutProgressBar;
- (void)layoutSubviews;
- (void)avPlayerTapped;
- (void)setProgressBarVisible:(_Bool)arg1;
- (void)playbackDidFinish;
- (void)playbackTimeDidProgress;
- (void)handleVideoInitFailure;
- (void)createPlayerView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 delegate:(id)arg2;

@end

@interface CommentListingNetworkSource : ListingNetworkSource
{
}

- (id)commentsFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;
- (id)initWithFetchURLString:(id)arg1;

@end

@interface LiveUpdateCollectionViewCell : UICollectionViewCell
{
    LiveUpdateContentView *_liveUpdateContentView;
}

@property(retain, nonatomic) LiveUpdateContentView *liveUpdateContentView; // @synthesize liveUpdateContentView=_liveUpdateContentView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPAdDestinationDisplayAgent : NSObject <MPProgressOverlayViewDelegate, MPAdBrowserControllerDelegate, MPSKStoreProductViewControllerDelegate, MPActivityViewControllerHelperDelegate>
{
    _Bool _isLoadingDestination;
    id <MPAdDestinationDisplayAgentDelegate> _delegate;
    MPURLResolver *_resolver;
    MPURLResolver *_enhancedDeeplinkFallbackResolver;
    MPProgressOverlayView *_overlayView;
    SKStoreProductViewController *_storeKitController;
    MPAdBrowserController *_browserController;
    MPTelephoneConfirmationController *_telephoneConfirmationController;
    MPActivityViewControllerHelper *_activityViewControllerHelper;
}

+ (id)agentWithDelegate:(id)arg1;
@property(retain, nonatomic) MPActivityViewControllerHelper *activityViewControllerHelper; // @synthesize activityViewControllerHelper=_activityViewControllerHelper;
@property(retain, nonatomic) MPTelephoneConfirmationController *telephoneConfirmationController; // @synthesize telephoneConfirmationController=_telephoneConfirmationController;
@property(retain, nonatomic) MPAdBrowserController *browserController; // @synthesize browserController=_browserController;
@property(retain, nonatomic) SKStoreProductViewController *storeKitController; // @synthesize storeKitController=_storeKitController;
@property(retain, nonatomic) MPProgressOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) MPURLResolver *enhancedDeeplinkFallbackResolver; // @synthesize enhancedDeeplinkFallbackResolver=_enhancedDeeplinkFallbackResolver;
@property(nonatomic) _Bool isLoadingDestination; // @synthesize isLoadingDestination=_isLoadingDestination;
@property(retain, nonatomic) MPURLResolver *resolver; // @synthesize resolver=_resolver;
@property(nonatomic) __weak id <MPAdDestinationDisplayAgentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)activityViewControllerDidDismiss;
- (void)activityViewControllerWillPresent;
- (id)viewControllerForPresentingActivityViewController;
- (void)hideOverlay;
- (void)hideModalAndNotifyDelegate;
- (void)overlayCancelButtonPressed;
- (id)adConfiguration;
- (void)dismissBrowserController:(id)arg1 animated:(_Bool)arg2;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)presentStoreKitControllerWithItemIdentifier:(id)arg1 fallbackURL:(id)arg2;
- (void)completeDestinationLoading;
- (void)failedToResolveURLWithError:(id)arg1;
- (void)interceptTelephoneURL:(id)arg1;
- (_Bool)openShareURL:(id)arg1;
- (void)openURLInApplication:(id)arg1;
- (void)showStoreKitProductWithParameter:(id)arg1 fallbackURL:(id)arg2;
- (void)showAdBrowserController:(id)arg1;
- (void)showWebViewWithURL:(id)arg1;
- (void)showWebViewWithHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)handleEnhancedDeeplinkFallbackForRequest:(id)arg1;
- (void)handleEnhancedDeeplinkRequest:(id)arg1;
- (_Bool)handleSuggestedURLAction:(id)arg1 isResolvingEnhancedDeeplink:(_Bool)arg2;
- (void)cancel;
- (void)displayDestinationForURL:(id)arg1;
- (void)dismissAllModalContent;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SortBarView : HeaderBarView
{
    unsigned long long _sortType;
    unsigned long long _timeMode;
    BaseButton *_dropdownButton;
}

@property(retain, nonatomic) BaseButton *dropdownButton; // @synthesize dropdownButton=_dropdownButton;
@property(nonatomic) unsigned long long timeMode; // @synthesize timeMode=_timeMode;
@property(nonatomic) unsigned long long sortType; // @synthesize sortType=_sortType;
- (void).cxx_destruct;
- (void)didTapSortButton:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ScrollViewIndex : NSObject
{
    UIImage *_icon;
    NSString *_title;
    NSIndexPath *_indexPath;
}

@property(copy, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) UIImage *icon; // @synthesize icon=_icon;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTitle:(id)arg1 indexPath:(id)arg2;
- (id)initWithIcon:(id)arg1 indexPath:(id)arg2;

@end

@interface MPNativeAdUtils : NSObject
{
}

+ (_Bool)addURLString:(id)arg1 toURLArray:(id)arg2;

@end

@interface MOPUBAVPlayer : AVPlayer
{
    _Bool _playbackDidStall;
    id <MOPUBAVPlayerDelegate> _delegate;
    NSURL *_mediaURL;
    MPTimer *_playbackTimer;
    MPReachability *_reachability;
    CDStruct_1b6d18a9 _lastContinuousPlaybackCMTime;
}

@property(nonatomic) _Bool playbackDidStall; // @synthesize playbackDidStall=_playbackDidStall;
@property(retain, nonatomic) MPReachability *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) CDStruct_1b6d18a9 lastContinuousPlaybackCMTime; // @synthesize lastContinuousPlaybackCMTime=_lastContinuousPlaybackCMTime;
@property(retain, nonatomic) MPTimer *playbackTimer; // @synthesize playbackTimer=_playbackTimer;
@property(copy, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
@property(readonly, nonatomic) __weak id <MOPUBAVPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double currentItemDuration;
- (void)dispose;
- (void)playbackDidFinish;
- (void)avPlayerDidStall;
- (void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2;
- (void)checkNetworkStatus:(id)arg1;
- (void)stopTimeObserver;
- (void)timerTick;
- (void)startTimeObserver;
- (void)setAudioVolume:(float)arg1;
- (void)setMuted:(_Bool)arg1;
- (void)pause;
- (void)play;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 playerItem:(id)arg2;

@end

@interface WebViewController : BaseWebViewController <WKNavigationDelegate>
{
    _Bool _observingProgress;
    WKWebView *_webView;
    NSURL *_webURL;
}

@property(nonatomic) _Bool observingProgress; // @synthesize observingProgress=_observingProgress;
@property(retain, nonatomic) NSURL *webURL; // @synthesize webURL=_webURL;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (id)previewActionItems;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)refresh;
- (void)goForward;
- (void)goBack;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)loadHTMLString:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)webPageTitle;
- (id)originalRequestURL;
- (id)currentURL;
- (void)fixNavbarLayout:(id)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MOPUBNativeVideoCustomEvent : MPNativeCustomEvent
{
}

- (void)requestAdWithCustomEventInfo:(id)arg1;
- (void)handleSuccessfulVastParsing:(id)arg1 info:(id)arg2;

@end

@interface CommentHeaderView : VerticalLineView <UIGestureRecognizerDelegate, AttributedLabelRegularDelegate, BaseModelObserver>
{
    _Bool _shouldIgnoreLeveling;
    id <CommentHeaderViewDelegate> _delegate;
    Comment *_comment;
    AttributedLabelRegular *_commentUserAndTimeLabel;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) AttributedLabelRegular *commentUserAndTimeLabel; // @synthesize commentUserAndTimeLabel=_commentUserAndTimeLabel;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
@property(nonatomic) __weak id <CommentHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldIgnoreLeveling; // @synthesize shouldIgnoreLeveling=_shouldIgnoreLeveling;
- (void).cxx_destruct;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (id)userIconsForData:(id)arg1;
- (id)textAttachmentWithImageNamed:(id)arg1;
- (id)commentHeaderStringForData:(id)arg1;
- (void)layoutSubviews;
- (void)updateLastVerticalLineColorForVoteStatus;
- (void)updateContentViewsForData:(id)arg1;
- (void)setShouldHighlightBackground:(_Bool)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LightboxViewController : BaseViewController <ActionSheetViewControllerDelegate, UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning, LightboxViewDelegate>
{
    _Bool _hasAppeared;
    _Bool _isPresenting;
    _Bool _isRotating;
    LightboxView *_lightboxView;
    LightboxTopBarView *_topBar;
    struct CGRect _startingRect;
}

+ (void)presentLightboxWithContentView:(id)arg1 fromViewController:(id)arg2 withStartingRect:(struct CGRect)arg3;
@property(nonatomic) struct CGRect startingRect; // @synthesize startingRect=_startingRect;
@property(nonatomic) _Bool isRotating; // @synthesize isRotating=_isRotating;
@property(nonatomic) _Bool isPresenting; // @synthesize isPresenting=_isPresenting;
@property(nonatomic) _Bool hasAppeared; // @synthesize hasAppeared=_hasAppeared;
@property(retain, nonatomic) LightboxTopBarView *topBar; // @synthesize topBar=_topBar;
@property(retain, nonatomic) LightboxView *lightboxView; // @synthesize lightboxView=_lightboxView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)lightboxViewDidSwipeDown:(id)arg1;
- (void)lightboxViewDidLongPress:(id)arg1;
- (_Bool)prefersStatusBarHidden;
- (void)didTap:(id)arg1;
- (void)didTapCloseButton:(id)arg1;
- (void)didTapSaveButton:(id)arg1;
- (long long)modalTransitionStyle;
- (void)configureWithView:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)configureViewAppearance;
- (void)viewDidLoad;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPStaticNativeAdImpressionTimer : NSObject
{
    id <MPStaticNativeAdImpressionTimerDelegate> _delegate;
    UIView *_adView;
    MPTimer *_viewVisibilityTimer;
    double _firstVisibilityTimestamp;
    double _requiredViewVisibilityPercentage;
    double _requiredSecondsForImpression;
}

@property(readonly, nonatomic) double requiredSecondsForImpression; // @synthesize requiredSecondsForImpression=_requiredSecondsForImpression;
@property(nonatomic) double requiredViewVisibilityPercentage; // @synthesize requiredViewVisibilityPercentage=_requiredViewVisibilityPercentage;
@property(nonatomic) double firstVisibilityTimestamp; // @synthesize firstVisibilityTimestamp=_firstVisibilityTimestamp;
@property(retain, nonatomic) MPTimer *viewVisibilityTimer; // @synthesize viewVisibilityTimer=_viewVisibilityTimer;
@property(retain, nonatomic) UIView *adView; // @synthesize adView=_adView;
@property(nonatomic) __weak id <MPStaticNativeAdImpressionTimerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)tick:(id)arg1;
- (void)startTrackingView:(id)arg1;
- (void)dealloc;
- (id)initWithRequiredSecondsForImpression:(double)arg1 requiredViewVisibilityPercentage:(double)arg2;

@end

@interface AFHTTPResponseSerializer : NSObject <AFURLResponseSerialization>
{
    unsigned long long _stringEncoding;
    NSIndexSet *_acceptableStatusCodes;
    NSSet *_acceptableContentTypes;
}

+ (_Bool)supportsSecureCoding;
+ (id)serializer;
@property(copy, nonatomic) NSSet *acceptableContentTypes; // @synthesize acceptableContentTypes=_acceptableContentTypes;
@property(copy, nonatomic) NSIndexSet *acceptableStatusCodes; // @synthesize acceptableStatusCodes=_acceptableStatusCodes;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFJSONResponseSerializer : AFHTTPResponseSerializer
{
    _Bool _removesKeysWithNullValues;
    unsigned long long _readingOptions;
}

+ (id)serializerWithReadingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) _Bool removesKeysWithNullValues; // @synthesize removesKeysWithNullValues=_removesKeysWithNullValues;
@property(nonatomic) unsigned long long readingOptions; // @synthesize readingOptions=_readingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFXMLParserResponseSerializer : AFHTTPResponseSerializer
{
}

+ (id)serializer;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFPropertyListResponseSerializer : AFHTTPResponseSerializer
{
    unsigned long long _format;
    unsigned long long _readOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 readOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long readOptions; // @synthesize readOptions=_readOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFImageResponseSerializer : AFHTTPResponseSerializer
{
    _Bool _automaticallyInflatesResponseImage;
    double _imageScale;
}

@property(nonatomic) _Bool automaticallyInflatesResponseImage; // @synthesize automaticallyInflatesResponseImage=_automaticallyInflatesResponseImage;
@property(nonatomic) double imageScale; // @synthesize imageScale=_imageScale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFCompoundResponseSerializer : AFHTTPResponseSerializer
{
    NSArray *_responseSerializers;
}

+ (id)compoundSerializerWithResponseSerializers:(id)arg1;
@property(copy, nonatomic) NSArray *responseSerializers; // @synthesize responseSerializers=_responseSerializers;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

@end

@interface IntroViewController : BaseViewController <AuthenticationViewControllerDelegate>
{
    BaseButton *_skipButton;
    id <IntroViewControllerDelegate> _delegate;
    BaseButton *_loginButton;
    BaseButton *_signupButton;
    BaseButton *_facebookLoginButton;
    BaseLabel *_facebookDisclosureLabel;
    UIImageView *_backgroundImageView;
    UIImageView *_logoImageView;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) BaseLabel *facebookDisclosureLabel; // @synthesize facebookDisclosureLabel=_facebookDisclosureLabel;
@property(retain, nonatomic) BaseButton *facebookLoginButton; // @synthesize facebookLoginButton=_facebookLoginButton;
@property(retain, nonatomic) BaseButton *signupButton; // @synthesize signupButton=_signupButton;
@property(retain, nonatomic) BaseButton *loginButton; // @synthesize loginButton=_loginButton;
@property(nonatomic) __weak id <IntroViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) BaseButton *skipButton; // @synthesize skipButton=_skipButton;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)authenticationViewController:(id)arg1 didLoginUser:(id)arg2 fromSignup:(_Bool)arg3;
- (id)experimentVariant;
- (void)facebookLoginButtonTapped:(id)arg1;
- (void)authenticateButtonTapped:(id)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedWebViewController : BaseViewController <FeedPostCommentBarViewDelegate, ActionSheetViewControllerDelegate, FloatingHeaderCallbackProtocol, OpenBrowserActionViewDelegate>
{
    Post *_post;
    id <FeedWebViewControllerDelegate> _delegate;
    BaseWebViewController *_webViewController;
    FeedPostCommentsBarView *_commentBarView;
    FloatingHeaderManager *_floatingHeaderManager;
}

@property(retain, nonatomic) FloatingHeaderManager *floatingHeaderManager; // @synthesize floatingHeaderManager=_floatingHeaderManager;
@property(retain, nonatomic) FeedPostCommentsBarView *commentBarView; // @synthesize commentBarView=_commentBarView;
@property(retain, nonatomic) BaseWebViewController *webViewController; // @synthesize webViewController=_webViewController;
@property(nonatomic) __weak id <FeedWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)floatingHeaderShouldMove:(id)arg1;
- (void)openBrowserActionViewControllerDidSelectPostToReddit:(id)arg1;
- (void)openBrowserActionViewControllerDidSelectRefresh:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)didTapOverflow:(id)arg1;
- (void)commentBarViewDidTapShare:(id)arg1;
- (void)commentBarViewDidTapComment:(id)arg1;
- (void)commentBarViewDidTapUpvote:(id)arg1;
- (void)commentBarViewDidTapDownvote:(id)arg1;
- (_Bool)prefersTabBarHidden;
- (void)loadStartURL;
- (struct UIEdgeInsets)preferredContentInset;
- (void)didTapBack;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (id)scrollViewInWebView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MOPUBNativeVideoAdRenderer : NSObject <MPNativeAdRenderer, MOPUBPlayerViewControllerDelegate, MOPUBFullscreenPlayerViewControllerDelegate, MPNativeAdRendererImageHandlerDelegate>
{
    _Bool _adViewInViewHierarchy;
    _Bool _trackingImpressionFired;
    CDUnknownBlockType _viewSizeHandler;
    UIView<MPNativeAdRendering> *_adView;
    MOPUBNativeVideoAdAdapter<MPNativeAdAdapter> *_adapter;
    Class _renderingViewClass;
    MPNativeAdRendererImageHandler *_rendererImageHandler;
    MOPUBPlayerViewController *_videoController;
    MPTimer *_autoPlayTimer;
    MPVideoConfig *_videoConfig;
    MPVASTTracking *_vastTracking;
    MOPUBNativeVideoAdConfigValues *_nativeVideoAdConfig;
    MOPUBNativeVideoImpressionAgent *_trackingAgent;
}

+ (id)rendererConfigurationWithRendererSettings:(id)arg1;
@property(nonatomic) _Bool trackingImpressionFired; // @synthesize trackingImpressionFired=_trackingImpressionFired;
@property(retain, nonatomic) MOPUBNativeVideoImpressionAgent *trackingAgent; // @synthesize trackingAgent=_trackingAgent;
@property(retain, nonatomic) MOPUBNativeVideoAdConfigValues *nativeVideoAdConfig; // @synthesize nativeVideoAdConfig=_nativeVideoAdConfig;
@property(retain, nonatomic) MPVASTTracking *vastTracking; // @synthesize vastTracking=_vastTracking;
@property(retain, nonatomic) MPVideoConfig *videoConfig; // @synthesize videoConfig=_videoConfig;
@property(retain, nonatomic) MPTimer *autoPlayTimer; // @synthesize autoPlayTimer=_autoPlayTimer;
@property(nonatomic) __weak MOPUBPlayerViewController *videoController; // @synthesize videoController=_videoController;
@property(retain, nonatomic) MPNativeAdRendererImageHandler *rendererImageHandler; // @synthesize rendererImageHandler=_rendererImageHandler;
@property(retain, nonatomic) Class renderingViewClass; // @synthesize renderingViewClass=_renderingViewClass;
@property(nonatomic) _Bool adViewInViewHierarchy; // @synthesize adViewInViewHierarchy=_adViewInViewHierarchy;
@property(retain, nonatomic) MOPUBNativeVideoAdAdapter<MPNativeAdAdapter> *adapter; // @synthesize adapter=_adapter;
@property(retain, nonatomic) UIView<MPNativeAdRendering> *adView; // @synthesize adView=_adView;
@property(readonly, nonatomic) CDUnknownBlockType viewSizeHandler; // @synthesize viewSizeHandler=_viewSizeHandler;
- (void).cxx_destruct;
- (void)setupVideoView;
- (void)initAdView;
- (void)enterFullscreen:(id)arg1;
- (_Bool)nativeAdViewInViewHierarchy;
- (void)nativeAdTapped;
- (void)fullscreenPlayerWillLeaveApplication:(id)arg1;
- (void)ctaTapped:(id)arg1;
- (void)playerDidProgressToTime:(double)arg1;
- (void)willEnterFullscreen:(id)arg1;
- (void)tick:(id)arg1;
- (void)adViewWillMoveToSuperview:(id)arg1;
- (void)DAAIconTapped;
- (_Bool)shouldLoadMediaView;
- (id)retrieveViewWithAdapter:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithRendererSettings:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MultiNetworkSource : ListingNetworkSource
{
}

- (id)multisFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface LightboxImageView : BaseView <UIScrollViewDelegate>
{
    _Bool _isLoading;
    UIScrollView *_internalScrollView;
    BaseImageView *_internalImageView;
    NSString *_urlString;
    BaseProgressView *_progressView;
    LoaderSnooView *_loaderView;
    UIImage *_placeholder;
}

@property(retain, nonatomic) UIImage *placeholder; // @synthesize placeholder=_placeholder;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) LoaderSnooView *loaderView; // @synthesize loaderView=_loaderView;
@property(retain, nonatomic) BaseProgressView *progressView; // @synthesize progressView=_progressView;
@property(copy, nonatomic) NSString *urlString; // @synthesize urlString=_urlString;
@property(retain, nonatomic) BaseImageView *internalImageView; // @synthesize internalImageView=_internalImageView;
@property(retain, nonatomic) UIScrollView *internalScrollView; // @synthesize internalScrollView=_internalScrollView;
- (void).cxx_destruct;
- (void)didDoubleTap:(id)arg1;
- (struct CGRect)resizedFrameForAutorotatingImageView:(struct CGSize)arg1;
- (struct UIEdgeInsets)contentInsetForScrollView:(double)arg1;
- (void)snapImage;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)didTapLoader:(id)arg1;
@property(readonly, nonatomic) UIImage *image;
- (void)setScrollViewZoom:(double)arg1 withPoint:(struct CGPoint)arg2;
- (void)setScrollViewZoom:(double)arg1;
- (void)layoutSubviews;
- (void)configureWithURLString:(id)arg1 placeholder:(id)arg2;
- (void)configureWithImage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPTableViewAdPlacerCell : UITableViewCell
{
}

@end

@interface BaseCollectionView : UICollectionView <ThemeUpdateCallbackProtocol>
{
    _Bool _disableObservingThemeUpdate;
    double _maxScrollOffset;
}

@property(nonatomic) double maxScrollOffset; // @synthesize maxScrollOffset=_maxScrollOffset;
@property(nonatomic) _Bool disableObservingThemeUpdate; // @synthesize disableObservingThemeUpdate=_disableObservingThemeUpdate;
- (void)reloadData;
- (void)setBackgroundColor:(id)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (id)firstIndexPathFullyVisibleOnScreen;
- (void)removeFromSuperview;
- (void)themeDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CarouselItemView : BaseView <BaseModelObserver>
{
    Post *_post;
    long long _index;
    UIView *_backgroundView;
    BaseImageView *_imageView;
    BaseImageView *_videoPlayButtonOverlay;
    BaseLabel *_titleLabel;
    GTMFadeTruncatingLabel *_subredditLabel;
    BaseLabel *_scoreLabel;
    BaseButton *_upvoteButton;
    NSString *_imageURLString;
    NSObject<CarouselItemViewDelegate> *_delegate;
}

@property(nonatomic) __weak NSObject<CarouselItemViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *imageURLString; // @synthesize imageURLString=_imageURLString;
@property(retain, nonatomic) BaseButton *upvoteButton; // @synthesize upvoteButton=_upvoteButton;
@property(retain, nonatomic) BaseLabel *scoreLabel; // @synthesize scoreLabel=_scoreLabel;
@property(retain, nonatomic) GTMFadeTruncatingLabel *subredditLabel; // @synthesize subredditLabel=_subredditLabel;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) BaseImageView *videoPlayButtonOverlay; // @synthesize videoPlayButtonOverlay=_videoPlayButtonOverlay;
@property(retain, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
- (void).cxx_destruct;
- (void)didTap:(id)arg1;
- (void)updateUpvoteTintColor;
- (double)calculateTitleLabelHeight;
- (void)layoutSubviews;
- (_Bool)hasImages;
- (void)updateContentViewsForData:(id)arg1;
- (void)prepareForReuse;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPAdConfigurationLogEventProperties : NSObject
{
    NSString *_adType;
    NSString *_adCreativeId;
    NSString *_dspCreativeId;
    NSString *_adNetworkType;
    NSString *_requestId;
    NSString *_adUnitId;
    struct CGSize _adSize;
}

@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(nonatomic) struct CGSize adSize; // @synthesize adSize=_adSize;
@property(copy, nonatomic) NSString *adNetworkType; // @synthesize adNetworkType=_adNetworkType;
@property(copy, nonatomic) NSString *dspCreativeId; // @synthesize dspCreativeId=_dspCreativeId;
@property(copy, nonatomic) NSString *adCreativeId; // @synthesize adCreativeId=_adCreativeId;
@property(copy, nonatomic) NSString *adType; // @synthesize adType=_adType;
- (void).cxx_destruct;
- (id)initWithConfiguration:(id)arg1;

@end

@interface MPLogEvent : NSObject
{
    _Bool _clientDoNotTrack;
    NSString *_eventName;
    NSString *_eventCategory;
    NSDate *_timestamp;
    long long _scribeCategory;
    NSString *_adUnitId;
    NSString *_adCreativeId;
    NSString *_dspCreativeId;
    NSString *_adType;
    NSString *_adNetworkType;
    NSString *_appName;
    NSString *_appStoreId;
    NSString *_appBundleId;
    NSString *_appVersion;
    unsigned long long _performanceDurationMs;
    NSString *_requestId;
    unsigned long long _requestStatusCode;
    NSString *_requestURI;
    unsigned long long _requestRetries;
    NSString *_sdkVersion;
    NSString *_deviceModel;
    NSString *_deviceOSVersion;
    double _geoLat;
    double _geoLon;
    double _geoAccuracy;
    long long _networkType;
    NSString *_networkOperatorCode;
    NSString *_networkOperatorName;
    NSString *_networkISOCountryCode;
    NSString *_networkSIMCode;
    NSString *_networkSIMOperatorName;
    NSString *_networkSimISOCountryCode;
    NSString *_clientAdvertisingId;
    struct CGSize _adSize;
    struct CGSize _deviceSize;
}

@property(nonatomic) _Bool clientDoNotTrack; // @synthesize clientDoNotTrack=_clientDoNotTrack;
@property(copy, nonatomic) NSString *clientAdvertisingId; // @synthesize clientAdvertisingId=_clientAdvertisingId;
@property(copy, nonatomic) NSString *networkSimISOCountryCode; // @synthesize networkSimISOCountryCode=_networkSimISOCountryCode;
@property(copy, nonatomic) NSString *networkSIMOperatorName; // @synthesize networkSIMOperatorName=_networkSIMOperatorName;
@property(copy, nonatomic) NSString *networkSIMCode; // @synthesize networkSIMCode=_networkSIMCode;
@property(copy, nonatomic) NSString *networkISOCountryCode; // @synthesize networkISOCountryCode=_networkISOCountryCode;
@property(copy, nonatomic) NSString *networkOperatorName; // @synthesize networkOperatorName=_networkOperatorName;
@property(copy, nonatomic) NSString *networkOperatorCode; // @synthesize networkOperatorCode=_networkOperatorCode;
@property(nonatomic) long long networkType; // @synthesize networkType=_networkType;
@property(nonatomic) double geoAccuracy; // @synthesize geoAccuracy=_geoAccuracy;
@property(nonatomic) double geoLon; // @synthesize geoLon=_geoLon;
@property(nonatomic) double geoLat; // @synthesize geoLat=_geoLat;
@property(nonatomic) struct CGSize deviceSize; // @synthesize deviceSize=_deviceSize;
@property(copy, nonatomic) NSString *deviceOSVersion; // @synthesize deviceOSVersion=_deviceOSVersion;
@property(copy, nonatomic) NSString *deviceModel; // @synthesize deviceModel=_deviceModel;
@property(copy, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(nonatomic) unsigned long long requestRetries; // @synthesize requestRetries=_requestRetries;
@property(copy, nonatomic) NSString *requestURI; // @synthesize requestURI=_requestURI;
@property(nonatomic) unsigned long long requestStatusCode; // @synthesize requestStatusCode=_requestStatusCode;
@property(copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(nonatomic) unsigned long long performanceDurationMs; // @synthesize performanceDurationMs=_performanceDurationMs;
@property(copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(copy, nonatomic) NSString *appBundleId; // @synthesize appBundleId=_appBundleId;
@property(copy, nonatomic) NSString *appStoreId; // @synthesize appStoreId=_appStoreId;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(nonatomic) struct CGSize adSize; // @synthesize adSize=_adSize;
@property(copy, nonatomic) NSString *adNetworkType; // @synthesize adNetworkType=_adNetworkType;
@property(copy, nonatomic) NSString *adType; // @synthesize adType=_adType;
@property(copy, nonatomic) NSString *dspCreativeId; // @synthesize dspCreativeId=_dspCreativeId;
@property(copy, nonatomic) NSString *adCreativeId; // @synthesize adCreativeId=_adCreativeId;
@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(nonatomic) long long scribeCategory; // @synthesize scribeCategory=_scribeCategory;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSString *eventCategory; // @synthesize eventCategory=_eventCategory;
@property(copy, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
- (void).cxx_destruct;
- (void)setLogEventProperties:(id)arg1;
- (void)recordEndTime;
- (id)serialize;
- (id)asDictionary;
- (unsigned long long)networkTypeAsInteger;
- (id)eventCategoryAsString;
- (unsigned long long)timestampAsEpoch;
- (id)deviceManufacturer;
- (unsigned long long)sdkProduct;
- (unsigned long long)appPlatform;
- (id)initWithEventCategory:(id)arg1 eventName:(id)arg2;
- (id)initWithLogEventProperties:(id)arg1 nativeVideoEventType:(long long)arg2;

@end

@interface LiveViewController : ListingViewController <LiveHandlerDelegate, PagedTabControllerProtocol, UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, ListingNetworkSourceDelegate, LiveNetworkSourceDelegate, LiveUpdateContentViewDelegate>
{
    _Bool _isReloading;
    LiveHandler *_liveHandler;
    LiveEvent *_liveEvent;
    BaseLabel *_titleLabel;
    FloatingUpdateView *_updateView;
    unsigned long long _newUpdatesCount;
    FeedViewFlowLayout *_feedViewFlowLayout;
    BaseCollectionView *_feedCollectionView;
    NSIndexPath *_maxScrollIndexPath;
    NSURLSession *_trackingSession;
    NSTimer *_trackingTimer;
}

@property(retain, nonatomic) NSTimer *trackingTimer; // @synthesize trackingTimer=_trackingTimer;
@property(retain, nonatomic) NSURLSession *trackingSession; // @synthesize trackingSession=_trackingSession;
@property(retain, nonatomic) NSIndexPath *maxScrollIndexPath; // @synthesize maxScrollIndexPath=_maxScrollIndexPath;
@property(nonatomic) _Bool isReloading; // @synthesize isReloading=_isReloading;
@property(retain, nonatomic) BaseCollectionView *feedCollectionView; // @synthesize feedCollectionView=_feedCollectionView;
@property(retain, nonatomic) FeedViewFlowLayout *feedViewFlowLayout; // @synthesize feedViewFlowLayout=_feedViewFlowLayout;
@property(nonatomic) unsigned long long newUpdatesCount; // @synthesize newUpdatesCount=_newUpdatesCount;
@property(retain, nonatomic) FloatingUpdateView *updateView; // @synthesize updateView=_updateView;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) LiveEvent *liveEvent; // @synthesize liveEvent=_liveEvent;
@property(retain, nonatomic) LiveHandler *liveHandler; // @synthesize liveHandler=_liveHandler;
- (void).cxx_destruct;
- (void)sendActivityTrackingRequest;
- (void)stopTrackingTimer;
- (void)setupTrackingTimer;
- (void)handleAppDidEnterForeground;
- (void)handleAppDidEnterBackgroundInternal;
- (void)liveUpdateContentView:(id)arg1 didRequestLightboxWithVideoURL:(id)arg2;
- (void)liveUpdateContentView:(id)arg1 didRequestLightboxWithImage:(id)arg2 withURL:(id)arg3;
- (void)liveUpdateContentView:(id)arg1 didTapLinkWithURLString:(id)arg2;
- (id)analyticsScrollEventParameters;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (_Bool)heartbeatLoggingEnabled;
- (id)pageItemText;
- (id)pageItemSelectedImage;
- (id)pageItemImage;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (void)liveNetworkSource:(id)arg1 didParseEmbedForUpdate:(id)arg2;
- (void)liveEventDidUpdate:(id)arg1;
- (void)liveHandlerDidLoseConnection:(id)arg1;
- (void)liveHandlerDidConnect:(id)arg1;
- (void)liveHandler:(id)arg1 didStrikeUpdateWithPK:(id)arg2;
- (void)liveHandler:(id)arg1 didDeleteUpdateWithPK:(id)arg2;
- (void)liveHandler:(id)arg1 didReceiveEmbeds:(id)arg2 withRenderedEmbeds:(id)arg3 forPK:(id)arg4;
- (void)liveHandler:(id)arg1 didReceiveUpdate:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)sectionHeaderHeight;
- (double)totalHeaderHeight;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)scrollViewIsAtTop;
- (void)didTouchFloatingUpdateView:(id)arg1;
- (void)setFloatingUpdateViewVisible:(_Bool)arg1 updatedTextOrNil:(id)arg2 animated:(_Bool)arg3;
- (id)attributedStringForHeader;
- (void)configureTitleWithLiveEvent:(id)arg1;
- (void)configureWithLiveEvent:(id)arg1;
- (id)majorContentScrollView;
- (long long)preferredStatusBarStyle;
- (void)viewWillLayoutSubviews;
- (void)configureNavigationBarAppearance;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SearchViewController : PagedTabViewController <ActionSheetViewControllerDelegate, UISearchBarDelegate, LabeledStepSliderDelegate>
{
    _Bool _hasShownSearchView;
    _Bool _isViewDisappearing;
    BaseSearchBar *_searchBar;
    NSString *_submittedQuery;
    NSString *_sortParameter;
    NSString *_timeParameter;
    NSString *_previousSearchQuery;
    NSString *_placeholder;
    SearchBarTransition *_searchBarTransition;
}

@property(nonatomic) _Bool isViewDisappearing; // @synthesize isViewDisappearing=_isViewDisappearing;
@property(retain, nonatomic) SearchBarTransition *searchBarTransition; // @synthesize searchBarTransition=_searchBarTransition;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy, nonatomic) NSString *previousSearchQuery; // @synthesize previousSearchQuery=_previousSearchQuery;
@property(nonatomic) _Bool hasShownSearchView; // @synthesize hasShownSearchView=_hasShownSearchView;
@property(copy, nonatomic) NSString *timeParameter; // @synthesize timeParameter=_timeParameter;
@property(copy, nonatomic) NSString *sortParameter; // @synthesize sortParameter=_sortParameter;
@property(copy, nonatomic) NSString *submittedQuery; // @synthesize submittedQuery=_submittedQuery;
@property(retain, nonatomic) BaseSearchBar *searchBar; // @synthesize searchBar=_searchBar;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
@property(readonly, copy, nonatomic) NSArray *searchTermBlacklist;
- (_Bool)blacklistTerm:(id)arg1;
- (void)searchBarBookmarkButtonClicked:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)issueNewSearchQueryIfNecessaryWithAutocomplete:(id)arg1;
- (void)issueNewSearchQueryIfNecessary;
- (id)processedSearchQueryForQuery:(id)arg1;
- (void)issueNewSearchQuery:(id)arg1 withAutocomplete:(_Bool)arg2;
- (void)setSegmentedControlHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)labeledStepSlider:(id)arg1 didChangeStepItem:(id)arg2;
- (void)pageSegmentedControl:(id)arg1 didSelectItem:(id)arg2 atIndex:(long long)arg3 previousIndex:(long long)arg4;
- (void)actionSheetViewController:(id)arg1 didGetDismissedFromOutside:(_Bool)arg2;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (id)timeSliderItems;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)configureWithViewControllers:(id)arg1 placeholder:(id)arg2;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRExpandModalViewController : UIViewController <MPClosableViewDelegate, MPForceableOrientationProtocol>
{
    _Bool _statusBarHidden;
    _Bool _applicationHidesStatusBar;
    unsigned long long _supportedOrientationMask;
}

@property(nonatomic) unsigned long long supportedOrientationMask; // @synthesize supportedOrientationMask=_supportedOrientationMask;
@property(nonatomic) _Bool applicationHidesStatusBar; // @synthesize applicationHidesStatusBar=_applicationHidesStatusBar;
@property(nonatomic) _Bool statusBarHidden; // @synthesize statusBarHidden=_statusBarHidden;
- (void)closeButtonPressed:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (void)restoreStatusBarVisibility;
- (void)hideStatusBar;
- (void)viewDidLoad;
- (id)initWithOrientationMask:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentImagesViewCell : UICollectionViewCell
{
    _Bool _imageFailedToLoad;
    ContentImageView *_imageView;
    ContentImageView *_placeholderImageView;
    NSString *_contentUrl;
}

@property(nonatomic) _Bool imageFailedToLoad; // @synthesize imageFailedToLoad=_imageFailedToLoad;
@property(copy, nonatomic) NSString *contentUrl; // @synthesize contentUrl=_contentUrl;
@property(retain, nonatomic) ContentImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
@property(retain, nonatomic) ContentImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SubredditListingViewController : ListingViewController <ListingNetworkSourceDelegate, UITableViewDelegate, UITableViewDataSource>
{
    BaseTableView *_tableView;
}

@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)pageItemText;
- (void)reloadContentWithoutNetworkFetch;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (void)didTapSubscribeButton:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)viewDidLoad;
- (void)configureWithURLString:(id)arg1 parameters:(id)arg2;
- (void)configureWithURLString:(id)arg1;
- (id)majorContentScrollView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPCoreInstanceProvider : NSObject
{
    int _twitterDeepLinkStatus;
    NSString *_userAgent;
    NSMutableDictionary *_singletons;
    NSMutableDictionary *_carrierInfo;
}

+ (id)sharedProvider;
@property(nonatomic) int twitterDeepLinkStatus; // @synthesize twitterDeepLinkStatus=_twitterDeepLinkStatus;
@property(retain, nonatomic) NSMutableDictionary *carrierInfo; // @synthesize carrierInfo=_carrierInfo;
@property(retain, nonatomic) NSMutableDictionary *singletons; // @synthesize singletons=_singletons;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
- (void).cxx_destruct;
- (id)buildMPTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 repeats:(_Bool)arg4;
- (id)sharedCarrierInfo;
- (unsigned long long)appTransportSecuritySettings;
- (id)sharedNetworkManager;
- (id)sharedLogEventRecorder;
- (id)sharedMPReachability;
- (id)sharedMPAnalyticsTracker;
- (id)sharedOperationQueue;
- (id)buildMPAdAlertGestureRecognizerWithTarget:(id)arg1 action:(SEL)arg2;
- (id)buildMPAdAlertManagerWithDelegate:(id)arg1;
- (id)buildCLLocationManager;
- (id)sharedMPGeolocationProvider;
- (id)sharedCurrentDevice;
- (id)buildMPAdDestinationDisplayAgentWithDelegate:(id)arg1;
- (id)buildMPURLResolverWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)buildMPAdServerCommunicatorWithDelegate:(id)arg1;
- (id)buildConfiguredURLRequestWithURL:(id)arg1;
- (void)updateCarrierInfoForCTCarrier:(id)arg1;
- (void)initializeCarrierInfo;
- (void)performNoOp:(id)arg1;
- (void)keepObjectAliveForCurrentRunLoopIteration:(id)arg1;
- (id)singletonForClass:(Class)arg1 provider:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface ApplicationShortcutHandler : NSObject
{
}

+ (void)showPostSubmit;
+ (void)showInbox;
+ (void)showPopular;
+ (void)showSearch;
+ (void)performActionForShortcutItem:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)updateDynamicShortcuts;
+ (_Bool)deviceSupportsQuickLaunchShortcuts;

@end

@interface MPNSStringToNSURLMapper : NSObject <MPObjectMapper>
{
}

- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPDurationStringToTimeIntervalMapper : NSObject <MPObjectMapper>
{
}

- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPStringToNumberMapper : NSObject <MPObjectMapper>
{
    NSNumberFormatter *_numberFormatter;
}

@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
- (void).cxx_destruct;
- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;
- (id)initWithNumberStyle:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPClassMapper : NSObject <MPObjectMapper>
{
    Class _destinationClass;
}

@property(retain, nonatomic) Class destinationClass; // @synthesize destinationClass=_destinationClass;
- (void).cxx_destruct;
- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;
- (id)initWithDestinationClass:(Class)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNSArrayMapper : NSObject <MPObjectMapper>
{
    id <MPObjectMapper> _mapper;
}

@property(retain, nonatomic) id <MPObjectMapper> mapper; // @synthesize mapper=_mapper;
- (void).cxx_destruct;
- (Class)requiredSourceObjectClass;
- (id)mappedObjectFromSourceObject:(id)arg1;
- (id)initWithInternalMapper:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVASTModel : NSObject
{
}

+ (id)modelMap;
- (id)description;
- (_Bool)hasPropertyNamed:(id)arg1;
- (id)generateModelsFromDictionaryValue:(id)arg1 modelProvider:(CDUnknownBlockType)arg2;
- (id)generateModelFromDictionaryValue:(id)arg1 modelProvider:(CDUnknownBlockType)arg2;
- (id)initWithDictionary:(id)arg1;

@end

@interface PageSegmentItem : BaseControl
{
    UIImage *_image;
    UIImage *_selectedImage;
    NSString *_text;
    long long _badgeValue;
    BaseImageView *_imageView;
    BaseLabel *_label;
    BaseLabel *_badgeLabel;
}

+ (double)preferredHeight;
@property(retain, nonatomic) BaseLabel *badgeLabel; // @synthesize badgeLabel=_badgeLabel;
@property(retain, nonatomic) BaseLabel *label; // @synthesize label=_label;
@property(retain, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) long long badgeValue; // @synthesize badgeValue=_badgeValue;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) UIImage *selectedImage; // @synthesize selectedImage=_selectedImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (double)imageScale;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setSelected:(_Bool)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

@interface HiddenFeedViewController : FeedViewController
{
}

- (id)analyticsScreenViewName;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (void)viewDidLoad;

@end

@interface NSAttributedStringMarkdownLink : NSObject
{
    NSURL *_url;
    NSString *_tooltip;
    struct _NSRange _range;
}

@property(copy, nonatomic) NSString *tooltip; // @synthesize tooltip=_tooltip;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;

@end

@interface NSAttributedStringMarkdownParser : NSObject <NSCopying>
{
    NSMutableDictionary *_headerFonts;
    NSMutableArray *_bulletStarts;
    NSMutableAttributedString *_accum;
    NSMutableArray *_links;
    UIFont *_topFont;
    NSMutableDictionary *_fontCache;
    UIFont *_paragraphFont;
    NSString *_boldFontName;
    NSString *_italicFontName;
    NSString *_boldItalicFontName;
    NSString *_codeFontName;
    NSDictionary *_quoteAttributes;
}

@property(copy, nonatomic) NSDictionary *quoteAttributes; // @synthesize quoteAttributes=_quoteAttributes;
@property(copy, nonatomic) NSString *codeFontName; // @synthesize codeFontName=_codeFontName;
@property(copy, nonatomic) NSString *boldItalicFontName; // @synthesize boldItalicFontName=_boldItalicFontName;
@property(copy, nonatomic) NSString *italicFontName; // @synthesize italicFontName=_italicFontName;
@property(copy, nonatomic) NSString *boldFontName; // @synthesize boldFontName=_boldFontName;
@property(retain, nonatomic) UIFont *paragraphFont; // @synthesize paragraphFont=_paragraphFont;
- (void).cxx_destruct;
- (void)consumeToken:(int)arg1 text:(char *)arg2;
- (void)recurseOnString:(id)arg1 withFont:(id)arg2;
- (id)attributesForFont:(id)arg1;
- (id)attributesForFontWithName:(id)arg1;
- (struct __CTFont *)fontRefForFontWithName:(id)arg1 pointSize:(double)arg2;
- (id)keyForFontWithName:(id)arg1 pointSize:(double)arg2;
- (id)topFont;
- (id)paragraphStyle;
- (id)links;
- (void)addLinksToAttributedString;
- (id)attributedStringFromMarkdownString:(id)arg1;
- (id)fontForHeader:(int)arg1;
- (void)setFont:(id)arg1 forHeader:(int)arg2;
- (id)keyForHeader:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface AFRefreshControlNotificationObserver : NSObject
{
    UIRefreshControl *_refreshControl;
}

@property(readonly, nonatomic) __weak UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
- (void).cxx_destruct;
- (void)dealloc;
- (void)af_endRefreshing;
- (void)af_beginRefreshing;
- (void)setRefreshingWithStateOfTask:(id)arg1;
- (id)initWithActivityRefreshControl:(id)arg1;

@end

@interface LightboxView : BaseView
{
    _Bool _isPanning;
    id <LightboxViewDelegate> _delegate;
    id _context;
    UIView *_contentView;
    BaseView *_dimmerView;
    UIPanGestureRecognizer *_panRecognizer;
    UILongPressGestureRecognizer *_longPressRecognizer;
    UIDynamicAnimator *_animator;
    UIAttachmentBehavior *_attachmentBehavior;
    struct CGSize _contentSize;
    struct UIOffset _imageDragStartingOffset;
    struct CGPoint _imageDragStartingPoint;
    struct CGRect _startingRect;
}

@property(nonatomic) _Bool isPanning; // @synthesize isPanning=_isPanning;
@property(nonatomic) struct CGPoint imageDragStartingPoint; // @synthesize imageDragStartingPoint=_imageDragStartingPoint;
@property(nonatomic) struct UIOffset imageDragStartingOffset; // @synthesize imageDragStartingOffset=_imageDragStartingOffset;
@property(retain, nonatomic) UIAttachmentBehavior *attachmentBehavior; // @synthesize attachmentBehavior=_attachmentBehavior;
@property(retain, nonatomic) UIDynamicAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressRecognizer; // @synthesize longPressRecognizer=_longPressRecognizer;
@property(retain, nonatomic) UIPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(retain, nonatomic) BaseView *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(nonatomic) struct CGRect startingRect; // @synthesize startingRect=_startingRect;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(nonatomic) __weak id <LightboxViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didLongPress:(id)arg1;
- (void)didPan:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithContentView:(id)arg1 size:(struct CGSize)arg2;
- (void)configureWithContentView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageCellContentView : BaseView
{
    BaseLabel *_mainLabel;
    BaseLabel *_detailLabel;
}

@property(readonly, nonatomic) BaseLabel *detailLabel; // @synthesize detailLabel=_detailLabel;
@property(readonly, nonatomic) BaseLabel *mainLabel; // @synthesize mainLabel=_mainLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TabBarItem : UITabBarItem
{
}

- (id)initWithTitle:(id)arg1 prerenderedImage:(id)arg2 prerenderedSelectedImage:(id)arg3;

@end

@interface MPMoPubRewardedVideoCustomEvent : MPRewardedVideoCustomEvent <MPInterstitialViewControllerDelegate>
{
    _Bool _adAvailable;
    MPMRAIDInterstitialViewController *_interstitial;
}

@property(nonatomic) _Bool adAvailable; // @synthesize adAvailable=_adAvailable;
@property(retain, nonatomic) MPMRAIDInterstitialViewController *interstitial; // @synthesize interstitial=_interstitial;
- (void).cxx_destruct;
- (id)configuration;
- (id)adUnitId;
- (void)interstitialRewardedVideoEnded;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidReceiveTapEvent:(id)arg1;
- (void)interstitialDidDisappear:(id)arg1;
- (void)interstitialWillDisappear:(id)arg1;
- (void)interstitialDidFailToLoadAd:(id)arg1;
- (void)interstitialWillAppear:(id)arg1;
- (void)interstitialDidAppear:(id)arg1;
- (void)interstitialDidLoadAd:(id)arg1;
- (void)presentRewardedVideoFromViewController:(id)arg1;
- (void)handleCustomEventInvalidated;
- (void)handleAdPlayedForCustomEventNetwork;
- (_Bool)hasAdAvailable;
- (void)requestRewardedVideoWithCustomEventInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <MPPrivateRewardedVideoCustomEventDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MOPUBNativeVideoAdAdapter : NSObject <MPAdDestinationDisplayAgentDelegate, MPStaticNativeAdImpressionTimerDelegate, MPNativeAdAdapter>
{
    NSDictionary *_properties;
    NSURL *_defaultActionURL;
    id <MPNativeAdAdapterDelegate> _delegate;
    NSArray *_impressionTrackerURLs;
    NSArray *_clickTrackerURLs;
    MPAdConfiguration *_adConfiguration;
    MPStaticNativeAdImpressionTimer *_staticImpressionTimer;
    MPAdDestinationDisplayAgent *_destinationDisplayAgent;
}

@property(readonly, nonatomic) MPAdDestinationDisplayAgent *destinationDisplayAgent; // @synthesize destinationDisplayAgent=_destinationDisplayAgent;
@property(retain, nonatomic) MPStaticNativeAdImpressionTimer *staticImpressionTimer; // @synthesize staticImpressionTimer=_staticImpressionTimer;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(readonly, nonatomic) NSArray *clickTrackerURLs; // @synthesize clickTrackerURLs=_clickTrackerURLs;
@property(readonly, nonatomic) NSArray *impressionTrackerURLs; // @synthesize impressionTrackerURLs=_impressionTrackerURLs;
@property(nonatomic) __weak id <MPNativeAdAdapterDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSURL *defaultActionURL; // @synthesize defaultActionURL=_defaultActionURL;
@property(readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (id)viewControllerForPresentingModalView;
- (void)trackImpression;
- (void)handleVideoHasProgressedToTime:(double)arg1;
- (void)handleVideoViewClick;
- (void)handleVideoViewImpression;
- (void)displayContentForDAAIconTap;
- (void)displayContentForURL:(id)arg1 rootViewController:(id)arg2;
- (void)willAttachToView:(id)arg1;
- (void)removeStaticImpressionTimer;
- (void)dealloc;
- (id)initWithAdProperties:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPReachability : NSObject
{
    _Bool _alwaysReturnLocalWiFiStatus;
    struct __SCNetworkReachability *_reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (_Bool)hasCellular;
- (_Bool)hasWifi;
- (long long)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (long long)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface PagedTabViewController : BaseViewController <UIPageViewControllerDelegate, UIPageViewControllerDataSource, FloatingHeaderCallbackProtocol, PageSegmentedControlDelegate>
{
    PageSegmentedControl *_segmentedControl;
    NSArray *_controllers;
    UIPageViewController *_pageViewController;
    FloatingHeaderManager *_floatingHeaderManager;
    BaseView *_statusBarOverlay;
}

@property(retain, nonatomic) BaseView *statusBarOverlay; // @synthesize statusBarOverlay=_statusBarOverlay;
@property(retain, nonatomic) FloatingHeaderManager *floatingHeaderManager; // @synthesize floatingHeaderManager=_floatingHeaderManager;
@property(retain, nonatomic) UIPageViewController *pageViewController; // @synthesize pageViewController=_pageViewController;
@property(retain, nonatomic) NSArray *controllers; // @synthesize controllers=_controllers;
@property(retain, nonatomic) PageSegmentedControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (id)currentOnScreenViewController;
- (void)floatingHeaderShouldMove:(id)arg1;
- (void)pageSegmentedControl:(id)arg1 didSelectItem:(id)arg2 atIndex:(long long)arg3 previousIndex:(long long)arg4;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (void)removeControllerAtIndex:(long long)arg1;
- (void)insertController:(id)arg1 atIndex:(long long)arg2;
- (void)addControllers:(id)arg1;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (id)viewControllerForIndex:(long long)arg1;
- (long long)indexForViewController:(id)arg1;
- (id)itemsForControllers:(id)arg1;
- (id)itemForController:(id)arg1;
- (void)configureWithControllers:(id)arg1;
- (long long)preferredStatusBarStyle;
- (struct UIEdgeInsets)preferredContentInset;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (id)majorContentView;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentComposeKeyboardAccessoryView : LinkKeyboardAccessoryView
{
    id <CommentComposeKeyboardAccessoryViewDelegate> _delegate;
    BaseButton *_photosButton;
    BaseButton *_cameraButton;
}

@property(retain, nonatomic) BaseButton *cameraButton; // @synthesize cameraButton=_cameraButton;
@property(retain, nonatomic) BaseButton *photosButton; // @synthesize photosButton=_photosButton;
@property(nonatomic) __weak id <CommentComposeKeyboardAccessoryViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)cameraButtonTouched:(id)arg1;
- (void)photosButtonTouched:(id)arg1;
- (void)linkButtonTouched:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPAPIEndpoints : NSObject
{
}

+ (id)baseURLStringWithPath:(id)arg1 testing:(_Bool)arg2;
+ (id)baseURLScheme;
+ (id)baseURL;
+ (void)setUsesHTTPS:(_Bool)arg1;

@end

@interface ImagePostViewController : PostViewController <UITextViewDelegate, BaseTextViewDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate, AttributedLabelRegularDelegate>
{
    BaseTextView *_titleView;
    UIImage *_currentImage;
    BaseScrollView *_wrapperScrollView;
    BaseView *_actionView;
    BottomLabelButton *_cameraButton;
    BottomLabelButton *_photosButton;
    BaseTextView *_titleCharacterLimitIndicatorView;
    UIImageView *_imagePreview;
    BaseButton *_removeImageButton;
    AttributedLabelRegular *_termsLabel;
}

@property(retain, nonatomic) AttributedLabelRegular *termsLabel; // @synthesize termsLabel=_termsLabel;
@property(retain, nonatomic) BaseButton *removeImageButton; // @synthesize removeImageButton=_removeImageButton;
@property(retain, nonatomic) UIImageView *imagePreview; // @synthesize imagePreview=_imagePreview;
@property(retain, nonatomic) BaseTextView *titleCharacterLimitIndicatorView; // @synthesize titleCharacterLimitIndicatorView=_titleCharacterLimitIndicatorView;
@property(retain, nonatomic) BottomLabelButton *photosButton; // @synthesize photosButton=_photosButton;
@property(retain, nonatomic) BottomLabelButton *cameraButton; // @synthesize cameraButton=_cameraButton;
@property(retain, nonatomic) BaseView *actionView; // @synthesize actionView=_actionView;
@property(retain, nonatomic) BaseScrollView *wrapperScrollView; // @synthesize wrapperScrollView=_wrapperScrollView;
@property(retain, nonatomic) UIImage *currentImage; // @synthesize currentImage=_currentImage;
@property(retain, nonatomic) BaseTextView *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)didTapPostButton:(id)arg1;
- (void)presentImagePickerForSourceType:(long long)arg1;
- (void)didTapPhotosButton;
- (void)didTapCameraButton;
- (void)showPermissionModalWithCompletion:(CDUnknownBlockType)arg1;
- (void)didTapRemoveImage;
- (_Bool)resignFirstResponder;
- (void)layoutWrapperScrollViewContents;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HomeViewController : PagedTabViewController <ActionSheetViewControllerDelegate, UIViewControllerTransitioningDelegate, OnboardingViewControllerDelegate, ListingNetworkSourceDelegate, ThemeUpdateCallbackProtocol>
{
    MainFeedViewController *_frontPageFeedViewController;
    PopularFeedViewController *_allFeedViewController;
    FavouriteFeedViewController *_pinnedFeedViewController;
    OnboardingViewController *_onboardingController;
    RecommendationsNetworkSource *_recommendationSource;
    NSArray *_multis;
}

@property(copy, nonatomic) NSArray *multis; // @synthesize multis=_multis;
@property(retain, nonatomic) RecommendationsNetworkSource *recommendationSource; // @synthesize recommendationSource=_recommendationSource;
@property(retain, nonatomic) OnboardingViewController *onboardingController; // @synthesize onboardingController=_onboardingController;
@property(retain, nonatomic) FavouriteFeedViewController *pinnedFeedViewController; // @synthesize pinnedFeedViewController=_pinnedFeedViewController;
@property(retain, nonatomic) PopularFeedViewController *allFeedViewController; // @synthesize allFeedViewController=_allFeedViewController;
@property(retain, nonatomic) MainFeedViewController *frontPageFeedViewController; // @synthesize frontPageFeedViewController=_frontPageFeedViewController;
- (void).cxx_destruct;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(id)arg1;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (id)extraFeeds;
- (void)floatingHeaderShouldMove:(id)arg1;
- (_Bool)shouldScrollContentViewToTop;
- (void)insertPinnedFeedController;
- (void)removePinnedController;
- (void)setupMainFeedViewAnimated:(_Bool)arg1;
- (void)onboardingViewControllerDidFinish:(id)arg1;
- (_Bool)shouldShowOnboarding;
- (_Bool)prefersNavigationBarHidden;
- (void)viewDidLoad;
- (void)updateLogoForSegment:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)themeDidChange:(id)arg1;
- (void)didChangeFavorites:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LiveHandler : NSObject <SRWebSocketDelegate>
{
    _Bool _shouldReconnect;
    id <LiveHandlerDelegate> _delegate;
    LiveEvent *_liveEvent;
    SRWebSocket *_socket;
    double _reconnectTime;
    NSURL *_websocketUrl;
}

@property(retain, nonatomic) NSURL *websocketUrl; // @synthesize websocketUrl=_websocketUrl;
@property(nonatomic) double reconnectTime; // @synthesize reconnectTime=_reconnectTime;
@property(retain, nonatomic) SRWebSocket *socket; // @synthesize socket=_socket;
@property(retain, nonatomic) LiveEvent *liveEvent; // @synthesize liveEvent=_liveEvent;
@property(nonatomic) _Bool shouldReconnect; // @synthesize shouldReconnect=_shouldReconnect;
@property(nonatomic) __weak id <LiveHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)attemptToReconnect;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (void)configureWithLiveEvent:(id)arg1;
- (void)configureWithWebsocketUrl:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseNavigationViewController : UINavigationController <NavigationProtocol>
{
}

- (void)popViewController:(id)arg1 animated:(_Bool)arg2;
- (void)universalPushViewController:(id)arg1 animated:(_Bool)arg2 fromViewController:(id)arg3;
- (void)setDelegate:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (id)initWithRootViewController:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) UIViewController *topViewController;

@end

@interface MOPUBPlayerManager : NSObject
{
    MOPUBPlayerViewController *_currentPlayerViewController;
}

+ (id)sharedInstance;
@property(retain, nonatomic) MOPUBPlayerViewController *currentPlayerViewController; // @synthesize currentPlayerViewController=_currentPlayerViewController;
- (void).cxx_destruct;
- (id)playerViewControllerWithVideoConfig:(id)arg1 nativeVideoAdConfig:(id)arg2 logEventProperties:(id)arg3;
- (void)disposePlayerViewController;

@end

@interface AccountSettingsViewController : BaseTableViewController <MFMailComposeViewControllerDelegate, ActionSheetViewControllerDelegate, AttributedLabelRegularDelegate, LabeledStepSliderDelegate, UITextFieldDelegate>
{
    BaseView *_footerView;
    AttributedLabelRegular *_footerLabel;
    ActionSheetViewController *_textSizeActionSheet;
    NSString *_selectedTextSizeOption;
}

@property(copy, nonatomic) NSString *selectedTextSizeOption; // @synthesize selectedTextSizeOption=_selectedTextSizeOption;
@property(retain, nonatomic) ActionSheetViewController *textSizeActionSheet; // @synthesize textSizeActionSheet=_textSizeActionSheet;
@property(retain, nonatomic) AttributedLabelRegular *footerLabel; // @synthesize footerLabel=_footerLabel;
@property(retain, nonatomic) BaseView *footerView; // @synthesize footerView=_footerView;
- (void).cxx_destruct;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)logControlTapWithName:(id)arg1;
- (id)textDescriptionOfCurrentWifiMode;
- (void)didToggleAutomaticNightMode:(id)arg1;
- (void)updateFontSizeFromFontSizeString:(id)arg1;
- (long long)deltaForFontSizeString:(id)arg1;
- (unsigned long long)currentStepForDelta:(long long)arg1;
- (id)mappedTextSizeDescriptionFromCurrentFontSizeDelta;
- (void)labeledStepSlider:(id)arg1 didChangeStepItem:(id)arg2;
- (id)fontSliderItems;
- (void)performUpdatePreferencesRequest:(id)arg1 oldValues:(id)arg2;
- (void)updateDefaultCommentSortType:(unsigned long long)arg1;
- (void)updateThumbnailPreference:(unsigned long long)arg1;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)actionSheetViewController:(id)arg1 didGetDismissedFromOutside:(_Bool)arg2;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)dropdownViewWithLabel:(id)arg1;
- (id)dequeueSettingsCellForTableView:(id)arg1 indexPath:(id)arg2 leadingImage:(id)arg3 text:(id)arg4;
- (void)didToggleExperiment:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewDidLoad;
- (id)initWithStyle:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommunityModeratingViewDataSource : CommunitySubscriptionViewDataSource
{
}

- (id)headerString;
- (id)indexes;
- (id)sortedAndFilteredSubscriptions:(id)arg1;
- (id)currentCachedSubscriptions;
- (void)saveCurrentSubscriptionsToCache;

@end

@interface SignupFooterView : BaseView
{
    BaseButton *_signupButton;
    AttributedLabelRegular *_legalTextLabel;
}

@property(retain, nonatomic) AttributedLabelRegular *legalTextLabel; // @synthesize legalTextLabel=_legalTextLabel;
@property(retain, nonatomic) BaseButton *signupButton; // @synthesize signupButton=_signupButton;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LoaderSnooView : BaseView
{
    _Bool _failed;
    _Bool _isLoadingGifContent;
    double _progressPercentage;
    UIColor *_spinnerColor;
    BaseImageView *_snooImageView;
    CABasicAnimation *_fadeInOutAnimation;
}

@property(retain, nonatomic) CABasicAnimation *fadeInOutAnimation; // @synthesize fadeInOutAnimation=_fadeInOutAnimation;
@property(retain, nonatomic) BaseImageView *snooImageView; // @synthesize snooImageView=_snooImageView;
@property(nonatomic) _Bool isLoadingGifContent; // @synthesize isLoadingGifContent=_isLoadingGifContent;
@property(retain, nonatomic) UIColor *spinnerColor; // @synthesize spinnerColor=_spinnerColor;
@property(nonatomic) _Bool failed; // @synthesize failed=_failed;
@property(nonatomic) double progressPercentage; // @synthesize progressPercentage=_progressPercentage;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPAdAlertGestureRecognizer : UIGestureRecognizer
{
    _Bool _thresholdReached;
    int _currentAlertGestureState;
    long long _curNumZigZags;
    long long _numZigZagsForRecognition;
    double _minTrackedDistanceForZigZag;
    struct CGPoint _inflectionPoint;
    struct CGPoint _startingPoint;
}

@property(nonatomic) struct CGPoint startingPoint; // @synthesize startingPoint=_startingPoint;
@property(nonatomic) double minTrackedDistanceForZigZag; // @synthesize minTrackedDistanceForZigZag=_minTrackedDistanceForZigZag;
@property(nonatomic) long long numZigZagsForRecognition; // @synthesize numZigZagsForRecognition=_numZigZagsForRecognition;
@property(nonatomic) long long curNumZigZags; // @synthesize curNumZigZags=_curNumZigZags;
@property(nonatomic) _Bool thresholdReached; // @synthesize thresholdReached=_thresholdReached;
@property(nonatomic) struct CGPoint inflectionPoint; // @synthesize inflectionPoint=_inflectionPoint;
@property(nonatomic) int currentAlertGestureState; // @synthesize currentAlertGestureState=_currentAlertGestureState;
- (_Bool)touchIsWithinBoundsForTouches:(id)arg1;
- (_Bool)validYAxisMovementForTouches:(id)arg1;
- (void)updateAlertGestureStateWithTouches:(id)arg1;
- (void)handleZagLeftGestureStateWithTouches:(id)arg1;
- (void)handleZigRightGestureStateWithTouches:(id)arg1;
- (void)resetToInitialState;
- (void)reset;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)commonInit;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)init;

@end

@interface NetworkRequestManager : NSObject
{
}

+ (void)displayErrorMessageForRedditDomainErrors:(id)arg1;
+ (void)startRealRequest:(id)arg1 requestToken:(id)arg2 successHandler:(CDUnknownBlockType)arg3 failureHandler:(CDUnknownBlockType)arg4;
+ (void)startRequest:(id)arg1 successHandler:(CDUnknownBlockType)arg2 failureHandler:(CDUnknownBlockType)arg3;
+ (void)resumeQueuedRequestIfAny;
+ (void)clearSessionCookie;
+ (_Bool)isOnWiFi;
+ (id)clientVendorID;
+ (void)setOauthClientID:(id)arg1;
+ (id)oauthClientID;
+ (void)setGatewayEndpoint:(id)arg1;
+ (id)gatewayEndpoint;
+ (void)setBaseEndpoint:(id)arg1;
+ (id)baseEndpoint;
+ (void)initialize;

@end

@interface CommunityPopularViewDataSource : CommunityViewDataSource
{
}

- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)indexes;
- (id)viewControllerForIndexPath:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;

@end

@interface SubredditsNetworkSource : ListingNetworkSource
{
}

- (id)subredditsFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface UserSettingsItem : NSObject
{
    UIImage *_image;
    NSString *_text;
    NSString *_identifier;
}

@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)initWithImage:(id)arg1 text:(id)arg2 identifier:(id)arg3;

@end

@interface MPRewardedVideoCustomEvent : NSObject
{
    id <MPRewardedVideoCustomEventDelegate> _delegate;
}

@property(nonatomic) __weak id <MPRewardedVideoCustomEventDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)handleCustomEventInvalidated;
- (void)handleAdPlayedForCustomEventNetwork;
- (_Bool)enableAutomaticImpressionAndClickTracking;
- (void)presentRewardedVideoFromViewController:(id)arg1;
- (_Bool)hasAdAvailable;
- (void)requestRewardedVideoWithCustomEventInfo:(id)arg1;

@end

@interface MultiSubredditListingViewController : BaseTableViewController <ScrollViewIndexBarDelegate>
{
    Multi *_multi;
    NSArray *_currentSubreddits;
    ScrollViewIndexBar *_indexBar;
}

@property(retain, nonatomic) ScrollViewIndexBar *indexBar; // @synthesize indexBar=_indexBar;
@property(copy, nonatomic) NSArray *currentSubreddits; // @synthesize currentSubreddits=_currentSubreddits;
@property(retain, nonatomic) Multi *multi; // @synthesize multi=_multi;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *indexes;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (struct CGRect)visibleIndexBarFrame;
- (void)scrollViewIndexBar:(id)arg1 didSelectIndex:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)configureWithMulti:(id)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MessageCommandCell : UICollectionViewCell
{
}

@end

@interface ThreadedObjectVisualNode : NSObject
{
    _Bool _isCollapsed;
    _Bool _isLastChildNode;
    _Bool _isTopLevel;
    unsigned long long _type;
    id <ThreadedObjectProtocol> _object;
}

@property(nonatomic) _Bool isTopLevel; // @synthesize isTopLevel=_isTopLevel;
@property(nonatomic) _Bool isLastChildNode; // @synthesize isLastChildNode=_isLastChildNode;
@property(nonatomic) _Bool isCollapsed; // @synthesize isCollapsed=_isCollapsed;
@property(retain, nonatomic) id <ThreadedObjectProtocol> object; // @synthesize object=_object;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)debugDescription;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface MOPUBFullscreenPlayerViewController : UIViewController <MPAdDestinationDisplayAgentDelegate, MOPUBPlayerViewControllerDelegate>
{
    MOPUBPlayerView *_playerView;
    id <MOPUBFullscreenPlayerViewControllerDelegate> _delegate;
    UIButton *_daaButton;
    UIButton *_closeButton;
    UIButton *_ctaButton;
    MOPUBActivityIndicatorView *_stallSpinner;
    UIActivityIndicatorView *_playerNotReadySpinner;
    UIView *_gradientView;
    CAGradientLayer *_gradient;
    MOPUBPlayerViewController *_playerController;
    UIView *_originalParentView;
    MPAdDestinationDisplayAgent *_displayAgent;
    CDUnknownBlockType _dismissBlock;
}

@property(copy, nonatomic) CDUnknownBlockType dismissBlock; // @synthesize dismissBlock=_dismissBlock;
@property(retain, nonatomic) MPAdDestinationDisplayAgent *displayAgent; // @synthesize displayAgent=_displayAgent;
@property(retain, nonatomic) UIView *originalParentView; // @synthesize originalParentView=_originalParentView;
@property(retain, nonatomic) MOPUBPlayerViewController *playerController; // @synthesize playerController=_playerController;
@property(retain, nonatomic) CAGradientLayer *gradient; // @synthesize gradient=_gradient;
@property(retain, nonatomic) UIView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIActivityIndicatorView *playerNotReadySpinner; // @synthesize playerNotReadySpinner=_playerNotReadySpinner;
@property(retain, nonatomic) MOPUBActivityIndicatorView *stallSpinner; // @synthesize stallSpinner=_stallSpinner;
@property(retain, nonatomic) UIButton *ctaButton; // @synthesize ctaButton=_ctaButton;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIButton *daaButton; // @synthesize daaButton=_daaButton;
@property(nonatomic) __weak id <MOPUBFullscreenPlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MOPUBPlayerView *playerView; // @synthesize playerView=_playerView;
- (void).cxx_destruct;
- (_Bool)prefersStatusBarHidden;
- (void)setApplicationStatusBarHidden:(_Bool)arg1;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (id)viewControllerForPresentingModalView;
- (void)playerDidProgressToTime:(double)arg1;
- (void)playerViewController:(id)arg1 didRecoverFromStall:(id)arg2;
- (void)playerViewController:(id)arg1 didStall:(id)arg2;
- (void)playerViewController:(id)arg1 willShowReplayView:(id)arg2;
- (void)playerPlaybackDidStart:(id)arg1;
- (void)daaButtonTapped;
- (void)ctaButtonTapped;
- (void)closeButtonTapped;
- (void)layoutGradientView;
- (void)layoutPlayerNotReadySpinner;
- (void)layoutStallSpinner;
- (void)layoutCtaButton;
- (void)layoutCloseButton;
- (void)layoutDaaButton;
- (void)layoutPlayerView;
- (void)viewWillLayoutSubviews;
- (void)removePlayerNotReadySpinner;
- (void)createPlayerNotReadySpinner;
- (void)hideStallSpinner;
- (void)showStallSpinner;
- (void)createAndAddGradientView;
- (void)viewDidLoad;
- (id)initWithVideoPlayer:(id)arg1 dismissBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFImageDownloaderResponseHandler : NSObject
{
    NSUUID *_uuid;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
}

@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (id)description;
- (id)initWithUUID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

@end

@interface AFImageDownloaderMergedTask : NSObject
{
    NSString *_identifier;
    NSURLSessionDataTask *_task;
    NSMutableArray *_responseHandlers;
}

@property(retain, nonatomic) NSMutableArray *responseHandlers; // @synthesize responseHandlers=_responseHandlers;
@property(retain, nonatomic) NSURLSessionDataTask *task; // @synthesize task=_task;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
- (void)removeResponseHandler:(id)arg1;
- (void)addResponseHandler:(id)arg1;
- (id)initWithIdentifier:(id)arg1 task:(id)arg2;

@end

@interface AFImageDownloadReceipt : NSObject
{
    NSURLSessionDataTask *_task;
    NSUUID *_receiptID;
}

@property(retain, nonatomic) NSUUID *receiptID; // @synthesize receiptID=_receiptID;
@property(retain, nonatomic) NSURLSessionDataTask *task; // @synthesize task=_task;
- (void).cxx_destruct;
- (id)initWithReceiptID:(id)arg1 task:(id)arg2;

@end

@interface AFImageDownloader : NSObject
{
    id <AFImageRequestCache> _imageCache;
    AFHTTPSessionManager *_sessionManager;
    long long _downloadPrioritizaton;
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
    NSObject<OS_dispatch_queue> *_responseQueue;
    long long _maximumActiveDownloads;
    long long _activeRequestCount;
    NSMutableArray *_queuedMergedTasks;
    NSMutableDictionary *_mergedTasks;
}

+ (id)defaultInstance;
+ (id)defaultURLSessionConfiguration;
+ (id)defaultURLCache;
@property(retain, nonatomic) NSMutableDictionary *mergedTasks; // @synthesize mergedTasks=_mergedTasks;
@property(retain, nonatomic) NSMutableArray *queuedMergedTasks; // @synthesize queuedMergedTasks=_queuedMergedTasks;
@property(nonatomic) long long activeRequestCount; // @synthesize activeRequestCount=_activeRequestCount;
@property(nonatomic) long long maximumActiveDownloads; // @synthesize maximumActiveDownloads=_maximumActiveDownloads;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *responseQueue; // @synthesize responseQueue=_responseQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue; // @synthesize synchronizationQueue=_synchronizationQueue;
@property(nonatomic) long long downloadPrioritizaton; // @synthesize downloadPrioritizaton=_downloadPrioritizaton;
@property(retain, nonatomic) AFHTTPSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) id <AFImageRequestCache> imageCache; // @synthesize imageCache=_imageCache;
- (void).cxx_destruct;
- (_Bool)isActiveRequestCountBelowMaximumLimit;
- (id)dequeueMergedTask;
- (void)enqueueMergedTask:(id)arg1;
- (void)startMergedTask:(id)arg1;
- (void)safelyStartNextTaskIfNecessary;
- (void)safelyDecrementActiveTaskCount;
- (id)safelyRemoveMergedTaskWithIdentifier:(id)arg1;
- (void)cancelTaskForImageDownloadReceipt:(id)arg1;
- (id)downloadImageForURLRequest:(id)arg1 downloadProgress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)downloadImageForURLRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)initWithSessionManager:(id)arg1 downloadPrioritization:(long long)arg2 maximumActiveDownloads:(long long)arg3 imageCache:(id)arg4;
- (id)init;

@end

@interface CommentCommandView : VerticalLineView <BaseModelObserver>
{
    _Bool _isTopLevel;
    BaseButton *_moreOptionButton;
    Comment *_comment;
    BaseButton *_overflowButton;
    BaseButton *_replyButton;
    BaseButton *_editButton;
    UILabel *_scoreLabel;
    BaseButton *_upvoteButton;
    BaseButton *_downvoteButton;
    BaseView *_separatorView;
    id <CommentCommandViewDelegate> _delegate;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(nonatomic) _Bool isTopLevel; // @synthesize isTopLevel=_isTopLevel;
@property(nonatomic) __weak id <CommentCommandViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) BaseView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) BaseButton *downvoteButton; // @synthesize downvoteButton=_downvoteButton;
@property(retain, nonatomic) BaseButton *upvoteButton; // @synthesize upvoteButton=_upvoteButton;
@property(retain, nonatomic) UILabel *scoreLabel; // @synthesize scoreLabel=_scoreLabel;
@property(retain, nonatomic) BaseButton *editButton; // @synthesize editButton=_editButton;
@property(retain, nonatomic) BaseButton *replyButton; // @synthesize replyButton=_replyButton;
@property(retain, nonatomic) BaseButton *overflowButton; // @synthesize overflowButton=_overflowButton;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
@property(readonly, nonatomic) BaseButton *moreOptionButton; // @synthesize moreOptionButton=_moreOptionButton;
- (void).cxx_destruct;
- (void)didTapReply;
- (void)didTapEdit;
- (void)didTapOverflow;
- (void)didTapDownvote;
- (void)didTapUpvote;
- (void)configureReplyAndEditButtons;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)updateContentViewsForData:(id)arg1;
- (void)updateLastVerticalLineColorForVoteStatus;
- (void)updateScoreLabelColor;
- (void)updateContentViews;
- (void)updateContentViewsAnimated:(_Bool)arg1;
- (void)layoutSubviews;
- (_Bool)isCommentReadOnly;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CarouselCollectionViewCell : UICollectionViewCell
{
    CarouselView *_carouselView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) CarouselView *carouselView; // @synthesize carouselView=_carouselView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SubredditStore : BaseStore
{
}

- (void)persistSubreddit:(id)arg1;
- (void)fetchSubredditObjectsFromDisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getSubredditObjectFromPK:(id)arg1;
- (id)createOrGetSubredditObjectFromPK:(id)arg1;

@end

@interface CustomPopTransition : NSObject <UIViewControllerAnimatedTransitioning>
{
}

- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPServerAdPositioning : MPAdPositioning
{
}

+ (id)positioning;

@end

@interface EmptyDogeView : BaseView
{
    BaseImageView *_imageView;
    BaseLabel *_label;
}

@property(readonly, nonatomic) BaseLabel *label; // @synthesize label=_label;
@property(readonly, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface LinkPostViewController : PostViewController <UITextViewDelegate, BaseTextViewDelegate>
{
    BaseScrollView *_wrapperScrollView;
    BaseTextView *_linkView;
    BaseTextView *_titleView;
    BaseTextView *_titleCharacterLimitIndicatorView;
    NSString *_prefilledLinkUrl;
    NSString *_prefilledTitle;
}

@property(copy, nonatomic) NSString *prefilledTitle; // @synthesize prefilledTitle=_prefilledTitle;
@property(copy, nonatomic) NSString *prefilledLinkUrl; // @synthesize prefilledLinkUrl=_prefilledLinkUrl;
@property(retain, nonatomic) BaseTextView *titleCharacterLimitIndicatorView; // @synthesize titleCharacterLimitIndicatorView=_titleCharacterLimitIndicatorView;
@property(retain, nonatomic) BaseTextView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) BaseTextView *linkView; // @synthesize linkView=_linkView;
@property(retain, nonatomic) BaseScrollView *wrapperScrollView; // @synthesize wrapperScrollView=_wrapperScrollView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (_Bool)resignFirstResponder;
- (void)didTapPostButton:(id)arg1;
- (void)prefillWithTitle:(id)arg1 linkURL:(id)arg2;
- (void)layoutTextFieldsInScroller;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativeAdRendererConfiguration : NSObject
{
    id <MPNativeAdRendererSettings> _rendererSettings;
    Class _rendererClass;
    NSArray *_supportedCustomEvents;
}

@property(retain, nonatomic) NSArray *supportedCustomEvents; // @synthesize supportedCustomEvents=_supportedCustomEvents;
@property(nonatomic) Class rendererClass; // @synthesize rendererClass=_rendererClass;
@property(retain, nonatomic) id <MPNativeAdRendererSettings> rendererSettings; // @synthesize rendererSettings=_rendererSettings;
- (void).cxx_destruct;

@end

@interface MPLogEventRecorder : NSObject <NSURLConnectionDataDelegate>
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableArray *_events;
    NSCache *_requestIDLoggingCache;
    MPLogEventCommunicator *_communicator;
    MPTimer *_sendTimer;
}

@property(retain, nonatomic) MPTimer *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(retain, nonatomic) MPLogEventCommunicator *communicator; // @synthesize communicator=_communicator;
@property(retain, nonatomic) NSCache *requestIDLoggingCache; // @synthesize requestIDLoggingCache=_requestIDLoggingCache;
@property(retain, nonatomic) NSMutableArray *events; // @synthesize events=_events;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void).cxx_destruct;
- (_Bool)shouldSampleForRate:(double)arg1 diceRoll:(unsigned long long)arg2;
- (_Bool)sample;
- (_Bool)sampleWithLogEvent:(id)arg1;
- (_Bool)overQueueLimit;
- (void)sendEvents;
- (void)addEvent:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimatedSpinner : UIImageView <UIGestureRecognizerDelegate>
{
    UITapGestureRecognizer *_tapGestureRecognizer;
    double _progressPercentage;
}

@property(nonatomic) double progressPercentage; // @synthesize progressPercentage=_progressPercentage;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
- (void).cxx_destruct;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)showFailureState;
- (void)stopSpinning;
- (void)startSpinning;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPRewardedVideoAdManager : NSObject <MPAdServerCommunicatorDelegate, MPRewardedVideoAdapterDelegate>
{
    _Bool _loading;
    _Bool _playedAd;
    _Bool _ready;
    id <MPRewardedVideoAdManagerDelegate> _delegate;
    NSString *_adUnitID;
    NSArray *_mediationSettings;
    NSString *_customerId;
    MPRewardedVideoAdapter *_adapter;
    MPAdServerCommunicator *_communicator;
    MPAdConfiguration *_configuration;
}

@property(nonatomic) _Bool ready; // @synthesize ready=_ready;
@property(nonatomic) _Bool playedAd; // @synthesize playedAd=_playedAd;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) MPAdServerCommunicator *communicator; // @synthesize communicator=_communicator;
@property(retain, nonatomic) MPRewardedVideoAdapter *adapter; // @synthesize adapter=_adapter;
@property(copy, nonatomic) NSString *customerId; // @synthesize customerId=_customerId;
@property(retain, nonatomic) NSArray *mediationSettings; // @synthesize mediationSettings=_mediationSettings;
@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <MPRewardedVideoAdManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)rewardedVideoCustomerId;
- (id)rewardedVideoAdUnitId;
- (void)rewardedVideoShouldRewardUserForAdapter:(id)arg1 reward:(id)arg2;
- (void)rewardedVideoWillLeaveApplicationForAdapter:(id)arg1;
- (void)rewardedVideoDidReceiveTapEventForAdapter:(id)arg1;
- (void)rewardedVideoDidDisappearForAdapter:(id)arg1;
- (void)rewardedVideoWillDisappearForAdapter:(id)arg1;
- (void)rewardedVideoDidAppearForAdapter:(id)arg1;
- (void)rewardedVideoWillAppearForAdapter:(id)arg1;
- (void)rewardedVideoDidFailToPlayForAdapter:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidExpireForAdapter:(id)arg1;
- (void)rewardedVideoDidFailToLoadForAdapter:(id)arg1 error:(id)arg2;
- (void)rewardedVideoDidLoadForAdapter:(id)arg1;
- (id)instanceMediationSettingsForClass:(Class)arg1;
- (void)communicatorDidFailWithError:(id)arg1;
- (void)communicatorDidReceiveAdConfiguration:(id)arg1;
- (void)loadAdWithURL:(id)arg1;
- (void)handleAdPlayedForCustomEventNetwork;
- (void)presentRewardedVideoAdFromViewController:(id)arg1;
- (void)loadRewardedVideoAdWithKeywords:(id)arg1 location:(id)arg2 customerId:(id)arg3;
- (_Bool)hasAdAvailable;
- (Class)customEventClass;
- (void)dealloc;
- (id)initWithAdUnitID:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSKeychainQuery : NSObject
{
    NSString *_account;
    NSString *_service;
    NSString *_label;
    NSData *_passwordData;
    NSString *_accessGroup;
    unsigned long long _synchronizationMode;
}

+ (id)errorWithCode:(int)arg1;
+ (_Bool)isSynchronizationAvailable;
@property(nonatomic) unsigned long long synchronizationMode; // @synthesize synchronizationMode=_synchronizationMode;
@property(copy, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
@property(copy, nonatomic) NSData *passwordData; // @synthesize passwordData=_passwordData;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(copy, nonatomic) NSString *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (id)query;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) id <NSCoding> passwordObject;
- (_Bool)fetch:(id *)arg1;
- (id)fetchAll:(id *)arg1;
- (_Bool)deleteItem:(id *)arg1;
- (_Bool)save:(id *)arg1;

@end

@interface ShareTrackingTools : NSObject
{
}

+ (id)URLByAppendingShareTrackingParameters:(id)arg1;

@end

@interface FeedPostTextViewCompact : FeedPostTextView
{
}

+ (id)textOfDisplayedContentForPost:(id)arg1 delegate:(id)arg2;
+ (struct UIEdgeInsets)textViewContainerInset;
+ (struct UIEdgeInsets)thumbnailPadding;
+ (struct CGSize)thumbnailSizeWithPadding;
+ (_Bool)showThumbnailForPost:(id)arg1 delegate:(id)arg2;
+ (_Bool)showThumbailLinkTypeIconForPost:(id)arg1;
+ (_Bool)showThumbnailUrlLabelForPost:(id)arg1;
+ (_Bool)smallThumbnailImageForPost:(id)arg1;
+ (double)bottomTextPadding;
+ (double)topTextPaddingWithDelegate:(id)arg1;
+ (id)preferredFontWithDelegate:(id)arg1;

@end

@interface FeedSpinnerBottonSpinnerCell : UICollectionViewCell
{
    RefreshControl *_refreshControl;
}

@property(retain, nonatomic) RefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)configureCellWithData:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LiveNetworkSource : ListingNetworkSource
{
    id <LiveNetworkSourceDelegate> _liveNetworkSourceDelegate;
}

@property(nonatomic) __weak id <LiveNetworkSourceDelegate> liveNetworkSourceDelegate; // @synthesize liveNetworkSourceDelegate=_liveNetworkSourceDelegate;
- (void).cxx_destruct;
- (id)liveUpdatesFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;

@end

@interface Message : NSObject <NSSecureCoding, ThreadedObjectProtocol>
{
    _Bool _isLoadingMoreNode;
    _Bool _unread;
    _Bool _isCollapsed;
    NSString *_pk;
    NSString *_author;
    NSString *_destination;
    NSString *_body;
    NSAttributedString *_bodyAttributed;
    NSString *_subject;
    NSString *_subreddit;
    NSDate *_createdAt;
    unsigned long long _visualLevel;
    NSArray *_visualReplies;
    NSArray *_replies;
    unsigned long long _level;
    NSDictionary *_debugData;
}

+ (_Bool)supportsSecureCoding;
+ (id)messageFromData:(id)arg1;
@property(retain, nonatomic) NSDictionary *debugData; // @synthesize debugData=_debugData;
@property(nonatomic) unsigned long long level; // @synthesize level=_level;
@property(copy, nonatomic) NSArray *replies; // @synthesize replies=_replies;
@property(copy, nonatomic) NSArray *visualReplies; // @synthesize visualReplies=_visualReplies;
@property(nonatomic) unsigned long long visualLevel; // @synthesize visualLevel=_visualLevel;
@property(nonatomic) _Bool isCollapsed; // @synthesize isCollapsed=_isCollapsed;
@property(copy, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *subreddit; // @synthesize subreddit=_subreddit;
@property(copy, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(copy, nonatomic) NSAttributedString *bodyAttributed; // @synthesize bodyAttributed=_bodyAttributed;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *destination; // @synthesize destination=_destination;
@property(copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(copy, nonatomic) NSString *pk; // @synthesize pk=_pk;
@property(nonatomic) _Bool unread; // @synthesize unread=_unread;
@property(nonatomic) _Bool isLoadingMoreNode; // @synthesize isLoadingMoreNode=_isLoadingMoreNode;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool hasImages;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy, nonatomic) NSString *pkWithoutPrefix;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface ActionSheetFooter : BaseControl
{
    ImageLabelContentView *_contentView;
    UILabel *_textLabel;
}

@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(retain, nonatomic) ImageLabelContentView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface PostActionSheetViewController : ActionSheetViewController <ActionSheetViewControllerDelegate, MFMailComposeViewControllerDelegate, ReportViewControllerDelegate>
{
    id <ActionSheetViewControllerDelegate> _postActionDelegate;
    Post *_post;
    NSArray *_customItems;
}

@property(copy, nonatomic) NSArray *customItems; // @synthesize customItems=_customItems;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak id <ActionSheetViewControllerDelegate> postActionDelegate; // @synthesize postActionDelegate=_postActionDelegate;
- (void).cxx_destruct;
- (void)logAnalyticsControlName:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)didTapCloseReport:(id)arg1;
- (void)gildPost:(id)arg1;
- (void)performSavePost:(id)arg1;
- (void)performUnsavePost:(id)arg1;
- (void)performUnhidePost:(id)arg1;
- (void)performHidePost:(id)arg1;
- (void)removeDistinguishPost:(id)arg1;
- (void)performDistinguishPost:(id)arg1 forDistinguishType:(id)arg2;
- (void)unmarkPostNSFW:(id)arg1;
- (void)markPostNSFW:(id)arg1;
- (void)unmarkPostSpoiler:(id)arg1;
- (void)markPostSpoiler:(id)arg1;
- (void)editPost:(id)arg1;
- (void)deletePost:(id)arg1;
- (void)reportSponsoredPost:(id)arg1;
- (void)reportPost:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (id)initWithPost:(id)arg1 customActions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LegacyWebViewController : BaseWebViewController <UIWebViewDelegate>
{
    UIWebView *_webView;
    NSURLRequest *_initialRequest;
}

@property(copy, nonatomic) NSURLRequest *initialRequest; // @synthesize initialRequest=_initialRequest;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)webViewDidStartLoad:(id)arg1;
- (void)refresh;
- (void)goForward;
- (void)goBack;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)loadHTMLString:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)webPageTitle;
- (id)originalRequestURL;
- (id)currentURL;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNetworkManager : NSObject
{
    NSThread *_networkThread;
    NSOperationQueue *_networkTransferQueue;
}

+ (id)sharedNetworkManager;
@property(retain) NSOperationQueue *networkTransferQueue; // @synthesize networkTransferQueue=_networkTransferQueue;
@property(retain) NSThread *networkThread; // @synthesize networkThread=_networkThread;
- (void).cxx_destruct;
@property(readonly) unsigned long long networkTransferOperationCount;
- (void)cancelOperation:(id)arg1;
- (void)addNetworkTransferOperation:(id)arg1;
- (void)networkThreadMain;
- (void)startNetworkThread;
- (id)init;

@end

@interface FeedPostCollectionViewCellCompact : UICollectionViewCell
{
    FeedPostViewCompact *_feedPostView;
}

@property(retain, nonatomic) FeedPostViewCompact *feedPostView; // @synthesize feedPostView=_feedPostView;
- (void).cxx_destruct;
- (void)didEndDisplayingCell;
- (void)didBecomeFullyVisible;
- (void)willBeginDisplayingCell;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BaseTableView : UITableView <ThemeUpdateCallbackProtocol>
{
    _Bool _disableObservingThemeUpdate;
    double _maxScrollOffset;
}

@property(nonatomic) double maxScrollOffset; // @synthesize maxScrollOffset=_maxScrollOffset;
@property(nonatomic) _Bool disableObservingThemeUpdate; // @synthesize disableObservingThemeUpdate=_disableObservingThemeUpdate;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)setSeparatorInset:(struct UIEdgeInsets)arg1;
- (void)setSeparatorColor:(id)arg1;
- (void)themeDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPRetryingHTTPOperation : MPQRunLoopOperation <NSURLConnectionDataDelegate>
{
    NSURLRequest *_request;
    NSHTTPURLResponse *_lastResponse;
    NSMutableData *_lastReceivedData;
    NSURLConnection *_connection;
    unsigned long long _failedRetryAttempts;
}

@property unsigned long long failedRetryAttempts; // @synthesize failedRetryAttempts=_failedRetryAttempts;
@property(retain) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain) NSMutableData *lastReceivedData; // @synthesize lastReceivedData=_lastReceivedData;
@property(copy) NSHTTPURLResponse *lastResponse; // @synthesize lastResponse=_lastResponse;
@property(copy) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)retry;
- (double)retryDelayForFailedAttempts:(unsigned long long)arg1;
- (_Bool)shouldRetryForResponse:(id)arg1;
- (void)operationWillFinish;
- (void)operationDidStart;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseAlertView : UIAlertView
{
    CDUnknownBlockType _cancelHandler;
    CDUnknownBlockType _confirmHandler;
}

@property(copy, nonatomic) CDUnknownBlockType confirmHandler; // @synthesize confirmHandler=_confirmHandler;
@property(copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
- (void).cxx_destruct;

@end

@interface AlertPresenter : NSObject <UIAlertViewDelegate>
{
}

+ (void)presentAlertViewWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 confirmButtonTitle:(id)arg4 cancelHandler:(CDUnknownBlockType)arg5 confirmHandler:(CDUnknownBlockType)arg6;
+ (id)helperInstance;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SearchBarTransition : NSObject <UINavigationControllerDelegate, UIViewControllerAnimatedTransitioning>
{
}

- (void)animateTransition:(id)arg1;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EditPostViewController : BaseViewController
{
    Post *_post;
    EditPostView *_editPostView;
}

@property(retain, nonatomic) EditPostView *editPostView; // @synthesize editPostView=_editPostView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
- (void).cxx_destruct;
- (void)didTapDoneButton;
- (void)didTapClose;
- (void)viewDidLoad;
- (id)initWithPost:(id)arg1;

@end

@interface MPVASTLinearAd : MPVASTModel
{
    NSURL *_clickThroughURL;
    NSArray *_clickTrackingURLs;
    NSArray *_customClickURLs;
    double _duration;
    NSArray *_industryIcons;
    NSArray *_mediaFiles;
    MPVASTDurationOffset *_skipOffset;
    NSDictionary *_trackingEvents;
}

+ (id)modelMap;
@property(retain, nonatomic) NSDictionary *trackingEvents; // @synthesize trackingEvents=_trackingEvents;
@property(readonly, nonatomic) MPVASTDurationOffset *skipOffset; // @synthesize skipOffset=_skipOffset;
@property(readonly, nonatomic) NSArray *mediaFiles; // @synthesize mediaFiles=_mediaFiles;
@property(retain, nonatomic) NSArray *industryIcons; // @synthesize industryIcons=_industryIcons;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSArray *customClickURLs; // @synthesize customClickURLs=_customClickURLs;
@property(retain, nonatomic) NSArray *clickTrackingURLs; // @synthesize clickTrackingURLs=_clickTrackingURLs;
@property(readonly, copy, nonatomic) NSURL *clickThroughURL; // @synthesize clickThroughURL=_clickThroughURL;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface MOPUBAVPlayerView : UIView
{
}

+ (Class)layerClass;
@property(retain, nonatomic) NSString *videoGravity;
@property(retain, nonatomic) AVPlayer *player;

@end

@interface SubredditListManager : NSObject
{
    NSArray *_subredditIDs;
    NSString *_cachePath;
    unsigned long long _maxRecordCount;
}

@property(nonatomic) unsigned long long maxRecordCount; // @synthesize maxRecordCount=_maxRecordCount;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
@property(copy, nonatomic) NSArray *subredditIDs; // @synthesize subredditIDs=_subredditIDs;
- (void).cxx_destruct;
- (void)clearList;
- (void)removeSubredditFromList:(id)arg1;
- (void)addSubredditToList:(id)arg1;
- (id)subredditWithCachedID:(id)arg1;
- (id)mostRecentSubreddit;
- (id)initWithCacheFolderPath:(id)arg1;

@end

@interface BaseView : UIView <ThemeUpdateCallbackProtocol>
{
    _Bool _shouldHighlightBackground;
    CALayer *_topBorder;
    CALayer *_bottomBorder;
    CALayer *_trailingBorder;
    CALayer *_leadingBorder;
    UIColor *_listBackgroundColor;
    struct UIEdgeInsets _borderSizes;
    struct UIEdgeInsets _bottomBorderInsets;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) UIColor *listBackgroundColor; // @synthesize listBackgroundColor=_listBackgroundColor;
@property(nonatomic) _Bool shouldHighlightBackground; // @synthesize shouldHighlightBackground=_shouldHighlightBackground;
@property(retain, nonatomic) CALayer *leadingBorder; // @synthesize leadingBorder=_leadingBorder;
@property(retain, nonatomic) CALayer *trailingBorder; // @synthesize trailingBorder=_trailingBorder;
@property(retain, nonatomic) CALayer *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(retain, nonatomic) CALayer *topBorder; // @synthesize topBorder=_topBorder;
@property(nonatomic) struct UIEdgeInsets bottomBorderInsets; // @synthesize bottomBorderInsets=_bottomBorderInsets;
@property(nonatomic) struct UIEdgeInsets borderSizes; // @synthesize borderSizes=_borderSizes;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)updateContentViewsForData:(id)arg1;
- (void)layoutSubviews;
- (void)setCurrentBackgroundColor:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)themeDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SearchSubredditListingViewController : SubredditListingViewController <SearchPageViewControllerProtocol>
{
    _Bool _isDisplayingRecentSubreddits;
    _Bool _isDisplayingAutocompleteSubreddits;
}

@property(nonatomic) _Bool isDisplayingAutocompleteSubreddits; // @synthesize isDisplayingAutocompleteSubreddits=_isDisplayingAutocompleteSubreddits;
@property(nonatomic) _Bool isDisplayingRecentSubreddits; // @synthesize isDisplayingRecentSubreddits=_isDisplayingRecentSubreddits;
- (void)didTapDelete:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)clearAutocompleteSubredditsFromView;
- (void)clearRecentSubredditsFromView;
- (void)displayRecentSubredditsIfNecessary;
@property(readonly, nonatomic) NSArray *mostRecentSubredditIDs;
- (void)filterSearchResultsMatchingQueryString:(id)arg1;
- (void)beginAutocompleteSearchWithQuery:(id)arg1 sortParam:(id)arg2 timeParam:(id)arg3;
- (void)beginSearchWithQuery:(id)arg1 sortParam:(id)arg2 timeParam:(id)arg3;
- (_Bool)listingNetworkSourceShouldFilterObject:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MultiStore : BaseStore
{
}

- (void)persistMulti:(id)arg1;
- (void)fetchMultiObjectsFromDisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getMultiObjectFromPK:(id)arg1;
- (id)createOrGetMultiObjectFromPK:(id)arg1;

@end

@interface PopupNavigationController : BaseNavigationViewController <PopupViewControllerProtocol>
{
}

@property(readonly, nonatomic) double preferredPopupHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPAdWebViewAgent : NSObject <UIGestureRecognizerDelegate, MPWebViewDelegate, MPAdDestinationDisplayAgentDelegate>
{
    _Bool _shouldHandleRequests;
    _Bool _userInteractedWithWebView;
    MPAdConfiguration *_configuration;
    id <MPAdWebViewAgentDelegate> _delegate;
    MPAdDestinationDisplayAgent *_destinationDisplayAgent;
    MPWebView *_view;
    id <MPAdAlertManagerProtocol> _adAlertManager;
    MPUserInteractionGestureRecognizer *_userInteractionRecognizer;
    struct CGRect _frame;
}

@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(retain, nonatomic) MPUserInteractionGestureRecognizer *userInteractionRecognizer; // @synthesize userInteractionRecognizer=_userInteractionRecognizer;
@property(nonatomic) _Bool userInteractedWithWebView; // @synthesize userInteractedWithWebView=_userInteractedWithWebView;
@property(retain, nonatomic) id <MPAdAlertManagerProtocol> adAlertManager; // @synthesize adAlertManager=_adAlertManager;
@property(retain, nonatomic) MPWebView *view; // @synthesize view=_view;
@property(nonatomic) _Bool shouldHandleRequests; // @synthesize shouldHandleRequests=_shouldHandleRequests;
@property(retain, nonatomic) MPAdDestinationDisplayAgent *destinationDisplayAgent; // @synthesize destinationDisplayAgent=_destinationDisplayAgent;
@property(nonatomic) __weak id <MPAdWebViewAgentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)forceRedraw;
- (void)rotateToOrientation:(long long)arg1;
- (void)initAdAlertManager;
- (void)interceptURL:(id)arg1;
- (_Bool)shouldIntercept:(id)arg1 navigationType:(long long)arg2;
- (void)performActionForMoPubSpecificURL:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)adConfiguration;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (id)viewControllerForPresentingModalView;
- (void)enableRequestHandling;
- (void)disableRequestHandling;
- (void)invokeJavaScriptForEvent:(unsigned long long)arg1;
- (void)loadConfiguration:(id)arg1;
- (void)adAlertManagerDidTriggerAlert:(id)arg1;
- (id)viewControllerForPresentingMailVC;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleInteraction:(id)arg1;
- (void)dealloc;
- (id)initWithAdWebViewFrame:(struct CGRect)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PostSubmissionManager : NSObject <NSCoding>
{
    NSString *_cachePath;
    NSArray *_submittedPostIDs;
}

+ (id)uploadDirectory;
@property(copy, nonatomic) NSArray *submittedPostIDs; // @synthesize submittedPostIDs=_submittedPostIDs;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
- (void).cxx_destruct;
- (void)saveCurrentSubmissionPostIDs;
- (void)removeSubmissionPost:(id)arg1;
- (void)removeSubmissionPostID:(id)arg1;
- (void)addSubmissionPost:(id)arg1;
- (void)removePost:(id)arg1;
- (void)retryPost:(id)arg1;
- (void)handleFailedPost:(id)arg1;
- (void)handleSucceededPost:(id)arg1;
- (void)performSubmissionRequestWithSubmittedPost:(id)arg1;
- (void)submitPost:(id)arg1;
- (void)preparePost:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *succeededImageUploads;
@property(readonly, copy, nonatomic) NSArray *unfinishedPosts;
- (id)submittedPosts;
- (_Bool)isJunkPostAndShouldBeRemoved:(id)arg1;
- (id)initWithCacheFolderPath:(id)arg1;
- (void)migrateForOneTimeForClientsBefore103AtPath:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface AttributedLabelLink : NSObject
{
    NSURL *_URL;
    NSString *_caption;
    struct _NSRange _range;
}

@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(copy, nonatomic) NSString *caption; // @synthesize caption=_caption;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 caption:(id)arg2 range:(struct _NSRange)arg3;
- (id)initWithURL:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface AttributedLabelRegular : BaseLabel <PeekPreviewProtocol>
{
    id <AttributedLabelRegularDelegate> _delegate;
    NSDictionary *_linkAttributes;
    NSDictionary *_activeLinkAttributes;
    NSArray *_links;
    AttributedLabelLink *_activeLink;
    NSLayoutManager *_layoutManager;
    NSTextContainer *_textContainer;
    NSTextStorage *_textStorage;
    NSMapTable *_linkRectCache;
    NSArray *_attributes;
    UIColor *_mainColor;
    UIFont *_mainFont;
}

@property(copy, nonatomic) UIFont *mainFont; // @synthesize mainFont=_mainFont;
@property(retain, nonatomic) UIColor *mainColor; // @synthesize mainColor=_mainColor;
@property(retain, nonatomic) NSArray *attributes; // @synthesize attributes=_attributes;
@property(retain, nonatomic) NSMapTable *linkRectCache; // @synthesize linkRectCache=_linkRectCache;
@property(retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(retain, nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain, nonatomic) NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(retain, nonatomic) AttributedLabelLink *activeLink; // @synthesize activeLink=_activeLink;
@property(copy, nonatomic) NSArray *links; // @synthesize links=_links;
@property(retain, nonatomic) NSDictionary *activeLinkAttributes; // @synthesize activeLinkAttributes=_activeLinkAttributes;
@property(retain, nonatomic) NSDictionary *linkAttributes; // @synthesize linkAttributes=_linkAttributes;
@property(nonatomic) __weak id <AttributedLabelRegularDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (struct CGRect)peekPreviewSourceRectWhenTouchedAtLocation:(struct CGPoint)arg1;
- (id)peekPreviewURLAtTouchLocation:(struct CGPoint)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)resetFrameSetter;
- (id)textColor;
- (void)setText:(id)arg1;
- (void)setTextColor:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (id)extractAttributesFromString:(id)arg1;
- (id)extractLinksFromString:(id)arg1;
- (void)replaceLinkAttributes:(id)arg1 range:(struct _NSRange)arg2 string:(id)arg3;
- (id)attributedStringWithAttributesApplied:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)updateInternalAttributedText:(id)arg1;
- (void)configureWithText:(id)arg1;
- (void)setNumberOfLines:(long long)arg1;
- (void)setLineBreakMode:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)addLinkToURL:(id)arg1 withRange:(struct _NSRange)arg2;
- (id)linkAtPoint:(struct CGPoint)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRBridge : NSObject <MPWebViewDelegate, MRNativeCommandHandlerDelegate>
{
    _Bool _shouldHandleRequests;
    id <MRBridgeDelegate> _delegate;
    MPWebView *_webView;
    MRNativeCommandHandler *_nativeCommandHandler;
}

@property(retain, nonatomic) MRNativeCommandHandler *nativeCommandHandler; // @synthesize nativeCommandHandler=_nativeCommandHandler;
@property(retain, nonatomic) MPWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <MRBridgeDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldHandleRequests; // @synthesize shouldHandleRequests=_shouldHandleRequests;
- (void).cxx_destruct;
- (_Bool)handlingWebviewRequests;
- (_Bool)userInteractedWithWebView;
- (unsigned long long)adViewPlacementType;
- (id)viewControllerForPresentingModalView;
- (void)nativeCommandFailed:(id)arg1 withMessage:(id)arg2;
- (void)nativeCommandCompleted:(id)arg1;
- (void)nativeCommandDidDismissModalView;
- (void)nativeCommandWillPresentModalView;
- (void)handleMRAIDClose;
- (void)handleMRAIDResizeWithParameters:(id)arg1;
- (void)handleMRAIDExpandWithParameters:(id)arg1;
- (void)handleMRAIDOpenCallForURL:(id)arg1;
- (void)handleMRAIDSetOrientationPropertiesWithForceOrientationMask:(unsigned long long)arg1;
- (void)handleMRAIDUseCustomClose:(_Bool)arg1;
- (void)executeJavascript:(id)arg1 withVarArgs:(char *)arg2;
- (void)fireNativeCommandCompleteEvent:(id)arg1;
- (void)executeJavascript:(id)arg1;
- (id)MRAIDScriptPath;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)fireSetMaxSize:(struct CGSize)arg1;
- (void)fireSetDefaultPositionWithPositionRect:(struct CGRect)arg1;
- (void)fireSetCurrentPositionWithPositionRect:(struct CGRect)arg1;
- (void)fireSetPlacementType:(id)arg1;
- (void)fireSetScreenSize:(struct CGSize)arg1;
- (void)fireSizeChangeEvent:(struct CGSize)arg1;
- (void)fireErrorEventForAction:(id)arg1 withMessage:(id)arg2;
- (void)fireChangeEventsForProperties:(id)arg1;
- (void)fireChangeEventForProperty:(id)arg1;
- (void)fireReadyEvent;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)dealloc;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommunityDefaultSubscriptionViewDataSource : CommunitySubscriptionViewDataSource
{
}

- (id)sortedAndFilteredSubscriptions:(id)arg1;
- (id)headerString;

@end

@interface AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValue;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface AFHTTPRequestSerializer : NSObject <AFURLRequestSerialization>
{
    _Bool _allowsCellularAccess;
    _Bool _HTTPShouldHandleCookies;
    _Bool _HTTPShouldUsePipelining;
    unsigned long long _stringEncoding;
    unsigned long long _cachePolicy;
    unsigned long long _networkServiceType;
    double _timeoutInterval;
    NSSet *_HTTPMethodsEncodingParametersInURI;
    NSMutableSet *_mutableObservedChangedKeyPaths;
    NSMutableDictionary *_mutableHTTPRequestHeaders;
    unsigned long long _queryStringSerializationStyle;
    CDUnknownBlockType _queryStringSerialization;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)serializer;
@property(copy, nonatomic) CDUnknownBlockType queryStringSerialization; // @synthesize queryStringSerialization=_queryStringSerialization;
@property(nonatomic) unsigned long long queryStringSerializationStyle; // @synthesize queryStringSerializationStyle=_queryStringSerializationStyle;
@property(retain, nonatomic) NSMutableDictionary *mutableHTTPRequestHeaders; // @synthesize mutableHTTPRequestHeaders=_mutableHTTPRequestHeaders;
@property(retain, nonatomic) NSMutableSet *mutableObservedChangedKeyPaths; // @synthesize mutableObservedChangedKeyPaths=_mutableObservedChangedKeyPaths;
@property(retain, nonatomic) NSSet *HTTPMethodsEncodingParametersInURI; // @synthesize HTTPMethodsEncodingParametersInURI=_HTTPMethodsEncodingParametersInURI;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property(nonatomic) _Bool HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property(nonatomic) _Bool HTTPShouldHandleCookies; // @synthesize HTTPShouldHandleCookies=_HTTPShouldHandleCookies;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;
- (id)requestWithMultipartFormRequest:(id)arg1 writingStreamContentsToFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (void)setQueryStringSerializationWithBlock:(CDUnknownBlockType)arg1;
- (void)setQueryStringSerializationWithStyle:(unsigned long long)arg1;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderFieldWithUsername:(id)arg1 password:(id)arg2;
- (id)valueForHTTPHeaderField:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, nonatomic) NSDictionary *HTTPRequestHeaders;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFStreamingMultipartFormData : NSObject <AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    unsigned long long _stringEncoding;
    NSString *_boundary;
    AFMultipartBodyStream *_bodyStream;
}

@property(retain, nonatomic) AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(copy, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(long long)arg4 mimeType:(id)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    id <NSStreamDelegate> delegate;
    unsigned long long streamStatus;
    NSError *streamError;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
    NSInputStream *_inputStream;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    AFHTTPBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
- (void)setStreamError:(id)arg1;
- (id)streamError;
- (void)setStreamStatus:(unsigned long long)arg1;
- (unsigned long long)streamStatus;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    _Bool _hasInitialBoundary;
    _Bool _hasFinalBoundary;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    NSString *_boundary;
    id _body;
    unsigned long long _bodyContentLength;
}

@property(nonatomic) _Bool hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) _Bool hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) _Bool bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface AFJSONRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _writingOptions;
}

+ (id)serializerWithWritingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) unsigned long long writingOptions; // @synthesize writingOptions=_writingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface AFPropertyListRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _format;
    unsigned long long _writeOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 writeOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long writeOptions; // @synthesize writeOptions=_writeOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface FeedPostViewCompact : BaseView
{
    FeedPostTitleViewCompact *_titleView;
    FeedPostTextViewCompact *_textViewCompact;
    FeedPostCommentsBarViewCompact *_commentsBarView;
    Post *_post;
    NSObject *_delegate;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegateOrNil:(id)arg2;
@property(nonatomic) __weak NSObject *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(retain, nonatomic) FeedPostCommentsBarViewCompact *commentsBarView; // @synthesize commentsBarView=_commentsBarView;
@property(retain, nonatomic) FeedPostTextViewCompact *textViewCompact; // @synthesize textViewCompact=_textViewCompact;
@property(retain, nonatomic) FeedPostTitleViewCompact *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BaseNavigationBar : UINavigationBar
{
    BaseView *_bottomLine;
}

@property(retain, nonatomic) BaseView *bottomLine; // @synthesize bottomLine=_bottomLine;
- (void).cxx_destruct;
- (void)setCurrentBarStyle:(id)arg1;
- (void)didMoveToSuperview;
- (void)setCurrentAlpha:(double)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CommentLoadMoreView : VerticalLineView
{
    Comment *_comment;
    UILabel *_moreCommentLabel;
    id <CommentLoadModeViewDelegate> _delegate;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(nonatomic) __weak id <CommentLoadModeViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UILabel *moreCommentLabel; // @synthesize moreCommentLabel=_moreCommentLabel;
@property(retain, nonatomic) Comment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)didTapLabel:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FeedPushAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
    UIView *_headerView;
}

@property(nonatomic) __weak UIView *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedPostCommentsBarView : BaseView <BaseModelObserver>
{
    NSObject<FeedPostCommentBarViewDelegate> *_delegate;
    Post *_post;
    UIView *_bottomLine;
    BaseView *_separatorView;
    BaseLabel *_scoreLabel;
    BaseButton *_commentButton;
    BaseButton *_shareButton;
    BaseButton *_upvoteButton;
    BaseButton *_downvoteButton;
    struct CGRect _shareRect;
    struct CGRect _commentRect;
    struct CGRect _voteRect;
    struct CGRect _lastLayoutBounds;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegate:(id)arg2;
@property(nonatomic) struct CGRect lastLayoutBounds; // @synthesize lastLayoutBounds=_lastLayoutBounds;
@property(nonatomic) struct CGRect voteRect; // @synthesize voteRect=_voteRect;
@property(nonatomic) struct CGRect commentRect; // @synthesize commentRect=_commentRect;
@property(nonatomic) struct CGRect shareRect; // @synthesize shareRect=_shareRect;
@property(retain, nonatomic) BaseButton *downvoteButton; // @synthesize downvoteButton=_downvoteButton;
@property(retain, nonatomic) BaseButton *upvoteButton; // @synthesize upvoteButton=_upvoteButton;
@property(retain, nonatomic) BaseButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) BaseButton *commentButton; // @synthesize commentButton=_commentButton;
@property(retain, nonatomic) BaseLabel *scoreLabel; // @synthesize scoreLabel=_scoreLabel;
@property(retain, nonatomic) BaseView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) UIView *bottomLine; // @synthesize bottomLine=_bottomLine;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak NSObject<FeedPostCommentBarViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1;
- (void)updateContentViews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)didTapDownvote;
- (void)didTapUpvote;
- (void)didTapShare;
- (void)didTapComment;
- (void)layoutSubviews;
- (_Bool)isPostReadonly;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedPostTitleViewCompact : FeedPostTitleView
{
}

+ (double)topInset;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPBannerCustomEvent : NSObject
{
    id <MPBannerCustomEventDelegate> delegate;
}

@property(nonatomic) __weak id <MPBannerCustomEventDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)rotateToOrientation:(long long)arg1;
- (_Bool)enableAutomaticImpressionAndClickTracking;
- (void)didDisplayAd;
- (void)requestAdWithSize:(struct CGSize)arg1 customEventInfo:(id)arg2;

@end

@interface MPBaseInterstitialAdapter : NSObject
{
    id <MPInterstitialAdapterDelegate> _delegate;
    MPAdConfiguration *_configuration;
    MPTimer *_timeoutTimer;
}

@property(retain, nonatomic) MPTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <MPInterstitialAdapterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)trackClick;
- (void)trackImpression;
- (void)showInterstitialFromViewController:(id)arg1;
- (void)timeout;
- (void)didStopLoading;
- (void)startTimeoutTimer;
- (void)_getAdWithConfiguration:(id)arg1;
- (void)getAdWithConfiguration:(id)arg1;
- (void)unregisterDelegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface MPInterstitialAdController : UIViewController <MPInterstitialAdManagerDelegate>
{
    _Bool _testing;
    MPInterstitialAdManager *_manager;
    id <MPInterstitialAdControllerDelegate> _delegate;
    NSString *_adUnitId;
    NSString *_keywords;
    CLLocation *_location;
}

+ (void)removeSharedInterstitialAdController:(id)arg1;
+ (id)sharedInterstitialAdControllers;
+ (id)sharedInterstitials;
+ (id)interstitialAdControllerForAdUnitId:(id)arg1;
@property(nonatomic, getter=isTesting) _Bool testing; // @synthesize testing=_testing;
@property(copy, nonatomic) CLLocation *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(nonatomic) __weak id <MPInterstitialAdControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MPInterstitialAdManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)managerDidReceiveTapEventFromInterstitial:(id)arg1;
- (void)managerDidExpireInterstitial:(id)arg1;
- (void)managerDidDismissInterstitial:(id)arg1;
- (void)managerWillDismissInterstitial:(id)arg1;
- (void)managerDidPresentInterstitial:(id)arg1;
- (void)managerWillPresentInterstitial:(id)arg1;
- (void)manager:(id)arg1 didFailToLoadInterstitialWithError:(id)arg2;
- (void)managerDidLoadInterstitial:(id)arg1;
- (id)interstitialDelegate;
- (id)interstitialAdController;
- (void)showFromViewController:(id)arg1;
- (void)loadAd;
@property(readonly, nonatomic) _Bool ready;
- (void)dealloc;
- (id)initWithAdUnitId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WebNavigationControlsView : BaseView
{
    id <WebNavigationControlsViewDelegate> _delegate;
    BaseButton *_backButton;
    BaseButton *_forwardButton;
    BaseLabel *_siteTitleLabel;
}

@property(retain, nonatomic) BaseLabel *siteTitleLabel; // @synthesize siteTitleLabel=_siteTitleLabel;
@property(retain, nonatomic) BaseButton *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) BaseButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) __weak id <WebNavigationControlsViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setSiteTitle:(id)arg1;
- (void)setCanGoForward:(_Bool)arg1;
- (void)setCanGoBack:(_Bool)arg1;
- (void)userDidTapForward;
- (void)userDidTapBack;
- (void)updateNavigationButtonVisibility;
- (void)layoutSubviews;
- (id)init;

@end

@interface MPLogProvider : NSObject
{
    NSMutableArray *_loggers;
}

+ (id)sharedLogProvider;
@property(retain, nonatomic) NSMutableArray *loggers; // @synthesize loggers=_loggers;
- (void).cxx_destruct;
- (void)logMessage:(id)arg1 atLogLevel:(int)arg2;
- (void)removeLogger:(id)arg1;
- (void)addLogger:(id)arg1;
- (id)init;

@end

@interface MPSystemLogger : NSObject <MPLogger>
{
}

- (int)logLevel;
- (void)logMessage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseTextField : UITextField
{
}

- (void)setPlaceholder:(id)arg1;
- (void)drawTextInRect:(struct CGRect)arg1;
- (void)setTextColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SearchFeedViewController : FeedViewController <SearchPageViewControllerProtocol>
{
    NSString *_subredditName;
}

@property(copy, nonatomic) NSString *subredditName; // @synthesize subredditName=_subredditName;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)beginSearchWithQuery:(id)arg1 sortParam:(id)arg2 timeParam:(id)arg3;
- (void)filterSearchResultsMatchingQueryString:(id)arg1;
- (_Bool)listingNetworkSourceShouldFilterObject:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommunitiesViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource, CommunityViewDataSourceDelegate, ScrollViewIndexBarDelegate, ThemeUpdateCallbackProtocol>
{
    BaseTableView *_tableView;
    ScrollViewIndexBar *_indexBar;
    RefreshControl *_refreshControl;
    CommunityViewDataSource *_popularViewDataSource;
    CommunityModeratingViewDataSource *_moderatingViewDataSource;
    AccountSubscriptionViewDataSource *_subscriptionViewDataSource;
    CommunityDefaultSubscriptionViewDataSource *_defaultSubscriptionViewDataSource;
    MultiViewDataSource *_multiViewDataSource;
    NSArray *_dataSources;
}

@property(copy, nonatomic) NSArray *dataSources; // @synthesize dataSources=_dataSources;
@property(retain, nonatomic) MultiViewDataSource *multiViewDataSource; // @synthesize multiViewDataSource=_multiViewDataSource;
@property(retain, nonatomic) CommunityDefaultSubscriptionViewDataSource *defaultSubscriptionViewDataSource; // @synthesize defaultSubscriptionViewDataSource=_defaultSubscriptionViewDataSource;
@property(retain, nonatomic) AccountSubscriptionViewDataSource *subscriptionViewDataSource; // @synthesize subscriptionViewDataSource=_subscriptionViewDataSource;
@property(retain, nonatomic) CommunityModeratingViewDataSource *moderatingViewDataSource; // @synthesize moderatingViewDataSource=_moderatingViewDataSource;
@property(retain, nonatomic) CommunityViewDataSource *popularViewDataSource; // @synthesize popularViewDataSource=_popularViewDataSource;
@property(retain, nonatomic) RefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(retain, nonatomic) ScrollViewIndexBar *indexBar; // @synthesize indexBar=_indexBar;
@property(retain, nonatomic) BaseTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)themeDidChange:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewIndexBar:(id)arg1 didSelectIndex:(id)arg2;
- (struct CGRect)visibleIndexBarFrame;
- (void)showIndexBar:(_Bool)arg1;
- (void)communityViewDataSourceGestureDidCancel:(id)arg1 withCell:(id)arg2;
- (void)communityViewDataSourceGestureDidEnd:(id)arg1 withCell:(id)arg2;
- (void)communityViewDataSourceGestureDidBegin:(id)arg1 withCell:(id)arg2;
- (id)indexesForDataSources;
- (void)communityViewDataSourceDidUpdate:(id)arg1;
- (_Bool)shouldScrollContentViewToTop;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)fetchAllData;
- (id)majorContentView;
- (struct UIEdgeInsets)preferredContentInset;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LiveBannerCollectionViewCell : UICollectionViewCell
{
    LiveBannerContentView *_eventView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) LiveBannerContentView *eventView; // @synthesize eventView=_eventView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DiscoverDisplayableObject : NSObject
{
    NSString *_displayName;
    NSString *_name;
    NSString *_iconImageURL;
    UIColor *_keyColor;
}

@property(copy, nonatomic) UIColor *keyColor; // @synthesize keyColor=_keyColor;
@property(copy, nonatomic) NSString *iconImageURL; // @synthesize iconImageURL=_iconImageURL;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (void)configureWithData:(id)arg1;

@end

@interface DiscoverCategory : DiscoverDisplayableObject
{
    NSArray *_subreddits;
}

@property(copy, nonatomic) NSArray *subreddits; // @synthesize subreddits=_subreddits;
- (void).cxx_destruct;

@end

@interface HeaderBarView : UICollectionReusableView
{
    NSObject<HeaderBarViewDelegate> *_delegate;
    double _leftPadding;
    BaseButton *_leftButton;
    BaseButton *_rightButton;
    CALayer *_bottomBorder;
}

@property(retain, nonatomic) CALayer *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(retain, nonatomic) BaseButton *rightButton; // @synthesize rightButton=_rightButton;
@property(retain, nonatomic) BaseButton *leftButton; // @synthesize leftButton=_leftButton;
@property(nonatomic) double leftPadding; // @synthesize leftPadding=_leftPadding;
@property(nonatomic) __weak NSObject<HeaderBarViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapRightButton:(id)arg1;
- (void)didTapLeftButton:(id)arg1;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CommunityTabViewController : BaseViewController <UISearchBarDelegate, UIViewControllerTransitioningDelegate, UIGestureRecognizerDelegate, ThemeUpdateCallbackProtocol>
{
    CommunitiesViewController *_communitiesController;
    BaseSearchBar *_searchBar;
    SearchBarTransition *_searchBarTransition;
}

@property(retain, nonatomic) SearchBarTransition *searchBarTransition; // @synthesize searchBarTransition=_searchBarTransition;
@property(retain, nonatomic) BaseSearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) CommunitiesViewController *communitiesController; // @synthesize communitiesController=_communitiesController;
- (void).cxx_destruct;
- (void)themeDidChange:(id)arg1;
- (void)setFocusToSearchBar;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (_Bool)shouldScrollContentViewToTop;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (id)majorContentView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativeView : UIView
{
    id <MPNativeViewDelegate> _delegate;
}

@property(nonatomic) __weak id <MPNativeViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)willMoveToSuperview:(id)arg1;

@end

@interface MPNativePositionSource : NSObject <NSURLConnectionDataDelegate>
{
    _Bool _loading;
    NSString *_adUnitIdentifier;
    NSURLConnection *_connection;
    NSMutableData *_data;
    CDUnknownBlockType _completionHandler;
    double _maximumRetryInterval;
    double _minimumRetryInterval;
    double _retryInterval;
    unsigned long long _retryCount;
}

@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) double retryInterval; // @synthesize retryInterval=_retryInterval;
@property(nonatomic) double minimumRetryInterval; // @synthesize minimumRetryInterval=_minimumRetryInterval;
@property(nonatomic) double maximumRetryInterval; // @synthesize maximumRetryInterval=_maximumRetryInterval;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSString *adUnitIdentifier; // @synthesize adUnitIdentifier=_adUnitIdentifier;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)retryLoadingPositions;
- (id)serverURLWithAdUnitIdentifier:(id)arg1;
- (void)cancel;
- (void)loadPositionsWithAdUnitIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPSessionTracker : NSObject
{
}

+ (id)URL;
+ (void)trackEvent;
+ (void)load;

@end

@interface FeedPostCollectionViewCellWithSelfText : FeedPostCollectionViewCell
{
}

@end

@interface BaseModel : NSObject <NSSecureCoding>
{
    _Bool _isObservingChanges;
    NSString *_pk;
    NSHashTable *_currentObservers;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool isObservingChanges; // @synthesize isObservingChanges=_isObservingChanges;
@property(retain, nonatomic) NSHashTable *currentObservers; // @synthesize currentObservers=_currentObservers;
@property(copy, nonatomic) NSString *pk; // @synthesize pk=_pk;
- (void).cxx_destruct;
- (id)selectorsToObserveChanges;
- (void)removeObserverForUpdates:(id)arg1;
- (void)registerObserverForUpdates:(id)arg1;
- (void)notifyObserversForUpdatedModel;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1;
- (void)stopObservingChanges;
- (void)startObservingChanges;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface MRController : NSObject <MRBridgeDelegate, MPClosableViewDelegate, MPAdDestinationDisplayAgentDelegate>
{
    _Bool _shouldUseUIWebView;
    _Bool _isViewable;
    _Bool _isAnimatingAdSize;
    _Bool _isAdLoading;
    _Bool _adRequiresPrecaching;
    _Bool _isAdVastVideoPlayer;
    _Bool _firedReadyEventForDefaultAd;
    id <MRControllerDelegate> _delegate;
    MPAdConfiguration *_adConfiguration;
    MRBridge *_mraidBridge;
    MRBridge *_mraidBridgeTwoPart;
    MPClosableView *_mraidAdView;
    MPClosableView *_mraidAdViewTwoPart;
    UIView *_resizeBackgroundView;
    MPTimer *_adPropertyUpdateTimer;
    unsigned long long _placementType;
    MRExpandModalViewController *_expandModalViewController;
    MPMRAIDInterstitialViewController *_interstitialViewController;
    NSMutableData *_twoPartExpandData;
    unsigned long long _responseEncoding;
    unsigned long long _modalViewCount;
    unsigned long long _currentState;
    UIView *_originalSuperview;
    MPClosableView *_expansionContentView;
    MPAdDestinationDisplayAgent *_destinationDisplayAgent;
    id <MPAdAlertManagerProtocol> _adAlertManager;
    id <MPAdAlertManagerProtocol> _adAlertManagerTwoPart;
    unsigned long long _forceOrientationMask;
    long long _currentInterfaceOrientation;
    CDUnknownBlockType _forceOrientationAfterAnimationBlock;
    struct CGSize _currentAdSize;
    struct CGRect _mraidDefaultAdFrame;
    struct CGRect _mraidDefaultAdFrameInKeyWindow;
}

@property(copy, nonatomic) CDUnknownBlockType forceOrientationAfterAnimationBlock; // @synthesize forceOrientationAfterAnimationBlock=_forceOrientationAfterAnimationBlock;
@property(nonatomic) long long currentInterfaceOrientation; // @synthesize currentInterfaceOrientation=_currentInterfaceOrientation;
@property(nonatomic) unsigned long long forceOrientationMask; // @synthesize forceOrientationMask=_forceOrientationMask;
@property(retain, nonatomic) id <MPAdAlertManagerProtocol> adAlertManagerTwoPart; // @synthesize adAlertManagerTwoPart=_adAlertManagerTwoPart;
@property(retain, nonatomic) id <MPAdAlertManagerProtocol> adAlertManager; // @synthesize adAlertManager=_adAlertManager;
@property(retain, nonatomic) MPAdDestinationDisplayAgent *destinationDisplayAgent; // @synthesize destinationDisplayAgent=_destinationDisplayAgent;
@property(retain, nonatomic) MPClosableView *expansionContentView; // @synthesize expansionContentView=_expansionContentView;
@property(nonatomic) _Bool firedReadyEventForDefaultAd; // @synthesize firedReadyEventForDefaultAd=_firedReadyEventForDefaultAd;
@property(nonatomic) _Bool isAdVastVideoPlayer; // @synthesize isAdVastVideoPlayer=_isAdVastVideoPlayer;
@property(nonatomic) _Bool adRequiresPrecaching; // @synthesize adRequiresPrecaching=_adRequiresPrecaching;
@property(nonatomic) _Bool isAdLoading; // @synthesize isAdLoading=_isAdLoading;
@property(nonatomic) _Bool isAnimatingAdSize; // @synthesize isAnimatingAdSize=_isAnimatingAdSize;
@property(nonatomic) _Bool isViewable; // @synthesize isViewable=_isViewable;
@property(nonatomic) __weak UIView *originalSuperview; // @synthesize originalSuperview=_originalSuperview;
@property(nonatomic) _Bool shouldUseUIWebView; // @synthesize shouldUseUIWebView=_shouldUseUIWebView;
@property(nonatomic) unsigned long long currentState; // @synthesize currentState=_currentState;
@property(nonatomic) unsigned long long modalViewCount; // @synthesize modalViewCount=_modalViewCount;
@property(nonatomic) struct CGSize currentAdSize; // @synthesize currentAdSize=_currentAdSize;
@property(nonatomic) struct CGRect mraidDefaultAdFrameInKeyWindow; // @synthesize mraidDefaultAdFrameInKeyWindow=_mraidDefaultAdFrameInKeyWindow;
@property(nonatomic) struct CGRect mraidDefaultAdFrame; // @synthesize mraidDefaultAdFrame=_mraidDefaultAdFrame;
@property(nonatomic) unsigned long long responseEncoding; // @synthesize responseEncoding=_responseEncoding;
@property(retain, nonatomic) NSMutableData *twoPartExpandData; // @synthesize twoPartExpandData=_twoPartExpandData;
@property(nonatomic) __weak MPMRAIDInterstitialViewController *interstitialViewController; // @synthesize interstitialViewController=_interstitialViewController;
@property(retain, nonatomic) MRExpandModalViewController *expandModalViewController; // @synthesize expandModalViewController=_expandModalViewController;
@property(nonatomic) unsigned long long placementType; // @synthesize placementType=_placementType;
@property(retain, nonatomic) MPTimer *adPropertyUpdateTimer; // @synthesize adPropertyUpdateTimer=_adPropertyUpdateTimer;
@property(retain, nonatomic) UIView *resizeBackgroundView; // @synthesize resizeBackgroundView=_resizeBackgroundView;
@property(retain, nonatomic) MPClosableView *mraidAdViewTwoPart; // @synthesize mraidAdViewTwoPart=_mraidAdViewTwoPart;
@property(retain, nonatomic) MPClosableView *mraidAdView; // @synthesize mraidAdView=_mraidAdView;
@property(retain, nonatomic) MRBridge *mraidBridgeTwoPart; // @synthesize mraidBridgeTwoPart=_mraidBridgeTwoPart;
@property(retain, nonatomic) MRBridge *mraidBridge; // @synthesize mraidBridge=_mraidBridge;
@property(retain, nonatomic) MPAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(nonatomic) __weak id <MRControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)appShouldResume;
- (void)appShouldSuspend;
- (void)adDidDismissModalView;
- (void)adWillPresentModalView;
- (void)adDidClose;
- (void)adWillClose;
- (void)adDidFailToLoad;
- (void)adDidLoad;
- (void)adAlertManagerDidTriggerAlert:(id)arg1;
- (id)viewControllerForPresentingMailVC;
- (void)updateViewabilityWithBool:(_Bool)arg1;
- (void)viewEnteredBackground;
- (void)checkViewability;
- (void)changeStateTo:(unsigned long long)arg1;
- (void)updateEventSizeChange;
- (void)updateMaxSize;
- (void)updateScreenSize;
- (void)updateDefaultPosition;
- (void)updateCurrentPosition;
- (struct CGRect)defaultAdFrameInScreenSpace;
- (struct CGRect)activeAdFrameInScreenSpace;
- (void)updateMRAIDProperties;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillPresentModal;
- (void)closableView:(id)arg1 didMoveToWindow:(id)arg2;
- (void)closeButtonPressed:(id)arg1;
- (void)bridge:(id)arg1 handleNativeCommandResizeWithParameters:(id)arg2;
- (void)bridge:(id)arg1 handleNativeCommandExpandWithURL:(id)arg2 useCustomClose:(_Bool)arg3;
- (void)bridge:(id)arg1 handleNativeCommandSetOrientationPropertiesWithForceOrientationMask:(unsigned long long)arg2;
- (void)configureCloseButtonForView:(id)arg1 forUseCustomClose:(_Bool)arg2;
- (void)bridge:(id)arg1 handleNativeCommandUseCustomClose:(_Bool)arg2;
- (void)bridge:(id)arg1 handleDisplayForDestinationURL:(id)arg2;
- (void)handleNativeCommandCloseWithBridge:(id)arg1;
- (void)bridge:(id)arg1 performActionForMoPubSpecificURL:(id)arg2;
- (void)bridge:(id)arg1 didFailLoadingWebView:(id)arg2 error:(id)arg3;
- (void)bridge:(id)arg1 didFinishLoadingWebView:(id)arg2;
- (void)nativeCommandDidDismissModalView;
- (void)nativeCommandWillPresentModalView;
- (id)viewControllerForPresentingModalView;
- (_Bool)hasUserInteractedWithWebViewForBridge:(id)arg1;
- (_Bool)isLoadingAd;
- (void)closeFromResizedState;
- (void)closeFromExpandedState;
- (void)closeFromDefaultState;
- (void)close;
- (void)didEndAnimatingAdSize;
- (void)willBeginAnimatingAdSize;
- (void)presentExpandModalViewControllerWithView:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentExpandModalViewControllerWithView:(id)arg1 animated:(_Bool)arg2;
- (void)animateViewFromDefaultStateToResizedState:(id)arg1 withFrame:(struct CGRect)arg2;
- (long long)adCloseButtonLocationFromString:(id)arg1;
- (_Bool)isValidResizeCloseButtonPlacementInFrame:(struct CGRect)arg1;
- (_Bool)isValidResizeFrame:(struct CGRect)arg1 allowOffscreen:(_Bool)arg2;
- (struct CGRect)adjustedFrameForFrame:(struct CGRect)arg1 allowOffscreen:(_Bool)arg2;
- (void)fireChangeEventToBothBridgesForProperty:(id)arg1;
- (void)initializeLoadedAdForBridge:(id)arg1;
- (void)orientationDidChange:(id)arg1;
- (id)buildMRAIDWebViewWithFrame:(struct CGRect)arg1 forceUIWebView:(_Bool)arg2;
- (id)bridgeForActiveAdView;
- (id)activeView;
- (id)bridgeForAdView:(id)arg1;
- (id)adViewForBridge:(id)arg1;
- (void)initAdAlertManager:(id)arg1 forAdView:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)loadTwoPartCreativeFromURL:(id)arg1;
- (void)disableRequestHandling;
- (void)enableRequestHandling;
- (void)handleMRAIDInterstitialDidPresentWithViewController:(id)arg1;
- (void)loadAdWithConfiguration:(id)arg1;
- (void)dealloc;
- (id)initWithAdViewFrame:(struct CGRect)arg1 adPlacementType:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommunityTableViewCell : BaseTableViewCell <UIGestureRecognizerDelegate>
{
    CommunityContentView *_communityContentView;
}

@property(retain, nonatomic) CommunityContentView *communityContentView; // @synthesize communityContentView=_communityContentView;
- (void).cxx_destruct;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRBundleManager : NSObject
{
}

+ (id)sharedManager;
- (id)mraidPath;

@end

@interface MOPUBPlayerViewController : UIViewController <MOPUBAVPlayerDelegate, MOPUBPlayerViewDelegate, MPAdDestinationDisplayAgentDelegate>
{
    _Bool _muted;
    _Bool _startedLoading;
    _Bool _playing;
    _Bool _paused;
    _Bool _isReadyToPlay;
    _Bool _disposed;
    _Bool _alreadyInitialized;
    _Bool _downloadFinishedEventFired;
    _Bool _alreadyCreatedPlayerView;
    _Bool _finishedPlaying;
    NSURL *_mediaURL;
    MOPUBPlayerView *_playerView;
    AVPlayerItem *_playerItem;
    MOPUBAVPlayer *_avPlayer;
    MPVASTTracking *_vastTracking;
    double _videoAspectRatio;
    MOPUBNativeVideoAdConfigValues *_nativeVideoAdConfig;
    NSURL *_defaultActionURL;
    id <MOPUBPlayerViewControllerDelegate> _delegate;
    UIButton *_muteButton;
    UIActivityIndicatorView *_loadingIndicator;
    MPAdDestinationDisplayAgent *_displayAgent;
    MPAdConfigurationLogEventProperties *_logEventProperties;
}

@property(nonatomic) _Bool finishedPlaying; // @synthesize finishedPlaying=_finishedPlaying;
@property(nonatomic) _Bool alreadyCreatedPlayerView; // @synthesize alreadyCreatedPlayerView=_alreadyCreatedPlayerView;
@property(nonatomic) _Bool downloadFinishedEventFired; // @synthesize downloadFinishedEventFired=_downloadFinishedEventFired;
@property(retain, nonatomic) MPAdConfigurationLogEventProperties *logEventProperties; // @synthesize logEventProperties=_logEventProperties;
@property(nonatomic) _Bool alreadyInitialized; // @synthesize alreadyInitialized=_alreadyInitialized;
@property(retain, nonatomic) MPAdDestinationDisplayAgent *displayAgent; // @synthesize displayAgent=_displayAgent;
@property(retain, nonatomic) UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator=_loadingIndicator;
@property(retain, nonatomic) UIButton *muteButton; // @synthesize muteButton=_muteButton;
@property(nonatomic) __weak id <MOPUBPlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *defaultActionURL; // @synthesize defaultActionURL=_defaultActionURL;
@property(nonatomic) _Bool disposed; // @synthesize disposed=_disposed;
@property(nonatomic) _Bool isReadyToPlay; // @synthesize isReadyToPlay=_isReadyToPlay;
@property(nonatomic) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) _Bool startedLoading; // @synthesize startedLoading=_startedLoading;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(readonly, nonatomic) MOPUBNativeVideoAdConfigValues *nativeVideoAdConfig; // @synthesize nativeVideoAdConfig=_nativeVideoAdConfig;
@property(readonly, nonatomic) double videoAspectRatio; // @synthesize videoAspectRatio=_videoAspectRatio;
@property(retain, nonatomic) MPVASTTracking *vastTracking; // @synthesize vastTracking=_vastTracking;
@property(readonly, nonatomic) MOPUBAVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(readonly, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(readonly, nonatomic) MOPUBPlayerView *playerView; // @synthesize playerView=_playerView;
@property(readonly, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
- (void).cxx_destruct;
- (void)displayAgentDidDismissModal;
- (void)displayAgentWillLeaveApplication;
- (void)displayAgentWillPresentModal;
- (id)viewControllerForPresentingModalView;
- (void)applicationDidEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)playerViewWillEnterFullscreen:(id)arg1;
- (void)playerViewWillShowReplayView:(id)arg1;
- (void)playerViewDidTapReplayButton:(id)arg1;
- (void)avPlayerDidStall:(id)arg1;
- (void)avPlayerDidRecoverFromStall:(id)arg1;
- (void)avPlayerDidFinishPlayback:(id)arg1;
- (void)avPlayer:(id)arg1 didError:(id)arg2 withMessage:(id)arg3;
- (void)avPlayer:(id)arg1 playbackTimeDidProgress:(double)arg2;
- (void)willExitFullscreen;
- (void)willEnterFullscreen;
- (_Bool)shouldPausePlayer;
- (_Bool)shouldResumePlayer;
- (_Bool)shouldStartNewPlayer;
- (void)seekToTime:(double)arg1;
- (void)resume;
- (void)pause;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)muteButtonTapped;
- (void)removeLoadingIndicator;
- (void)stopLoadingIndicator;
- (void)startLoadingIndicator;
@property(nonatomic) unsigned long long displayMode;
- (void)setAvPlayer:(id)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)startPlayer;
- (void)createMuteButton;
- (void)createView;
- (void)initOnVideoReady;
- (void)prepareToPlayAsset:(id)arg1 withKeys:(id)arg2;
- (void)setVideoAspectRatioWithAsset:(id)arg1;
- (void)loadAndPlayVideo;
- (void)handleVideoInitError;
- (void)dispose;
- (void)dealloc;
- (void)layoutLoadingIndicator;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithVideoConfig:(id)arg1 nativeVideoAdConfig:(id)arg2 logEventProperties:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFURLSessionManagerTaskDelegate : NSObject <NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
    AFURLSessionManager *_manager;
    NSMutableData *_mutableData;
    NSProgress *_uploadProgress;
    NSProgress *_downloadProgress;
    NSURL *_downloadFileURL;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _uploadProgressBlock;
    CDUnknownBlockType _downloadProgressBlock;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) CDUnknownBlockType downloadProgressBlock; // @synthesize downloadProgressBlock=_downloadProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType uploadProgressBlock; // @synthesize uploadProgressBlock=_uploadProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) NSURL *downloadFileURL; // @synthesize downloadFileURL=_downloadFileURL;
@property(retain, nonatomic) NSProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(retain, nonatomic) NSProgress *uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
@property(nonatomic) __weak AFURLSessionManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)cleanUpProgressForTask:(id)arg1;
- (void)setupProgressForTask:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _AFURLSessionTaskSwizzling : NSObject
{
}

+ (void)swizzleResumeAndSuspendMethodForClass:(Class)arg1;
+ (void)load;
- (void)af_suspend;
- (void)af_resume;
- (long long)state;

@end

@interface AFURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSSecureCoding, NSCopying>
{
    _Bool _attemptsToRecreateUploadTasksForBackgroundSessions;
    NSURLSession *_session;
    NSOperationQueue *_operationQueue;
    id <AFURLResponseSerialization> _responseSerializer;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSMutableDictionary *_mutableTaskDelegatesKeyedByTaskIdentifier;
    NSLock *_lock;
    CDUnknownBlockType _sessionDidBecomeInvalid;
    CDUnknownBlockType _sessionDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _didFinishEventsForBackgroundURLSession;
    CDUnknownBlockType _taskWillPerformHTTPRedirection;
    CDUnknownBlockType _taskDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _taskNeedNewBodyStream;
    CDUnknownBlockType _taskDidSendBodyData;
    CDUnknownBlockType _taskDidComplete;
    CDUnknownBlockType _dataTaskDidReceiveResponse;
    CDUnknownBlockType _dataTaskDidBecomeDownloadTask;
    CDUnknownBlockType _dataTaskDidReceiveData;
    CDUnknownBlockType _dataTaskWillCacheResponse;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _downloadTaskDidWriteData;
    CDUnknownBlockType _downloadTaskDidResume;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidResume; // @synthesize downloadTaskDidResume=_downloadTaskDidResume;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidWriteData; // @synthesize downloadTaskDidWriteData=_downloadTaskDidWriteData;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) CDUnknownBlockType dataTaskWillCacheResponse; // @synthesize dataTaskWillCacheResponse=_dataTaskWillCacheResponse;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveData; // @synthesize dataTaskDidReceiveData=_dataTaskDidReceiveData;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidBecomeDownloadTask; // @synthesize dataTaskDidBecomeDownloadTask=_dataTaskDidBecomeDownloadTask;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveResponse; // @synthesize dataTaskDidReceiveResponse=_dataTaskDidReceiveResponse;
@property(copy, nonatomic) CDUnknownBlockType taskDidComplete; // @synthesize taskDidComplete=_taskDidComplete;
@property(copy, nonatomic) CDUnknownBlockType taskDidSendBodyData; // @synthesize taskDidSendBodyData=_taskDidSendBodyData;
@property(copy, nonatomic) CDUnknownBlockType taskNeedNewBodyStream; // @synthesize taskNeedNewBodyStream=_taskNeedNewBodyStream;
@property(copy, nonatomic) CDUnknownBlockType taskDidReceiveAuthenticationChallenge; // @synthesize taskDidReceiveAuthenticationChallenge=_taskDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType taskWillPerformHTTPRedirection; // @synthesize taskWillPerformHTTPRedirection=_taskWillPerformHTTPRedirection;
@property(copy, nonatomic) CDUnknownBlockType didFinishEventsForBackgroundURLSession; // @synthesize didFinishEventsForBackgroundURLSession=_didFinishEventsForBackgroundURLSession;
@property(copy, nonatomic) CDUnknownBlockType sessionDidReceiveAuthenticationChallenge; // @synthesize sessionDidReceiveAuthenticationChallenge=_sessionDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType sessionDidBecomeInvalid; // @synthesize sessionDidBecomeInvalid=_sessionDidBecomeInvalid;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableDictionary *mutableTaskDelegatesKeyedByTaskIdentifier; // @synthesize mutableTaskDelegatesKeyedByTaskIdentifier=_mutableTaskDelegatesKeyedByTaskIdentifier;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic) _Bool attemptsToRecreateUploadTasksForBackgroundSessions; // @synthesize attemptsToRecreateUploadTasksForBackgroundSessions=_attemptsToRecreateUploadTasksForBackgroundSessions;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) id <AFURLResponseSerialization> responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (_Bool)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (void)setDownloadTaskDidResumeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidWriteDataBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidFinishDownloadingBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskWillCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveDataBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidBecomeDownloadTaskBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveResponseBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidCompleteBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidSendBodyDataBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setTaskWillPerformHTTPRedirectionBlock:(CDUnknownBlockType)arg1;
- (void)setTaskNeedNewBodyStreamBlock:(CDUnknownBlockType)arg1;
- (void)setDidFinishEventsForBackgroundURLSessionBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidBecomeInvalidBlock:(CDUnknownBlockType)arg1;
- (id)downloadProgressForTask:(id)arg1;
- (id)uploadProgressForTask:(id)arg1;
- (id)downloadTaskWithResumeData:(id)arg1 progress:(CDUnknownBlockType)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)downloadTaskWithRequest:(id)arg1 progress:(CDUnknownBlockType)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithStreamedRequest:(id)arg1 progress:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 uploadProgress:(CDUnknownBlockType)arg2 downloadProgress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeNotificationObserverForTask:(id)arg1;
- (void)addNotificationObserverForTask:(id)arg1;
- (void)invalidateSessionCancelingTasks:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *downloadTasks;
@property(readonly, nonatomic) NSArray *uploadTasks;
@property(readonly, nonatomic) NSArray *dataTasks;
@property(readonly, nonatomic) NSArray *tasks;
- (id)tasksForKeyPath:(id)arg1;
- (void)removeDelegateForTask:(id)arg1;
- (void)addDelegateForDownloadTask:(id)arg1 progress:(CDUnknownBlockType)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addDelegateForUploadTask:(id)arg1 progress:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addDelegateForDataTask:(id)arg1 uploadProgress:(CDUnknownBlockType)arg2 downloadProgress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setDelegate:(id)arg1 forTask:(id)arg2;
- (id)delegateForTask:(id)arg1;
- (void)taskDidSuspend:(id)arg1;
- (void)taskDidResume:(id)arg1;
@property(readonly, copy, nonatomic) NSString *taskDescriptionForSessionTasks;
- (void)dealloc;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ComposeMessageView : BaseScrollView <LinkViewControllerDelegate, UITextViewDelegate, BaseTextViewDelegate>
{
    LabeledTextField *_usernameTextField;
    BaseTextView *_subjectTextView;
    BaseTextView *_messageTextView;
    UIView *_usernameDivider;
    UIView *_subjectDivider;
}

@property(retain, nonatomic) UIView *subjectDivider; // @synthesize subjectDivider=_subjectDivider;
@property(retain, nonatomic) UIView *usernameDivider; // @synthesize usernameDivider=_usernameDivider;
@property(retain, nonatomic) BaseTextView *messageTextView; // @synthesize messageTextView=_messageTextView;
@property(retain, nonatomic) BaseTextView *subjectTextView; // @synthesize subjectTextView=_subjectTextView;
@property(retain, nonatomic) LabeledTextField *usernameTextField; // @synthesize usernameTextField=_usernameTextField;
- (void).cxx_destruct;
- (void)linkViewControllerDidTapInsert:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)moveCaretIfPossibleInScrollView:(id)arg1;
- (_Bool)textViewShouldChangeSize:(id)arg1;
- (void)textView:(id)arg1 didChangeToNewSize:(struct CGSize)arg2;
- (_Bool)resignFirstResponder;
- (id)getCurrentViewWithKeyboard;
- (void)didTapCloseLink;
- (void)didTapLinkButton;
- (void)didTapNextButton:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPBannerAdManager : NSObject <MPAdServerCommunicatorDelegate, MPBannerAdapterDelegate>
{
    _Bool _adActionInProgress;
    _Bool _automaticallyRefreshesContents;
    _Bool _hasRequestedAtLeastOneAd;
    id <MPBannerAdManagerDelegate> _delegate;
    MPAdServerCommunicator *_communicator;
    MPBaseBannerAdapter *_onscreenAdapter;
    MPBaseBannerAdapter *_requestingAdapter;
    MPTimer *_refreshTimer;
    long long _currentOrientation;
    UIView *_requestingAdapterAdContentView;
    MPAdConfiguration *_requestingConfiguration;
}

@property(nonatomic) _Bool hasRequestedAtLeastOneAd; // @synthesize hasRequestedAtLeastOneAd=_hasRequestedAtLeastOneAd;
@property(nonatomic) _Bool automaticallyRefreshesContents; // @synthesize automaticallyRefreshesContents=_automaticallyRefreshesContents;
@property(retain, nonatomic) MPAdConfiguration *requestingConfiguration; // @synthesize requestingConfiguration=_requestingConfiguration;
@property(retain, nonatomic) UIView *requestingAdapterAdContentView; // @synthesize requestingAdapterAdContentView=_requestingAdapterAdContentView;
@property(nonatomic) long long currentOrientation; // @synthesize currentOrientation=_currentOrientation;
@property(nonatomic) _Bool adActionInProgress; // @synthesize adActionInProgress=_adActionInProgress;
@property(retain, nonatomic) MPTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(retain, nonatomic) MPBaseBannerAdapter *requestingAdapter; // @synthesize requestingAdapter=_requestingAdapter;
@property(retain, nonatomic) MPBaseBannerAdapter *onscreenAdapter; // @synthesize onscreenAdapter=_onscreenAdapter;
@property(retain, nonatomic) MPAdServerCommunicator *communicator; // @synthesize communicator=_communicator;
@property(nonatomic) __weak id <MPBannerAdManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)userWillLeaveApplicationFromAdapter:(id)arg1;
- (void)userActionDidFinishForAdapter:(id)arg1;
- (void)userActionWillBeginForAdapter:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)adapter:(id)arg1 didFinishLoadingAd:(id)arg2;
- (void)presentRequestingAdapter;
- (_Bool)requestingAdapterIsReadyToBePresented;
- (id)location;
- (int)allowedNativeAdsOrientation;
- (id)viewControllerForPresentingModalView;
- (id)bannerDelegate;
- (id)banner;
- (void)didFailToLoadAdapterWithError:(id)arg1;
- (void)communicatorDidFailWithError:(id)arg1;
- (void)communicatorDidReceiveAdConfiguration:(id)arg1;
- (void)refreshTimerDidFire;
- (void)scheduleRefreshTimer;
- (void)rotateToOrientation:(long long)arg1;
- (void)loadAdWithURL:(id)arg1;
- (void)startAutomaticallyRefreshingContents;
- (void)stopAutomaticallyRefreshingContents;
- (void)pauseRefreshTimer;
- (void)applicationDidEnterBackground;
- (void)applicationWillEnterForeground;
- (void)forceRefreshAd;
- (void)loadAd;
- (_Bool)loading;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LayoutGuidance : NSObject
{
}

+ (id)currentGuidance;
@property(readonly, nonatomic) double postOverlayHeight;
@property(readonly, nonatomic) double commentInputTextViewHeight;
@property(readonly, nonatomic) double commentCommandViewHeight;
@property(readonly, nonatomic) double commentCommandViewWidth;
@property(readonly, nonatomic) double commentLoadingMoreViewWidth;
@property(readonly, nonatomic) double commentLoadingMoreViewHeight;
@property(readonly, nonatomic) double commentHeaderViewHeight;
@property(readonly, nonatomic) double commentHeaderViewWidth;
@property(readonly, nonatomic) double commentViewIndentPaddingEachLevel;
@property(readonly, nonatomic) double commentViewWidth;
@property(readonly, nonatomic) struct CGSize feedPostDetailViewCommentsBarViewSize;
@property(readonly, nonatomic) struct CGSize feedPostCommentsBarViewSize;
@property(readonly, nonatomic) struct CGSize feedPostVideoViewSize;
@property(readonly, nonatomic) struct CGSize feedPostImageViewSize;
@property(readonly, nonatomic) struct CGSize feedPostSelfImageViewSize;
@property(readonly, nonatomic) struct CGSize feedPostLinkedImageViewSize;
@property(readonly, nonatomic) struct CGSize feedPostWebsiteLinkBarViewSize;
@property(readonly, nonatomic) struct CGSize feedPostWebsiteInternalImageViewSize;
@property(readonly, nonatomic) struct CGSize feedPostWebsiteViewSizeCompact;
@property(readonly, nonatomic) struct CGSize feedPostWebsiteViewSize;
@property(readonly, nonatomic) struct CGSize feedPostTextViewSize;
@property(readonly, nonatomic) struct CGSize feedPostTitleViewExpandedSize;
@property(readonly, nonatomic) struct CGSize feedPostTitleViewSize;
@property(readonly, nonatomic) struct CGSize carouselItemSize;
@property(readonly, nonatomic) struct CGSize compactFeedPostCommentsBarViewSize;
@property(readonly, nonatomic) struct CGSize compactFeedPostTitleViewSize;
@property(readonly, nonatomic) struct CGSize compactThumbnailSize;
@property(readonly, nonatomic) struct CGSize feedPostContentViewSize;
@property(readonly, nonatomic) double cardMaxSmallThumbnailSize;
@property(readonly, nonatomic) double subredditSmallLogoSize;
@property(readonly, nonatomic) double subredditLargeLogoSize;
@property(readonly, nonatomic) double indexBarItemSize;
@property(readonly, nonatomic) double tabPageItemDefaultHeight;
@property(readonly, nonatomic) double tabPageItemDefaultWidth;
@property(readonly, nonatomic) double tabBarHeight;
@property(readonly, nonatomic) double statusBarHeight;
@property(readonly, nonatomic) double statusBarStandardHeight;
@property(readonly, nonatomic) struct UIEdgeInsets separatorInsets;
@property(readonly, nonatomic) double popoverActionSheetWidth;
@property(readonly, nonatomic) double navBarHeight;
@property(readonly, nonatomic) double stackedViewPadding;
@property(readonly, nonatomic) double gridPadding;
@property(readonly, nonatomic) double lineHeight;
@property(readonly, nonatomic) _Bool isOnIPAD;
@property(readonly, nonatomic) double maxContentWidth;

@end

@interface FloatingUpdateView : BaseView
{
    BaseButton *_button;
}

@property(retain, nonatomic) BaseButton *button; // @synthesize button=_button;
- (void).cxx_destruct;
@property(readonly, nonatomic) double standardButtonHeight;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BaseWebViewController : BaseViewController <ActionSheetViewControllerDelegate, WebNavigationControlsViewDelegate, OpenBrowserActionViewDelegate, PostViewControllerDelegate>
{
    BaseProgressView *_progressView;
    WebNavigationControlsView *_navigationControlView;
}

@property(retain, nonatomic) WebNavigationControlsView *navigationControlView; // @synthesize navigationControlView=_navigationControlView;
@property(retain, nonatomic) BaseProgressView *progressView; // @synthesize progressView=_progressView;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)refresh;
- (void)goForward;
- (void)goBack;
@property(readonly, nonatomic) _Bool canGoForward;
@property(readonly, nonatomic) _Bool canGoBack;
- (void)setWebNavigationControlsNeedUpdate;
- (void)webNavigationControlsUserDidTapForward:(id)arg1;
- (void)webNavigationControlsUserDidTapBack:(id)arg1;
- (void)openBrowserActionViewControllerDidSelectPostToReddit:(id)arg1;
- (void)openBrowserActionViewControllerDidSelectRefresh:(id)arg1;
- (void)postViewController:(id)arg1 didFinishWithPost:(id)arg2;
- (void)postToRedditPresentedFromViewController:(id)arg1;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)didTapOverflow:(id)arg1;
- (void)loadHTMLString:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)wrapHTMLStringForDisplay:(id)arg1;
- (id)webPageTitle;
- (id)originalRequestURL;
- (id)currentURL;
- (_Bool)prefersTabBarHidden;
- (void)didTapBack;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UpvotedFeedViewController : FeedViewController
{
}

- (id)analyticsScreenViewName;
- (_Bool)feedPostTextViewShouldDimText:(id)arg1;
- (void)viewDidLoad;

@end

@interface ScrollViewIndexBar : BaseView
{
    NSArray *_indexes;
    id <ScrollViewIndexBarDelegate> _delegate;
    double _itemSize;
    ScrollViewIndexBarIndicatorView *_indicatorView;
    NSArray *_indexViews;
}

@property(copy, nonatomic) NSArray *indexViews; // @synthesize indexViews=_indexViews;
@property(retain, nonatomic) ScrollViewIndexBarIndicatorView *indicatorView; // @synthesize indicatorView=_indicatorView;
@property(nonatomic) double itemSize; // @synthesize itemSize=_itemSize;
@property(nonatomic) __weak id <ScrollViewIndexBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSArray *indexes; // @synthesize indexes=_indexes;
- (void).cxx_destruct;
- (void)adjustIndexViewTint:(SEL)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)indicatorFrameForIndex:(long long)arg1;
- (long long)indexForPoint:(struct CGPoint)arg1;
- (id)makeViewForIndex:(id)arg1;
@property(readonly, nonatomic) double itemOffset;
- (void)layoutSubviews;
- (void)configureWithIndexes:(id)arg1;

@end

@interface StackedView : BaseView <UIScrollViewDelegate>
{
    _Bool _dimSideViews;
    double _pageContentWidth;
    double _padding;
    id <StackedViewDelegate> _stackViewDelegate;
    BaseScrollView *_pageScrollView;
    NSMutableArray *_childrenViews;
    UIView *_stackedContent;
}

@property(retain, nonatomic) UIView *stackedContent; // @synthesize stackedContent=_stackedContent;
@property(retain, nonatomic) NSMutableArray *childrenViews; // @synthesize childrenViews=_childrenViews;
@property(retain, nonatomic) BaseScrollView *pageScrollView; // @synthesize pageScrollView=_pageScrollView;
@property(nonatomic) __weak id <StackedViewDelegate> stackViewDelegate; // @synthesize stackViewDelegate=_stackViewDelegate;
@property(nonatomic) _Bool dimSideViews; // @synthesize dimSideViews=_dimSideViews;
@property(nonatomic) double padding; // @synthesize padding=_padding;
@property(nonatomic) double pageContentWidth; // @synthesize pageContentWidth=_pageContentWidth;
- (void).cxx_destruct;
- (void)dimViewsExcept:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (double)stackContentWidth;
- (void)popCellVCs:(id)arg1 fromStackAnimated:(_Bool)arg2;
- (void)popCellVC:(id)arg1 fromStackAnimated:(_Bool)arg2;
- (id)popCellVCFromStackAnimated:(_Bool)arg1;
- (void)insertCellVC:(id)arg1 atIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)addCellVCToStack:(id)arg1 animated:(_Bool)arg2;
- (void)scrollToCellVC:(id)arg1 animated:(_Bool)arg2;
- (void)fixWidths;
@property(readonly, nonatomic) double pageWidth;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DeeplinkFactory : NSObject
{
}

+ (id)bestWebViewControllerForURL:(id)arg1;
+ (id)viewControllerForDeeplinkURL:(id)arg1;
+ (_Bool)isYouTubeURL:(id)arg1;
+ (_Bool)isFrontPageURL:(id)arg1;
+ (_Bool)isExternalURL:(id)arg1;

@end

@interface FeedPostView : BaseView
{
    _Bool _shouldCropImage;
    _Bool _shouldShowSelfText;
    _Bool _shouldHideOverMenu;
    _Bool _shouldAlwaysShowContent;
    FeedPostTitleView *_titleView;
    FeedPostTitleViewExpanded *_titleViewExpanded;
    FeedPostTextView *_textView;
    FeedPostSelfTextView *_selfTextView;
    FeedPostImageView *_imageView;
    FeedPostVideoView *_videoView;
    FeedPostYouTubeEmbeddedView *_youTubeEmbeddedView;
    FeedPostWebLinkView *_webLinkView;
    FeedPostCommentsBarView *_commentsBarView;
    Post *_post;
    MPNativeAd *_mpAd;
    NSObject *_delegate;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 delegateOrNil:(id)arg2;
+ (struct CGSize)calculatedSizeWithData:(id)arg1 shouldCropImage:(_Bool)arg2 shouldShowSelfText:(_Bool)arg3 shouldAlwaysShowContent:(_Bool)arg4 delegateOrNil:(id)arg5;
+ (_Bool)shouldHideThumbnailForPost:(id)arg1;
+ (_Bool)shouldHideImageViewForPost:(id)arg1;
@property(nonatomic) __weak NSObject *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MPNativeAd *mpAd; // @synthesize mpAd=_mpAd;
@property(nonatomic) _Bool shouldAlwaysShowContent; // @synthesize shouldAlwaysShowContent=_shouldAlwaysShowContent;
@property(nonatomic) _Bool shouldHideOverMenu; // @synthesize shouldHideOverMenu=_shouldHideOverMenu;
@property(nonatomic) _Bool shouldShowSelfText; // @synthesize shouldShowSelfText=_shouldShowSelfText;
@property(nonatomic) _Bool shouldCropImage; // @synthesize shouldCropImage=_shouldCropImage;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(retain, nonatomic) FeedPostCommentsBarView *commentsBarView; // @synthesize commentsBarView=_commentsBarView;
@property(retain, nonatomic) FeedPostWebLinkView *webLinkView; // @synthesize webLinkView=_webLinkView;
@property(retain, nonatomic) FeedPostYouTubeEmbeddedView *youTubeEmbeddedView; // @synthesize youTubeEmbeddedView=_youTubeEmbeddedView;
@property(retain, nonatomic) FeedPostVideoView *videoView; // @synthesize videoView=_videoView;
@property(retain, nonatomic) FeedPostImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) FeedPostSelfTextView *selfTextView; // @synthesize selfTextView=_selfTextView;
@property(retain, nonatomic) FeedPostTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) FeedPostTitleViewExpanded *titleViewExpanded; // @synthesize titleViewExpanded=_titleViewExpanded;
@property(retain, nonatomic) FeedPostTitleView *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (void)didBecomeFullyVisible;
- (void)didEndDisplaying;
- (void)willBeginDisplaying;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPVASTManager : NSObject
{
}

+ (_Bool)VASTResponseContainsAtLeastOneAd:(id)arg1;
+ (id)wrappersForVASTResponse:(id)arg1;
+ (void)parseVASTResponseFromData:(id)arg1 depth:(long long)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)fetchVASTWithData:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)fetchVASTWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface StackedNavigationViewController : BaseViewController <StackedViewDelegate, StackedViewControllerDelegate, NavigationProtocol>
{
    UIViewController *_currentViewController;
    StackedView *_stackedView;
    NSArray *_viewControllerStack;
}

@property(copy, nonatomic) NSArray *viewControllerStack; // @synthesize viewControllerStack=_viewControllerStack;
@property(retain, nonatomic) StackedView *stackedView; // @synthesize stackedView=_stackedView;
@property(retain, nonatomic) UIViewController *currentViewController; // @synthesize currentViewController=_currentViewController;
- (void).cxx_destruct;
- (void)stackedViewController:(id)arg1 didTapFocusAnimated:(_Bool)arg2;
- (void)stackedViewController:(id)arg1 didTapCloseAnimated:(_Bool)arg2;
- (void)stackedView:(id)arg1 didFocusCellVC:(id)arg2;
- (_Bool)containsButNotRoot:(id)arg1;
- (id)wrapperForViewController:(id)arg1;
- (long long)indexForViewController:(id)arg1;
- (void)removeCell:(id)arg1 animated:(_Bool)arg2;
- (void)removeCells:(id)arg1 animated:(_Bool)arg2;
- (id)popToRootViewControllerAnimated:(_Bool)arg1;
- (id)popToViewController:(id)arg1 animated:(_Bool)arg2;
- (id)popViewControllerAnimated:(_Bool)arg1;
- (void)popViewController:(id)arg1 animated:(_Bool)arg2;
- (void)insertViewController:(id)arg1 atIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)universalPushViewController:(id)arg1 animated:(_Bool)arg2 fromViewController:(id)arg3;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) UIViewController *topViewController;
- (long long)preferredStatusBarStyle;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)initialize;
- (id)init;
- (id)initWithRootViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Theme : NSObject
{
    NSString *_themeName;
    UIColor *_navTextColor;
    UIColor *_bodyTextColor;
    UIColor *_metaTextColor;
    UIColor *_linkTextColor;
    UIColor *_buttonTextColor;
    UIColor *_buttonHighlightTextColor;
    UIColor *_flairTextColor;
    UIColor *_navBarColor;
    UIColor *_navIconColor;
    UIColor *_bodyColor;
    UIColor *_listBackgroundColor;
    UIColor *_toastColor;
    UIColor *_dimmerColor;
    UIColor *_canvasColor;
    UIColor *_lineColor;
    UIColor *_buttonColor;
    UIColor *_activeColor;
    UIColor *_flairBackgroundColor;
    UIColor *_highlightColor;
    UIColor *_logoColor;
}

@property(readonly, nonatomic) UIColor *logoColor; // @synthesize logoColor=_logoColor;
@property(readonly, nonatomic) UIColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(readonly, nonatomic) UIColor *flairBackgroundColor; // @synthesize flairBackgroundColor=_flairBackgroundColor;
@property(readonly, nonatomic) UIColor *activeColor; // @synthesize activeColor=_activeColor;
@property(readonly, nonatomic) UIColor *buttonColor; // @synthesize buttonColor=_buttonColor;
@property(readonly, nonatomic) UIColor *lineColor; // @synthesize lineColor=_lineColor;
@property(readonly, nonatomic) UIColor *canvasColor; // @synthesize canvasColor=_canvasColor;
@property(readonly, nonatomic) UIColor *dimmerColor; // @synthesize dimmerColor=_dimmerColor;
@property(readonly, nonatomic) UIColor *toastColor; // @synthesize toastColor=_toastColor;
@property(readonly, nonatomic) UIColor *listBackgroundColor; // @synthesize listBackgroundColor=_listBackgroundColor;
@property(readonly, nonatomic) UIColor *bodyColor; // @synthesize bodyColor=_bodyColor;
@property(readonly, nonatomic) UIColor *navIconColor; // @synthesize navIconColor=_navIconColor;
@property(readonly, nonatomic) UIColor *navBarColor; // @synthesize navBarColor=_navBarColor;
@property(readonly, nonatomic) UIColor *flairTextColor; // @synthesize flairTextColor=_flairTextColor;
@property(readonly, nonatomic) UIColor *buttonHighlightTextColor; // @synthesize buttonHighlightTextColor=_buttonHighlightTextColor;
@property(readonly, nonatomic) UIColor *buttonTextColor; // @synthesize buttonTextColor=_buttonTextColor;
@property(readonly, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(readonly, nonatomic) UIColor *metaTextColor; // @synthesize metaTextColor=_metaTextColor;
@property(readonly, nonatomic) UIColor *bodyTextColor; // @synthesize bodyTextColor=_bodyTextColor;
@property(readonly, nonatomic) UIColor *navTextColor; // @synthesize navTextColor=_navTextColor;
@property(readonly, nonatomic) NSString *themeName; // @synthesize themeName=_themeName;
- (void).cxx_destruct;
@property(readonly, nonatomic) id statusBarStyle;
@property(readonly, nonatomic) NSString *feedPostThumbnailPlaceholderImageName;
@property(readonly, nonatomic) NSString *redditLogoImageName;
@property(readonly, nonatomic) NSString *homeTabIconImageSelectedName;
@property(readonly, nonatomic) NSString *homeTabIconImageName;
@property(readonly, nonatomic) UIColor *periwinkleColor;
@property(readonly, nonatomic) UIColor *alienBlueColor;
@property(readonly, nonatomic) UIColor *blueColor;
@property(readonly, nonatomic) UIColor *mintColor;
@property(readonly, nonatomic) UIColor *greenColor;
@property(readonly, nonatomic) UIColor *limeColor;
@property(readonly, nonatomic) UIColor *mangoColor;
@property(readonly, nonatomic) UIColor *orangeColor;
@property(readonly, nonatomic) UIColor *orangeRedColor;
@property(readonly, nonatomic) UIColor *spoilerColor;
@property(readonly, nonatomic) UIColor *nsfwColor;
@property(readonly, nonatomic) UIColor *warningColor;
@property(readonly, nonatomic) UIColor *inactiveColor;
@property(readonly, nonatomic) UIColor *overlayColor;
@property(readonly, nonatomic) UIFont *addressFont;
@property(readonly, nonatomic) UIFont *subheaderFont;
@property(readonly, nonatomic) UIFont *buttonFont;
@property(readonly, nonatomic) UIFont *metadataFontBold;
@property(readonly, nonatomic) UIFont *metadataFont;
@property(readonly, nonatomic) UIFont *boldBodyFont;
@property(readonly, nonatomic) UIFont *bodyFont;
@property(readonly, nonatomic) UIFont *titleFontCompact;
@property(readonly, nonatomic) UIFont *titleFontBold;
@property(readonly, nonatomic) UIFont *titleFont;
@property(readonly, nonatomic) UIFont *headlineFontBold;
@property(readonly, nonatomic) UIFont *headlineFont;
@property(readonly, nonatomic) double addressFontSize;
@property(readonly, nonatomic) double subheaderFontSize;
@property(readonly, nonatomic) double buttonFontSize;
@property(readonly, nonatomic) double metadataFontSize;
@property(readonly, nonatomic) double bodyFontSize;
@property(readonly, nonatomic) double titleFontCompactSize;
@property(readonly, nonatomic) double titleFontSize;
@property(readonly, nonatomic) double headlineFontSize;
- (double)fontSizeDelta;

@end

@interface RedditTheme : Theme
{
}

- (id)flairTextColor;
- (id)buttonHighlightTextColor;
- (id)buttonTextColor;
- (id)linkTextColor;
- (id)metaTextColor;
- (id)bodyTextColor;
- (id)navTextColor;
- (id)logoColor;
- (id)highlightColor;
- (id)flairBackgroundColor;
- (id)activeColor;
- (id)buttonColor;
- (id)dimmerColor;
- (id)toastColor;
- (id)lineColor;
- (id)canvasColor;
- (id)listBackgroundColor;
- (id)bodyColor;
- (id)navIconColor;
- (id)navBarColor;
- (id)themeName;

@end

@interface NightTheme : Theme
{
}

- (id)feedPostThumbnailPlaceholderImageName;
- (id)redditLogoImageName;
- (id)homeTabIconImageSelectedName;
- (id)statusBarStyle;
- (id)flairTextColor;
- (id)buttonHighlightTextColor;
- (id)buttonTextColor;
- (id)linkTextColor;
- (id)metaTextColor;
- (id)bodyTextColor;
- (id)navTextColor;
- (id)logoColor;
- (id)highlightColor;
- (id)flairBackgroundColor;
- (id)inactiveColor;
- (id)activeColor;
- (id)buttonColor;
- (id)dimmerColor;
- (id)toastColor;
- (id)lineColor;
- (id)canvasColor;
- (id)listBackgroundColor;
- (id)bodyColor;
- (id)navIconColor;
- (id)navBarColor;
- (id)themeName;

@end

@interface PonyTheme : Theme
{
}

- (id)feedPostThumbnailPlaceholderImageName;
- (id)homeTabIconImageSelectedName;
- (id)homeTabIconImageName;
- (id)flairTextColor;
- (id)buttonHighlightTextColor;
- (id)buttonTextColor;
- (id)linkTextColor;
- (id)metaTextColor;
- (id)bodyTextColor;
- (id)navTextColor;
- (id)logoColor;
- (id)highlightColor;
- (id)flairBackgroundColor;
- (id)activeColor;
- (id)buttonColor;
- (id)dimmerColor;
- (id)toastColor;
- (id)lineColor;
- (id)canvasColor;
- (id)listBackgroundColor;
- (id)bodyColor;
- (id)navIconColor;
- (id)navBarColor;
- (id)themeName;

@end

@interface AlienBlueTheme : Theme
{
}

- (id)feedPostThumbnailPlaceholderImageName;
- (id)homeTabIconImageSelectedName;
- (id)homeTabIconImageName;
- (id)flairTextColor;
- (id)buttonHighlightTextColor;
- (id)buttonTextColor;
- (id)linkTextColor;
- (id)metaTextColor;
- (id)bodyTextColor;
- (id)navTextColor;
- (id)logoColor;
- (id)highlightColor;
- (id)flairBackgroundColor;
- (id)activeColor;
- (id)buttonColor;
- (id)dimmerColor;
- (id)toastColor;
- (id)lineColor;
- (id)canvasColor;
- (id)listBackgroundColor;
- (id)bodyColor;
- (id)navIconColor;
- (id)navBarColor;
- (id)themeName;

@end

@interface TreesTheme : Theme
{
}

- (id)feedPostThumbnailPlaceholderImageName;
- (id)homeTabIconImageSelectedName;
- (id)homeTabIconImageName;
- (id)flairTextColor;
- (id)buttonHighlightTextColor;
- (id)buttonTextColor;
- (id)linkTextColor;
- (id)metaTextColor;
- (id)bodyTextColor;
- (id)navTextColor;
- (id)logoColor;
- (id)highlightColor;
- (id)flairBackgroundColor;
- (id)activeColor;
- (id)buttonColor;
- (id)dimmerColor;
- (id)toastColor;
- (id)lineColor;
- (id)canvasColor;
- (id)listBackgroundColor;
- (id)bodyColor;
- (id)navIconColor;
- (id)navBarColor;
- (id)themeName;

@end

@interface ThemeGuidance : NSObject
{
    Theme *_currentTheme;
    NSHashTable *_observerPool;
}

+ (void)removeThemeObserver:(id)arg1;
+ (void)addThemeObserver:(id)arg1;
+ (id)currentGuidance;
@property(retain, nonatomic) NSHashTable *observerPool; // @synthesize observerPool=_observerPool;
@property(retain, nonatomic) Theme *currentTheme; // @synthesize currentTheme=_currentTheme;
- (void).cxx_destruct;
- (void)notifyThemeObservers;
@property(readonly, nonatomic) _Bool isTreesTheme;
@property(readonly, nonatomic) _Bool isAlienBlueTheme;
@property(readonly, nonatomic) _Bool isPonyTheme;
@property(readonly, nonatomic) _Bool isNightTheme;
@property(readonly, nonatomic) _Bool isRedditTheme;
- (id)init;

@end

@interface MultiFeedViewController : FeedViewController <BaseModelObserver>
{
    _Bool _isRecommendationTab;
    long long _pageIndex;
    Multi *_multi;
}

@property(retain, nonatomic) Multi *multi; // @synthesize multi=_multi;
@property(nonatomic) _Bool isRecommendationTab; // @synthesize isRecommendationTab=_isRecommendationTab;
@property(nonatomic) long long pageIndex; // @synthesize pageIndex=_pageIndex;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (id)overflowItems;
- (id)pageItemText;
- (void)configureWithMulti:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedObjectModel : BaseModel
{
}

@end

@interface BaseTextView : UITextView
{
    NSString *_placeholderText;
    id <BaseTextViewDelegate> _textViewDelegate;
    UITextView *_placeHolderLabel;
}

@property(retain, nonatomic) UITextView *placeHolderLabel; // @synthesize placeHolderLabel=_placeHolderLabel;
@property(nonatomic) __weak id <BaseTextViewDelegate> textViewDelegate; // @synthesize textViewDelegate=_textViewDelegate;
@property(copy, nonatomic) NSString *placeholderText; // @synthesize placeholderText=_placeholderText;
- (void).cxx_destruct;
- (void)textChanged:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setText:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setTextContainerInset:(struct UIEdgeInsets)arg1;
- (void)setTextColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface EDSunriseSet : NSObject
{
    NSDate *_date;
    NSDate *_sunset;
    NSDate *_sunrise;
    NSDate *_civilTwilightStart;
    NSDate *_civilTwilightEnd;
    NSDate *_nauticalTwilightStart;
    NSDate *_nauticalTwilightEnd;
    NSDate *_astronomicalTwilightStart;
    NSDate *_astronomicalTwilightEnd;
    NSDateComponents *_localSunrise;
    NSDateComponents *_localSunset;
    NSDateComponents *_localCivilTwilightStart;
    NSDateComponents *_localCivilTwilightEnd;
    NSDateComponents *_localNauticalTwilightStart;
    NSDateComponents *_localNauticalTwilightEnd;
    NSDateComponents *_localAstronomicalTwilightStart;
    NSDateComponents *_localAstronomicalTwilightEnd;
    double _latitude;
    double _longitude;
    NSTimeZone *_timezone;
    NSCalendar *_calendar;
    NSTimeZone *_utcTimeZone;
}

+ (id)sunrisesetWithDate:(id)arg1 timezone:(id)arg2 latitude:(double)arg3 longitude:(double)arg4;
@property(retain, nonatomic) NSTimeZone *utcTimeZone; // @synthesize utcTimeZone=_utcTimeZone;
@property(retain, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) NSTimeZone *timezone; // @synthesize timezone=_timezone;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(retain) NSDateComponents *localAstronomicalTwilightEnd; // @synthesize localAstronomicalTwilightEnd=_localAstronomicalTwilightEnd;
@property(retain) NSDateComponents *localAstronomicalTwilightStart; // @synthesize localAstronomicalTwilightStart=_localAstronomicalTwilightStart;
@property(retain) NSDateComponents *localNauticalTwilightEnd; // @synthesize localNauticalTwilightEnd=_localNauticalTwilightEnd;
@property(retain) NSDateComponents *localNauticalTwilightStart; // @synthesize localNauticalTwilightStart=_localNauticalTwilightStart;
@property(retain) NSDateComponents *localCivilTwilightEnd; // @synthesize localCivilTwilightEnd=_localCivilTwilightEnd;
@property(retain) NSDateComponents *localCivilTwilightStart; // @synthesize localCivilTwilightStart=_localCivilTwilightStart;
@property(retain) NSDateComponents *localSunset; // @synthesize localSunset=_localSunset;
@property(retain) NSDateComponents *localSunrise; // @synthesize localSunrise=_localSunrise;
@property(retain) NSDate *astronomicalTwilightEnd; // @synthesize astronomicalTwilightEnd=_astronomicalTwilightEnd;
@property(retain) NSDate *astronomicalTwilightStart; // @synthesize astronomicalTwilightStart=_astronomicalTwilightStart;
@property(retain) NSDate *nauticalTwilightEnd; // @synthesize nauticalTwilightEnd=_nauticalTwilightEnd;
@property(retain) NSDate *nauticalTwilightStart; // @synthesize nauticalTwilightStart=_nauticalTwilightStart;
@property(retain) NSDate *civilTwilightEnd; // @synthesize civilTwilightEnd=_civilTwilightEnd;
@property(retain) NSDate *civilTwilightStart; // @synthesize civilTwilightStart=_civilTwilightStart;
@property(retain) NSDate *sunrise; // @synthesize sunrise=_sunrise;
@property(retain) NSDate *sunset; // @synthesize sunset=_sunset;
@property(retain) NSDate *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (id)initWithDate:(id)arg1 timezone:(id)arg2 latitude:(double)arg3 longitude:(double)arg4;
- (int)sunRiseSetHelperForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 altitude:(double)arg6 upper_limb:(int)arg7 trise:(double *)arg8 tset:(double *)arg9;
- (int)astronomicalTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)nauticalTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)civilTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)sunRiseSetForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (void)sun_RA_decAtDay:(double)arg1 RA:(double *)arg2 decl:(double *)arg3 r:(double *)arg4;
- (void)sunposAtDay:(double)arg1 longitude:(double *)arg2 r:(double *)arg3;
- (double)GMST0:(double)arg1;
- (double)rev180:(double)arg1;
- (double)revolution:(double)arg1;
- (void)calculate;
- (void)calculateTwilight;
- (void)calculateSunriseSunset;
- (id)description;
- (id)init;
- (id)localTime:(id)arg1;
- (id)utcTime:(id)arg1 withOffset:(double)arg2;

@end

@interface MPNativeAdRenderingImageLoader : NSObject
{
    MPNativeAdRendererImageHandler *_imageHandler;
}

@property(retain, nonatomic) MPNativeAdRendererImageHandler *imageHandler; // @synthesize imageHandler=_imageHandler;
- (void).cxx_destruct;
- (void)loadImageForURL:(id)arg1 intoImageView:(id)arg2;
- (id)initWithImageHandler:(id)arg1;

@end

@interface Subreddit : BaseModel <NSSecureCoding>
{
    _Bool _subscribed;
    _Bool _favorited;
    _Bool _nsfw;
    _Bool _banned;
    _Bool _quarantined;
    _Bool _moderator;
    _Bool _hasShownNSFWPopup;
    NSString *_descriptionText;
    NSString *_displayName;
    NSString *_submitText;
    NSString *_title;
    NSString *_iconImageURLString;
    NSString *_bannerImageURLString;
    UIColor *_preferredColor;
    long long _subscribersCount;
    long long _activeCount;
    NSString *_subredditType;
    unsigned long long _feedMode;
    unsigned long long _sortType;
    unsigned long long _timeMode;
    unsigned long long _suggestedCommentSortType;
}

+ (void)subscribeToSubreddit:(id)arg1 shouldSubscribe:(_Bool)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
+ (_Bool)supportsSecureCoding;
+ (id)subredditFromData:(id)arg1;
@property(nonatomic) unsigned long long suggestedCommentSortType; // @synthesize suggestedCommentSortType=_suggestedCommentSortType;
@property(nonatomic) unsigned long long timeMode; // @synthesize timeMode=_timeMode;
@property(nonatomic) unsigned long long sortType; // @synthesize sortType=_sortType;
@property(nonatomic) unsigned long long feedMode; // @synthesize feedMode=_feedMode;
@property(copy, nonatomic) NSString *subredditType; // @synthesize subredditType=_subredditType;
@property(nonatomic) _Bool hasShownNSFWPopup; // @synthesize hasShownNSFWPopup=_hasShownNSFWPopup;
@property(nonatomic) _Bool moderator; // @synthesize moderator=_moderator;
@property(nonatomic) _Bool quarantined; // @synthesize quarantined=_quarantined;
@property(nonatomic) _Bool banned; // @synthesize banned=_banned;
@property(nonatomic) _Bool nsfw; // @synthesize nsfw=_nsfw;
@property(nonatomic) _Bool favorited; // @synthesize favorited=_favorited;
@property(nonatomic) _Bool subscribed; // @synthesize subscribed=_subscribed;
@property(nonatomic) long long activeCount; // @synthesize activeCount=_activeCount;
@property(nonatomic) long long subscribersCount; // @synthesize subscribersCount=_subscribersCount;
@property(copy, nonatomic) UIColor *preferredColor; // @synthesize preferredColor=_preferredColor;
@property(copy, nonatomic) NSString *bannerImageURLString; // @synthesize bannerImageURLString=_bannerImageURLString;
@property(copy, nonatomic) NSString *iconImageURLString; // @synthesize iconImageURLString=_iconImageURLString;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *submitText; // @synthesize submitText=_submitText;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
- (void).cxx_destruct;
- (id)selectorsToObserveChanges;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface MPCollectionViewAdPlacer : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, MPStreamAdPlacerDelegate, UICollectionViewDelegateFlowLayout>
{
    id <MPCollectionViewAdPlacerDelegate> _delegate;
    MPStreamAdPlacer *_streamAdPlacer;
    UICollectionView *_collectionView;
    id <UICollectionViewDataSource> _originalDataSource;
    id <UICollectionViewDelegate> _originalDelegate;
    MPTimer *_insertionTimer;
}

+ (id)placerWithCollectionView:(id)arg1 viewController:(id)arg2 adPositioning:(id)arg3 rendererConfigurations:(id)arg4;
+ (id)placerWithCollectionView:(id)arg1 viewController:(id)arg2 rendererConfigurations:(id)arg3;
@property(retain, nonatomic) MPTimer *insertionTimer; // @synthesize insertionTimer=_insertionTimer;
@property(nonatomic) __weak id <UICollectionViewDelegate> originalDelegate; // @synthesize originalDelegate=_originalDelegate;
@property(nonatomic) __weak id <UICollectionViewDataSource> originalDataSource; // @synthesize originalDataSource=_originalDataSource;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) MPStreamAdPlacer *streamAdPlacer; // @synthesize streamAdPlacer=_streamAdPlacer;
@property(nonatomic) __weak id <MPCollectionViewAdPlacerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (_Bool)collectionView:(id)arg1 shouldShowMenuForItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)nativeAdWillLeaveApplicationFromStreamAdPlacer:(id)arg1;
- (void)nativeAdDidDismissModalForStreamAdPlacer:(id)arg1;
- (void)nativeAdWillPresentModalForStreamAdPlacer:(id)arg1;
- (void)adPlacer:(id)arg1 didRemoveAdsAtIndexPaths:(id)arg2;
- (void)adPlacer:(id)arg1 didLoadAdAtIndexPath:(id)arg2;
- (void)updateVisibleCells;
- (void)loadAdsForAdUnitID:(id)arg1 targeting:(id)arg2;
- (void)loadAdsForAdUnitID:(id)arg1;
- (void)dealloc;
- (id)initWithCollectionView:(id)arg1 viewController:(id)arg2 adPositioning:(id)arg3 rendererConfigurations:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CommentsHeaderView : BaseView
{
    _Bool _hasLoadedOnce;
    _Bool _isPanning;
    id <CommentsHeaderViewDelegate> _delegate;
    UIScrollView *_parentScrollView;
    Post *_post;
    double _originalHeight;
    BaseImageView *_headerImageView;
    BaseImageView *_topGradientView;
    BaseView *_headerOverlayView;
    double _scrollViewInitialOffset;
}

@property(nonatomic) _Bool isPanning; // @synthesize isPanning=_isPanning;
@property(nonatomic) double scrollViewInitialOffset; // @synthesize scrollViewInitialOffset=_scrollViewInitialOffset;
@property(retain, nonatomic) BaseView *headerOverlayView; // @synthesize headerOverlayView=_headerOverlayView;
@property(retain, nonatomic) BaseImageView *topGradientView; // @synthesize topGradientView=_topGradientView;
@property(retain, nonatomic) BaseImageView *headerImageView; // @synthesize headerImageView=_headerImageView;
@property(nonatomic) double originalHeight; // @synthesize originalHeight=_originalHeight;
@property(nonatomic) _Bool hasLoadedOnce; // @synthesize hasLoadedOnce=_hasLoadedOnce;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak UIScrollView *parentScrollView; // @synthesize parentScrollView=_parentScrollView;
@property(nonatomic) __weak id <CommentsHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateWithNewYOffset:(double)arg1;
- (void)layoutSubviews;
- (double)defaultHeight;
@property(readonly, nonatomic) double viewHeight;
- (void)configureWithPostData:(id)arg1;
- (void)didTouch:(id)arg1;
- (void)handlePan:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FeedPostVideoView : BaseView <UIGestureRecognizerDelegate>
{
    id <FeedPostVideoViewDelegate> _delegate;
    Post *_post;
    ContentVideoView *_videoView;
    UITapGestureRecognizer *_tapGesture;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 shouldCropPreview:(_Bool)arg2 shouldAlwaysShowVideo:(_Bool)arg3 delegate:(id)arg4;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(retain, nonatomic) ContentVideoView *videoView; // @synthesize videoView=_videoView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak id <FeedPostVideoViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTapVideo;
- (void)didBecomeFullyVisible;
- (void)didEndDisplaying;
- (void)willBeginDisplaying;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPNativeAdData : NSObject
{
    NSString *_adUnitID;
    MPNativeAd *_ad;
}

@property(retain, nonatomic) MPNativeAd *ad; // @synthesize ad=_ad;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;

@end

@interface MPAdPlacerInvocation : NSObject
{
}

+ (long long)integerResultForInvocation:(id)arg1 defaultValue:(long long)arg2;
+ (id)resultForInvocation:(id)arg1 defaultValue:(id)arg2;
+ (_Bool)boolResultForInvocation:(id)arg1 defaultValue:(_Bool)arg2;
+ (id)invokeForTarget:(id)arg1 with3ArgIntSelector:(SEL)arg2 firstArg:(id)arg3 secondArg:(long long)arg4 thirdArg:(id)arg5 streamAdPlacer:(id)arg6;
+ (id)invokeForTarget:(id)arg1 with3ArgSelector:(SEL)arg2 firstArg:(id)arg3 secondArg:(id)arg4 thirdArg:(id)arg5 streamAdPlacer:(id)arg6;
+ (id)invokeForTarget:(id)arg1 with2ArgSelector:(SEL)arg2 firstArg:(id)arg3 secondArg:(id)arg4 streamAdPlacer:(id)arg5;
+ (id)invocationForTarget:(id)arg1 selector:(SEL)arg2 indexPath:(id)arg3 streamAdPlacer:(id)arg4;

@end

@interface FeedPostSponsoredImageView : BaseView <MPNativeAdRendering>
{
    BaseLabel *_titleLabel;
    BaseLabel *_mainTextLabel;
    BaseLabel *_callToActionLabel;
    BaseImageView *_iconImageView;
    BaseImageView *_mainImageView;
    BaseImageView *_privacyInformationIconImageView;
    unsigned long long _mode;
    BaseView *_linkView;
    BaseImageView *_linkButton;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 forMode:(unsigned long long)arg2;
+ (double)textHeightForMode:(unsigned long long)arg1 text:(id)arg2;
+ (id)fontForMode:(unsigned long long)arg1;
+ (double)cachedTextWidthForMode:(unsigned long long)arg1;
@property(retain, nonatomic) BaseImageView *linkButton; // @synthesize linkButton=_linkButton;
@property(retain, nonatomic) BaseView *linkView; // @synthesize linkView=_linkView;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) BaseImageView *privacyInformationIconImageView; // @synthesize privacyInformationIconImageView=_privacyInformationIconImageView;
@property(retain, nonatomic) BaseImageView *mainImageView; // @synthesize mainImageView=_mainImageView;
@property(retain, nonatomic) BaseImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(retain, nonatomic) BaseLabel *callToActionLabel; // @synthesize callToActionLabel=_callToActionLabel;
@property(retain, nonatomic) BaseLabel *mainTextLabel; // @synthesize mainTextLabel=_mainTextLabel;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (id)nativePrivacyInformationIconImageView;
- (id)nativeMainImageView;
- (id)nativeIconImageView;
- (id)nativeCallToActionTextLabel;
- (id)nativeTitleTextLabel;
- (id)nativeMainTextLabel;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPIdentityProvider : NSObject
{
}

+ (_Bool)isAdvertisingIdAllZero;
+ (_Bool)frequencyCappingIdUsageEnabled;
+ (void)setFrequencyCappingIdUsageEnabled:(_Bool)arg1;
+ (id)mopubIdentifier:(_Bool)arg1;
+ (id)identifierFromASIdentifierManager:(_Bool)arg1;
+ (_Bool)advertisingTrackingEnabled;
+ (id)_identifier:(_Bool)arg1;
+ (id)obfuscatedIdentifier;
+ (id)identifier;

@end

@interface MPTableViewCellImpressionTracker : NSObject
{
    UITableView *_tableView;
    id <MPTableViewCellImpressionTrackerDelegate> _delegate;
    NSTimer *_timer;
}

@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak id <MPTableViewCellImpressionTrackerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (_Bool)isMajorityOfCellAtIndexPathVisible:(id)arg1;
- (void)tick:(id)arg1;
- (void)stopTracking;
- (void)startTracking;
- (void)dealloc;
- (id)initWithTableView:(id)arg1 delegate:(id)arg2;

@end

@interface MPMRAIDBannerCustomEvent : MPBannerCustomEvent <MRControllerDelegate>
{
    MRController *_mraidController;
}

@property(retain, nonatomic) MRController *mraidController; // @synthesize mraidController=_mraidController;
- (void).cxx_destruct;
- (void)appShouldResumeFromAd:(id)arg1;
- (void)appShouldSuspendForAd:(id)arg1;
- (void)closeButtonPressed;
- (void)adDidFailToLoad:(id)arg1;
- (void)adDidLoad:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (id)adConfiguration;
- (id)adUnitId;
- (id)location;
- (void)requestAdWithSize:(struct CGSize)arg1 customEventInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <MPPrivateBannerCustomEventDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RefreshControl : UIControl
{
    _Bool _isSpinning;
    _Bool _disabled;
    _Bool _disableObservingPullToRefresh;
    UIScrollView *_scrollView;
    AnimatedSpinner *_spinner;
    UIColor *_preferredSpinnerColor;
    double _baseScrollViewOffsetY;
    struct UIEdgeInsets _originalScrollViewContentInsets;
}

@property(nonatomic) double baseScrollViewOffsetY; // @synthesize baseScrollViewOffsetY=_baseScrollViewOffsetY;
@property(nonatomic) _Bool disableObservingPullToRefresh; // @synthesize disableObservingPullToRefresh=_disableObservingPullToRefresh;
@property(nonatomic) _Bool disabled; // @synthesize disabled=_disabled;
@property(copy, nonatomic) UIColor *preferredSpinnerColor; // @synthesize preferredSpinnerColor=_preferredSpinnerColor;
@property(retain, nonatomic) AnimatedSpinner *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) struct UIEdgeInsets originalScrollViewContentInsets; // @synthesize originalScrollViewContentInsets=_originalScrollViewContentInsets;
@property(nonatomic) _Bool isSpinning; // @synthesize isSpinning=_isSpinning;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)hideSpinner:(CDUnknownBlockType)arg1;
- (void)forcePullToRefresh;
- (void)endSpinningWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)startSpinning;
- (void)checkSiblings;
- (id)init;
- (void)dealloc;

@end

@interface SelectableTextView : BaseTextView
{
    AttributedLabel *_attributedLabel;
}

@property(nonatomic) __weak AttributedLabel *attributedLabel; // @synthesize attributedLabel=_attributedLabel;
- (void).cxx_destruct;
- (_Bool)resignFirstResponder;

@end

@interface AttributedLabel : BaseView <AttributedLabelRegularDelegate, AttributedLabelTableViewDelegate, UITextViewDelegate>
{
    _Bool _selected;
    _Bool _selectable;
    UIFont *_font;
    UIColor *_textColor;
    long long _numberOfLines;
    long long _textAlignment;
    id <AttributedLabelDelegate> _delegate;
    NSDictionary *_linkAttributes;
    NSDictionary *_activeLinkAttributes;
    NSString *_selectedTextRepresentation;
    NSArray *_internalLabels;
    UILongPressGestureRecognizer *_longPressRecognizer;
    SelectableTextView *_selectableView;
}

@property(retain, nonatomic) SelectableTextView *selectableView; // @synthesize selectableView=_selectableView;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressRecognizer; // @synthesize longPressRecognizer=_longPressRecognizer;
@property(copy, nonatomic) NSArray *internalLabels; // @synthesize internalLabels=_internalLabels;
@property(retain, nonatomic) NSString *selectedTextRepresentation; // @synthesize selectedTextRepresentation=_selectedTextRepresentation;
@property(nonatomic) _Bool selectable; // @synthesize selectable=_selectable;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) NSDictionary *activeLinkAttributes; // @synthesize activeLinkAttributes=_activeLinkAttributes;
@property(retain, nonatomic) NSDictionary *linkAttributes; // @synthesize linkAttributes=_linkAttributes;
@property(nonatomic) __weak id <AttributedLabelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
- (void).cxx_destruct;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)didLongPress:(id)arg1;
- (void)attributedLabelTableView:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)attributedLabelRegular:(id)arg1 didSelectCaptionedLinkWithURL:(id)arg2 caption:(id)arg3 range:(struct _NSRange)arg4;
- (void)attributedLabelRegular:(id)arg1 didSelectLinkWithURL:(id)arg2;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)configureWithText:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPLastResortDelegate : NSObject <SKStoreProductViewControllerDelegate>
{
}

+ (id)sharedDelegate;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPVASTAd : MPVASTModel
{
    NSString *_identifier;
    NSString *_sequence;
    MPVASTInline *_inlineAd;
    MPVASTWrapper *_wrapper;
}

+ (id)modelMap;
@property(readonly, nonatomic) MPVASTWrapper *wrapper; // @synthesize wrapper=_wrapper;
@property(readonly, nonatomic) MPVASTInline *inlineAd; // @synthesize inlineAd=_inlineAd;
@property(readonly, copy, nonatomic) NSString *sequence; // @synthesize sequence=_sequence;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface MPBaseBannerAdapter : NSObject
{
    id <MPBannerAdapterDelegate> _delegate;
    MPAdConfiguration *_configuration;
    MPTimer *_timeoutTimer;
    NSURL *_impressionTrackingURL;
    NSURL *_clickTrackingURL;
}

@property(copy, nonatomic) NSURL *clickTrackingURL; // @synthesize clickTrackingURL=_clickTrackingURL;
@property(copy, nonatomic) NSURL *impressionTrackingURL; // @synthesize impressionTrackingURL=_impressionTrackingURL;
@property(retain, nonatomic) MPTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <MPBannerAdapterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)trackClick;
- (void)trackImpression;
- (void)rotateToOrientation:(long long)arg1;
- (void)timeout;
- (void)startTimeoutTimer;
- (void)didDisplayAd;
- (void)didStopLoading;
- (void)_getAdWithConfiguration:(id)arg1 containerSize:(struct CGSize)arg2;
- (void)getAdWithConfiguration:(id)arg1 containerSize:(struct CGSize)arg2;
- (void)unregisterDelegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface MPVASTMediaFile : MPVASTModel
{
    NSString *_identifier;
    NSString *_delivery;
    NSString *_mimeType;
    double _bitrate;
    double _width;
    double _height;
    NSURL *_URL;
}

+ (id)modelMap;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) double height; // @synthesize height=_height;
@property(readonly, nonatomic) double width; // @synthesize width=_width;
@property(readonly, nonatomic) double bitrate; // @synthesize bitrate=_bitrate;
@property(readonly, copy, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(readonly, copy, nonatomic) NSString *delivery; // @synthesize delivery=_delivery;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;

@end

@interface MPProgressOverlayView : UIView
{
    id <MPProgressOverlayViewDelegate> _delegate;
    UIView *_outerContainer;
    UIView *_innerContainer;
    UIActivityIndicatorView *_activityIndicator;
    UIButton *_closeButton;
    struct CGPoint _closeButtonPortraitCenter;
}

@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak id <MPProgressOverlayViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setTransformForAllSubviews:(struct CGAffineTransform)arg1;
- (void)setTransformForCurrentOrientationAnimated:(_Bool)arg1;
- (void)closeButtonPressed;
- (void)enableCloseButton;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)unregisterForDeviceOrientationNotifications;
- (void)registerForDeviceOrientationNotifications;
- (void)updateCloseButtonPosition;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)hide;
- (void)show;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithDelegate:(id)arg1;

@end

@interface LiveEvent : BaseModel
{
    _Bool _nsfw;
    _Bool _viewerCountFuzzed;
    NSString *_title;
    NSString *_name;
    NSString *_descriptionText;
    NSString *_descriptionHTML;
    NSString *_resourcesHTML;
    NSDate *_createdAt;
    NSString *_websocketURLString;
    unsigned long long _viewerCount;
}

+ (id)liveEventFromData:(id)arg1;
@property(nonatomic) unsigned long long viewerCount; // @synthesize viewerCount=_viewerCount;
@property(nonatomic) _Bool viewerCountFuzzed; // @synthesize viewerCountFuzzed=_viewerCountFuzzed;
@property(nonatomic) _Bool nsfw; // @synthesize nsfw=_nsfw;
@property(copy, nonatomic) NSString *websocketURLString; // @synthesize websocketURLString=_websocketURLString;
@property(copy, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *resourcesHTML; // @synthesize resourcesHTML=_resourcesHTML;
@property(copy, nonatomic) NSString *descriptionHTML; // @synthesize descriptionHTML=_descriptionHTML;
@property(copy, nonatomic) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *shareUrl;

@end

@interface MPTelephoneConfirmationController : NSObject <UIAlertViewDelegate>
{
    UIAlertView *_alertView;
    NSURL *_telephoneURL;
    CDUnknownBlockType _clickHandler;
}

@property(copy, nonatomic) CDUnknownBlockType clickHandler; // @synthesize clickHandler=_clickHandler;
@property(retain, nonatomic) NSURL *telephoneURL; // @synthesize telephoneURL=_telephoneURL;
@property(retain, nonatomic) UIAlertView *alertView; // @synthesize alertView=_alertView;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)show;
- (void)dealloc;
- (id)initWithURL:(id)arg1 clickHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OnboardingItem : BaseModel
{
    _Bool _selected;
    NSString *_title;
    UIColor *_color;
    NSString *_iconURLString;
    NSArray *_subredditList;
}

+ (id)onboardingItemFromData:(id)arg1;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(copy, nonatomic) NSArray *subredditList; // @synthesize subredditList=_subredditList;
@property(copy, nonatomic) NSString *iconURLString; // @synthesize iconURLString=_iconURLString;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;

@end

@interface CommentsSortBarView : SortBarView
{
    _Bool _hasParentComment;
    unsigned long long _commentSortType;
    unsigned long long _configuration;
}

@property(nonatomic) _Bool hasParentComment; // @synthesize hasParentComment=_hasParentComment;
@property(nonatomic) unsigned long long configuration; // @synthesize configuration=_configuration;
@property(nonatomic) unsigned long long commentSortType; // @synthesize commentSortType=_commentSortType;
- (void)setLeftButtonTitle:(id)arg1 withImage:(id)arg2;
- (void)configureWithConfigurationType:(unsigned long long)arg1 hasParentComment:(_Bool)arg2 shoudLockComments:(_Bool)arg3;

@end

@interface AFActivityIndicatorViewNotificationObserver : NSObject
{
    UIActivityIndicatorView *_activityIndicatorView;
}

@property(readonly, nonatomic) __weak UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)af_stopAnimating;
- (void)af_startAnimating;
- (void)setAnimatingWithStateOfTask:(id)arg1;
- (id)initWithActivityIndicatorView:(id)arg1;

@end

@interface DiscoverCategoriesViewController : BaseTableViewController
{
    NSArray *_categories;
    AFHTTPSessionManager *_categorySessionManager;
}

@property(retain, nonatomic) AFHTTPSessionManager *categorySessionManager; // @synthesize categorySessionManager=_categorySessionManager;
@property(copy, nonatomic) NSArray *categories; // @synthesize categories=_categories;
- (void).cxx_destruct;
- (id)analyticsScreenViewName;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)configureWithObjects:(id)arg1;
- (void)configureWithURLString:(id)arg1;
- (void)viewDidLoad;
- (id)init;

@end

@interface SubmittedPost : BaseModel
{
    NSString *_title;
    NSString *_linkURL;
    NSString *_selfText;
    UIImage *_image;
    UIImage *_thumbnailImage;
    NSString *_imageFileName;
    NSDictionary *_imageUploadMetaData;
    NSString *_subredditName;
    long long _state;
    double _uploadPercentage;
}

@property(nonatomic) double uploadPercentage; // @synthesize uploadPercentage=_uploadPercentage;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *subredditName; // @synthesize subredditName=_subredditName;
@property(copy, nonatomic) NSDictionary *imageUploadMetaData; // @synthesize imageUploadMetaData=_imageUploadMetaData;
@property(copy, nonatomic) NSString *imageFileName; // @synthesize imageFileName=_imageFileName;
@property(copy, nonatomic) UIImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(copy, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *selfText; // @synthesize selfText=_selfText;
@property(copy, nonatomic) NSString *linkURL; // @synthesize linkURL=_linkURL;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *imageFilePath;
@property(readonly, nonatomic) _Bool hasImage;
- (id)selectorsToObserveChanges;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface OverflowImageTableViewCell : ImageLabelTableViewCell
{
    BaseButton *_accessoryButton;
}

@property(retain, nonatomic) BaseButton *accessoryButton; // @synthesize accessoryButton=_accessoryButton;
- (void).cxx_destruct;

@end

@interface LegacyMainFeedViewController : MainFeedViewController
{
}

- (id)analyticsScreenViewName;

@end

@interface AppRating : NSObject <MFMailComposeViewControllerDelegate, AppRatingToastViewDelegate>
{
    _Bool _didTapOutside;
}

+ (void)didTapRateButton:(id)arg1;
+ (void)didTapFeedbackButton:(id)arg1;
+ (void)didTapYesButton:(id)arg1;
+ (void)didTapNoButton:(id)arg1;
+ (void)registerSignificantEvent:(_Bool)arg1;
+ (void)registerSession;
+ (void)showPrompt;
+ (_Bool)shouldShowPrompt;
+ (void)resetVersion;
+ (id)majorVersionFromAppVersion:(id)arg1;
+ (void)resetIfVersionChanged;
+ (long long)integerForKey:(id)arg1;
+ (id)instance;
@property(nonatomic) _Bool didTapOutside; // @synthesize didTapOutside=_didTapOutside;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)appRatingToastViewDidTapOutside:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFNetworkReachabilityManager : NSObject
{
    long long _networkReachabilityStatus;
    struct __SCNetworkReachability *_networkReachability;
    CDUnknownBlockType _networkReachabilityStatusBlock;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)manager;
+ (id)managerForAddress:(const void *)arg1;
+ (id)managerForDomain:(id)arg1;
+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType networkReachabilityStatusBlock; // @synthesize networkReachabilityStatusBlock=_networkReachabilityStatusBlock;
@property(readonly, nonatomic) struct __SCNetworkReachability *networkReachability; // @synthesize networkReachability=_networkReachability;
@property(nonatomic) long long networkReachabilityStatus; // @synthesize networkReachabilityStatus=_networkReachabilityStatus;
- (void).cxx_destruct;
- (void)setReachabilityStatusChangeBlock:(CDUnknownBlockType)arg1;
- (id)localizedNetworkReachabilityStatusString;
- (void)stopMonitoring;
- (void)startMonitoring;
@property(readonly, nonatomic, getter=isReachableViaWiFi) _Bool reachableViaWiFi;
@property(readonly, nonatomic, getter=isReachableViaWWAN) _Bool reachableViaWWAN;
@property(readonly, nonatomic, getter=isReachable) _Bool reachable;
- (void)dealloc;
- (id)init;
- (id)initWithReachability:(struct __SCNetworkReachability *)arg1;

@end

@interface MPAdView : UIView <MPBannerAdManagerDelegate>
{
    _Bool _testing;
    int _allowedNativeAdOrientation;
    CLLocation *_location;
    MPBannerAdManager *_adManager;
    NSString *_adUnitId;
    NSString *_keywords;
    id <MPAdViewDelegate> _delegate;
    UIView *_adContentView;
    struct CGSize _originalSize;
}

@property(nonatomic) int allowedNativeAdOrientation; // @synthesize allowedNativeAdOrientation=_allowedNativeAdOrientation;
@property(nonatomic) __weak UIView *adContentView; // @synthesize adContentView=_adContentView;
@property(nonatomic, getter=isTesting) _Bool testing; // @synthesize testing=_testing;
@property(nonatomic) struct CGSize originalSize; // @synthesize originalSize=_originalSize;
@property(nonatomic) __weak id <MPAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSString *adUnitId; // @synthesize adUnitId=_adUnitId;
@property(retain, nonatomic) MPBannerAdManager *adManager; // @synthesize adManager=_adManager;
@property(copy, nonatomic) CLLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (void)userWillLeaveApplication;
- (void)userActionDidFinish;
- (void)userActionWillBegin;
- (void)managerDidLoadAd:(id)arg1;
- (void)managerDidFailToLoadAd;
- (void)invalidateContentView;
- (id)viewControllerForPresentingModalView;
- (struct CGSize)containerSize;
- (id)bannerDelegate;
- (id)banner;
- (int)allowedNativeAdsOrientation;
- (void)unlockNativeAdsOrientation;
- (void)lockNativeAdsToOrientation:(int)arg1;
- (void)startAutomaticallyRefreshingContents;
- (void)stopAutomaticallyRefreshingContents;
- (void)forceRefreshAd;
- (void)refreshAd;
- (void)loadAd;
- (void)rotateToOrientation:(long long)arg1;
- (struct CGSize)adContentViewSize;
- (void)dealloc;
- (id)initWithAdUnitId:(id)arg1 size:(struct CGSize)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPURLActionInfo : NSObject
{
    unsigned long long _actionType;
    NSURL *_originalURL;
    NSString *_iTunesItemIdentifier;
    NSURL *_iTunesStoreFallbackURL;
    NSURL *_safariDestinationURL;
    NSString *_HTTPResponseString;
    NSURL *_webViewBaseURL;
    NSURL *_deeplinkURL;
    MPEnhancedDeeplinkRequest *_enhancedDeeplinkRequest;
    NSURL *_shareURL;
}

+ (id)infoWithURL:(id)arg1 shareURL:(id)arg2;
+ (id)infoWithURL:(id)arg1 enhancedDeeplinkRequest:(id)arg2;
+ (id)infoWithURL:(id)arg1 deeplinkURL:(id)arg2;
+ (id)infoWithURL:(id)arg1 webViewBaseURL:(id)arg2;
+ (id)infoWithURL:(id)arg1 HTTPResponseString:(id)arg2 webViewBaseURL:(id)arg3;
+ (id)infoWithURL:(id)arg1 safariDestinationURL:(id)arg2;
+ (id)infoWithURL:(id)arg1 iTunesItemIdentifier:(id)arg2 iTunesStoreFallbackURL:(id)arg3;
@property(copy, nonatomic) NSURL *shareURL; // @synthesize shareURL=_shareURL;
@property(retain, nonatomic) MPEnhancedDeeplinkRequest *enhancedDeeplinkRequest; // @synthesize enhancedDeeplinkRequest=_enhancedDeeplinkRequest;
@property(copy, nonatomic) NSURL *deeplinkURL; // @synthesize deeplinkURL=_deeplinkURL;
@property(copy, nonatomic) NSURL *webViewBaseURL; // @synthesize webViewBaseURL=_webViewBaseURL;
@property(copy, nonatomic) NSString *HTTPResponseString; // @synthesize HTTPResponseString=_HTTPResponseString;
@property(copy, nonatomic) NSURL *safariDestinationURL; // @synthesize safariDestinationURL=_safariDestinationURL;
@property(copy, nonatomic) NSURL *iTunesStoreFallbackURL; // @synthesize iTunesStoreFallbackURL=_iTunesStoreFallbackURL;
@property(copy, nonatomic) NSString *iTunesItemIdentifier; // @synthesize iTunesItemIdentifier=_iTunesItemIdentifier;
@property(copy, nonatomic) NSURL *originalURL; // @synthesize originalURL=_originalURL;
@property(nonatomic) unsigned long long actionType; // @synthesize actionType=_actionType;
- (void).cxx_destruct;

@end

@interface MessageListingNetworkSource : ListingNetworkSource
{
}

- (id)messagesFromData:(id)arg1;
- (void)parseMoreData:(id)arg1;
- (void)parseData:(id)arg1;
- (id)initWithFetchURLString:(id)arg1;
- (id)init;

@end

@interface MessageCollectionViewCell : UICollectionViewCell
{
    MessageCellContentView *_messageView;
}

@property(retain, nonatomic) MessageCellContentView *messageView; // @synthesize messageView=_messageView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ProgressViewCollectionCell : UICollectionViewCell
{
    ProgressContentView *_progressContentView;
}

@property(retain, nonatomic) ProgressContentView *progressContentView; // @synthesize progressContentView=_progressContentView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BaseProgressView : UIProgressView
{
}

@end

@interface CarouselItemCollectionViewCell : UICollectionViewCell
{
    CarouselItemView *_item;
}

@property(retain, nonatomic) CarouselItemView *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareForReuse;

@end

@interface MPInstanceProvider : NSObject
{
    NSMutableDictionary *_singletons;
}

+ (id)sharedProvider;
@property(retain, nonatomic) NSMutableDictionary *singletons; // @synthesize singletons=_singletons;
- (void).cxx_destruct;
- (id)buildStreamAdPlacerWithViewController:(id)arg1 adPositioning:(id)arg2 rendererConfigurations:(id)arg3;
- (id)buildStreamAdPlacementDataWithPositioning:(id)arg1;
- (id)buildNativePositioningSource;
- (id)buildNativeAdSourceWithDelegate:(id)arg1;
- (id)buildNativeCustomEventFromCustomClass:(Class)arg1 delegate:(id)arg2;
- (id)buildMRNativeCommandHandlerWithDelegate:(id)arg1;
- (id)buildMPMoviePlayerViewControllerWithURL:(id)arg1;
- (id)buildMRVideoPlayerManagerWithDelegate:(id)arg1;
- (id)buildMRBridgeWithWebView:(id)arg1 delegate:(id)arg2;
- (id)buildMRControllerWithFrame:(struct CGRect)arg1 placementType:(unsigned long long)arg2 delegate:(id)arg3;
- (id)buildInterstitialMRControllerWithFrame:(struct CGRect)arg1 delegate:(id)arg2;
- (id)buildBannerMRControllerWithFrame:(struct CGRect)arg1 delegate:(id)arg2;
- (id)buildMRBundleManager;
- (id)buildMRAIDMPClosableViewWithFrame:(struct CGRect)arg1 webView:(id)arg2 delegate:(id)arg3;
- (id)buildMPAdWebViewAgentWithAdWebViewFrame:(struct CGRect)arg1 delegate:(id)arg2;
- (id)buildRewardedVideoCustomEventFromCustomClass:(Class)arg1 delegate:(id)arg2;
- (id)buildRewardedVideoAdapterWithDelegate:(id)arg1;
- (id)buildRewardedVideoAdManagerWithAdUnitID:(id)arg1 delegate:(id)arg2;
- (id)buildMPMRAIDInterstitialViewControllerWithDelegate:(id)arg1 configuration:(id)arg2;
- (id)buildMPHTMLInterstitialViewControllerWithDelegate:(id)arg1 orientationType:(unsigned long long)arg2;
- (id)buildInterstitialCustomEventFromCustomClass:(Class)arg1 delegate:(id)arg2;
- (id)buildInterstitialAdapterForConfiguration:(id)arg1 delegate:(id)arg2;
- (id)buildMPInterstitialAdManagerWithDelegate:(id)arg1;
- (id)buildBannerCustomEventFromCustomClass:(Class)arg1 delegate:(id)arg2;
- (id)buildBannerAdapterForConfiguration:(id)arg1 delegate:(id)arg2;
- (id)buildMPBannerAdManagerWithDelegate:(id)arg1;
- (id)singletonForClass:(Class)arg1 provider:(CDUnknownBlockType)arg2 context:(id)arg3;
- (id)singletonForClass:(Class)arg1 provider:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface AccountListViewController : BaseTableViewController <ActionSheetViewControllerDelegate, UITableViewDelegate, UITableViewDataSource, AuthenticationViewControllerDelegate>
{
}

- (void)actionSheetViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)authenticationViewController:(id)arg1 didLoginUser:(id)arg2 fromSignup:(_Bool)arg3;
- (void)switchToAccount:(id)arg1;
- (void)accountToggled:(id)arg1;
- (void)accountExpanded:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(readonly, nonatomic) NSArray *accounts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScrollViewIndexBarIndicatorView : BaseView
{
    ScrollViewIndex *_index;
    BaseImageView *_imageView;
    BaseLabel *_label;
}

@property(retain, nonatomic) BaseLabel *label; // @synthesize label=_label;
@property(retain, nonatomic) BaseImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) ScrollViewIndex *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface MPVASTStringUtilities : NSObject
{
}

+ (id)stringFromTimeInterval:(double)arg1;
+ (double)timeIntervalFromString:(id)arg1;
+ (long long)percentageFromString:(id)arg1;
+ (_Bool)stringRepresentsNonNegativeDuration:(id)arg1;
+ (_Bool)stringRepresentsNonNegativePercentage:(id)arg1;
+ (double)doubleFromString:(id)arg1;

@end

@interface PercentAnimation : UIPercentDrivenInteractiveTransition
{
    UIView *_headerView;
    struct CGRect _headerStartFrame;
}

@property(nonatomic) struct CGRect headerStartFrame; // @synthesize headerStartFrame=_headerStartFrame;
@property(nonatomic) __weak UIView *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (void)finishInteractiveTransition;
- (void)cancelInteractiveTransition;
- (void)updateInteractiveTransition:(double)arg1;
- (void)startInteractiveTransition:(id)arg1;

@end

@interface FeedNavigationControllerDelegate : NSObject <UINavigationControllerDelegate>
{
    UIView *_headerView;
    PercentAnimation *_interactionController;
    UINavigationController *_navigationController;
    UIScreenEdgePanGestureRecognizer *_panRecognizer;
    FeedPopAnimator *_popAnimator;
    FeedPushAnimator *_pushAnimator;
}

@property(retain, nonatomic) FeedPushAnimator *pushAnimator; // @synthesize pushAnimator=_pushAnimator;
@property(retain, nonatomic) FeedPopAnimator *popAnimator; // @synthesize popAnimator=_popAnimator;
@property(retain, nonatomic) UIScreenEdgePanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(nonatomic) __weak UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(retain, nonatomic) PercentAnimation *interactionController; // @synthesize interactionController=_interactionController;
@property(nonatomic) __weak UIView *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (id)navigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)pan:(id)arg1;
- (id)initWithNavigationController:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RXMLDocHolder : NSObject
{
    struct _xmlDoc *doc_;
}

- (struct _xmlDoc *)doc;
- (void)dealloc;
- (id)initWithDocPtr:(struct _xmlDoc *)arg1;

@end

@interface RXMLElement : NSObject <NSCopying>
{
    struct _xmlNode *node_;
    RXMLDocHolder *_xmlDoc;
}

+ (id)elementFromXMLDoc:(id)arg1 node:(struct _xmlNode *)arg2;
+ (id)elementFromXMLData:(id)arg1;
+ (id)elementFromURL:(id)arg1;
+ (id)elementFromXMLFilename:(id)arg1 fileExtension:(id)arg2;
+ (id)elementFromXMLFile:(id)arg1;
+ (id)elementFromXMLString:(id)arg1 encoding:(unsigned long long)arg2;
@property(retain, nonatomic) RXMLDocHolder *xmlDoc; // @synthesize xmlDoc=_xmlDoc;
- (void).cxx_destruct;
- (void)iterateElements:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)iterateWithRootXPath:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)iterate:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)childrenWithRootXPath:(id)arg1;
- (id)children:(id)arg1 inNamespace:(id)arg2;
- (id)children:(id)arg1;
- (id)child:(id)arg1 inNamespace:(id)arg2;
- (id)child:(id)arg1;
@property(readonly, nonatomic) _Bool isValid;
- (double)attributeAsDouble:(id)arg1 inNamespace:(id)arg2;
- (double)attributeAsDouble:(id)arg1;
- (long long)attributeAsInt:(id)arg1 inNamespace:(id)arg2;
- (long long)attributeAsInt:(id)arg1;
- (id)attributeNames;
- (id)attribute:(id)arg1 inNamespace:(id)arg2;
- (id)attribute:(id)arg1;
@property(readonly, nonatomic) double textAsDouble;
@property(readonly, nonatomic) long long textAsInt;
@property(readonly, nonatomic) NSString *text;
@property(readonly, nonatomic) NSString *tag;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initFromXMLDoc:(id)arg1 node:(struct _xmlNode *)arg2;
- (id)initFromXMLData:(id)arg1;
- (id)initFromURL:(id)arg1;
- (id)initFromXMLFile:(id)arg1 fileExtension:(id)arg2;
- (id)initFromXMLFile:(id)arg1;
- (id)initFromXMLFilePath:(id)arg1;
- (id)initFromXMLString:(id)arg1 encoding:(unsigned long long)arg2;

@end

@interface SubscribedSubredditsManager : NSObject
{
    NSString *_cachePath;
    NSArray *_subreddits;
}

@property(copy, nonatomic) NSArray *subreddits; // @synthesize subreddits=_subreddits;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
- (void).cxx_destruct;
- (void)persistSubredditsToCache;
- (void)loadMoreSubreddits:(id)arg1 afterID:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (void)loadSubredditsFromNetworkWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2;
- (void)loadSubredditsFromDiskWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2;
- (id)getSubredditsSortedByName:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *sortedSubreddits;
- (id)initWithCacheFolderPath:(id)arg1;

@end

@interface MessageTextView : VerticalLineView
{
    AttributedLabel *_textViewLabel;
    Message *_message;
}

+ (struct CGSize)calculatedSizeOfTextViewWithData:(id)arg1;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(retain, nonatomic) Message *message; // @synthesize message=_message;
@property(retain, nonatomic) AttributedLabel *textViewLabel; // @synthesize textViewLabel=_textViewLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPInterstitialCustomEventAdapter : MPBaseInterstitialAdapter <MPPrivateInterstitialCustomEventDelegate>
{
    _Bool _hasTrackedImpression;
    _Bool _hasTrackedClick;
    MPInterstitialCustomEvent *_interstitialCustomEvent;
    MPAdConfiguration *_configuration;
}

@property(retain, nonatomic) MPAdConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) MPInterstitialCustomEvent *interstitialCustomEvent; // @synthesize interstitialCustomEvent=_interstitialCustomEvent;
@property(nonatomic) _Bool hasTrackedClick; // @synthesize hasTrackedClick=_hasTrackedClick;
@property(nonatomic) _Bool hasTrackedImpression; // @synthesize hasTrackedImpression=_hasTrackedImpression;
- (void).cxx_destruct;
- (void)interstitialCustomEventWillLeaveApplication:(id)arg1;
- (void)interstitialCustomEventDidReceiveTapEvent:(id)arg1;
- (void)interstitialCustomEventDidExpire:(id)arg1;
- (void)interstitialCustomEventDidDisappear:(id)arg1;
- (void)interstitialCustomEventWillDisappear:(id)arg1;
- (void)interstitialCustomEventDidAppear:(id)arg1;
- (void)interstitialCustomEventWillAppear:(id)arg1;
- (void)interstitialCustomEvent:(id)arg1 didFailToLoadAdWithError:(id)arg2;
- (void)interstitialCustomEvent:(id)arg1 didLoadAd:(id)arg2;
- (id)interstitialDelegate;
- (id)location;
- (id)adUnitId;
- (void)showInterstitialFromViewController:(id)arg1;
- (void)getAdWithConfiguration:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MainFeedViewController : FeedViewController <UIGestureRecognizerDelegate, BaseModelObserver, ActionSheetViewControllerDelegate>
{
    _Bool _showingFirstLoadToast;
    PostOverlay *_postOverlay;
    NSString *_configuredURLString;
}

@property(copy, nonatomic) NSString *configuredURLString; // @synthesize configuredURLString=_configuredURLString;
@property(retain, nonatomic) PostOverlay *postOverlay; // @synthesize postOverlay=_postOverlay;
@property(nonatomic) _Bool showingFirstLoadToast; // @synthesize showingFirstLoadToast=_showingFirstLoadToast;
- (void).cxx_destruct;
- (void)commentBarViewDidTapShare:(id)arg1;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (_Bool)hasCarousel;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (void)reloadContentFromNetworkSource;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willMoveFloatingHeaderViewWithTransformY:(double)arg1;
- (double)maxFloatingTransformY;
- (void)fixNavbarLayout:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)didTapPost;
- (void)didTapCloseToast:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)configureWithURLString:(id)arg1 sortType:(unsigned long long)arg2 parameters:(id)arg3;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)handleAppDidEnterBackground;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextFieldTableViewCell : BaseTableViewCell
{
    TextFieldContentView *_textFieldView;
}

@property(retain, nonatomic) TextFieldContentView *textFieldView; // @synthesize textFieldView=_textFieldView;
- (void).cxx_destruct;
@property(readonly, nonatomic) LabeledTextField *textField;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface VASTTrackingURL : NSObject
{
    NSURL *_url;
    MPVASTDurationOffset *_progressOffset;
}

@property(retain, nonatomic) MPVASTDurationOffset *progressOffset; // @synthesize progressOffset=_progressOffset;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;

@end

@interface VASTEventTracker : NSObject
{
    _Bool _trackersFired;
    NSArray *_trackingEvents;
}

+ (id)eventTrackerWithURLs:(id)arg1;
+ (id)eventTrackerWithMPVastTrackingEvents:(id)arg1;
@property(retain, nonatomic) NSArray *trackingEvents; // @synthesize trackingEvents=_trackingEvents;
@property(nonatomic) _Bool trackersFired; // @synthesize trackersFired=_trackersFired;
- (void).cxx_destruct;

@end

@interface MPVASTTracking : NSObject
{
    MPVideoConfig *_videoConfig;
    double _videoDuration;
    VASTEventTracker *_errorTracker;
    VASTEventTracker *_impressionTracker;
    VASTEventTracker *_clickTracker;
    VASTEventTracker *_customViewabilityTracker;
    VASTEventTracker *_startTracker;
    VASTEventTracker *_firstQuartileTracker;
    VASTEventTracker *_midPointTracker;
    VASTEventTracker *_thirdQuartileTracker;
    VASTEventTracker *_completionTracker;
    NSMutableArray *_variableProgressTrackers;
    VASTEventTracker *_muteTracker;
    VASTEventTracker *_unmuteTracker;
    VASTEventTracker *_pauseTracker;
    VASTEventTracker *_rewindTracker;
    VASTEventTracker *_resumeTracker;
    VASTEventTracker *_fullscreenTracker;
    VASTEventTracker *_exitFullscreenTracker;
    VASTEventTracker *_expandTracker;
    VASTEventTracker *_collapseTracker;
    MOPUBNativeVideoImpressionAgent *_customViewabilityTrackingAgent;
}

@property(retain, nonatomic) MOPUBNativeVideoImpressionAgent *customViewabilityTrackingAgent; // @synthesize customViewabilityTrackingAgent=_customViewabilityTrackingAgent;
@property(retain, nonatomic) VASTEventTracker *collapseTracker; // @synthesize collapseTracker=_collapseTracker;
@property(retain, nonatomic) VASTEventTracker *expandTracker; // @synthesize expandTracker=_expandTracker;
@property(retain, nonatomic) VASTEventTracker *exitFullscreenTracker; // @synthesize exitFullscreenTracker=_exitFullscreenTracker;
@property(retain, nonatomic) VASTEventTracker *fullscreenTracker; // @synthesize fullscreenTracker=_fullscreenTracker;
@property(retain, nonatomic) VASTEventTracker *resumeTracker; // @synthesize resumeTracker=_resumeTracker;
@property(retain, nonatomic) VASTEventTracker *rewindTracker; // @synthesize rewindTracker=_rewindTracker;
@property(retain, nonatomic) VASTEventTracker *pauseTracker; // @synthesize pauseTracker=_pauseTracker;
@property(retain, nonatomic) VASTEventTracker *unmuteTracker; // @synthesize unmuteTracker=_unmuteTracker;
@property(retain, nonatomic) VASTEventTracker *muteTracker; // @synthesize muteTracker=_muteTracker;
@property(retain, nonatomic) NSMutableArray *variableProgressTrackers; // @synthesize variableProgressTrackers=_variableProgressTrackers;
@property(retain, nonatomic) VASTEventTracker *completionTracker; // @synthesize completionTracker=_completionTracker;
@property(retain, nonatomic) VASTEventTracker *thirdQuartileTracker; // @synthesize thirdQuartileTracker=_thirdQuartileTracker;
@property(retain, nonatomic) VASTEventTracker *midPointTracker; // @synthesize midPointTracker=_midPointTracker;
@property(retain, nonatomic) VASTEventTracker *firstQuartileTracker; // @synthesize firstQuartileTracker=_firstQuartileTracker;
@property(retain, nonatomic) VASTEventTracker *startTracker; // @synthesize startTracker=_startTracker;
@property(retain, nonatomic) VASTEventTracker *customViewabilityTracker; // @synthesize customViewabilityTracker=_customViewabilityTracker;
@property(retain, nonatomic) VASTEventTracker *clickTracker; // @synthesize clickTracker=_clickTracker;
@property(retain, nonatomic) VASTEventTracker *impressionTracker; // @synthesize impressionTracker=_impressionTracker;
@property(retain, nonatomic) VASTEventTracker *errorTracker; // @synthesize errorTracker=_errorTracker;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(readonly, nonatomic) MPVideoConfig *videoConfig; // @synthesize videoConfig=_videoConfig;
- (void).cxx_destruct;
- (void)handleNewVideoView:(id)arg1;
- (void)cleanAndSendTrackingEvents:(id)arg1 timeOffset:(double)arg2;
- (void)handleProgressTrackers:(double)arg1;
- (void)handleVideoEvent:(unsigned long long)arg1 videoTimeOffset:(double)arg2;
- (id)initWithMPVideoConfig:(id)arg1 videoView:(id)arg2;

@end

@interface SubmittedPostStore : BaseStore
{
}

- (void)deletePost:(id)arg1;
- (void)persistPost:(id)arg1;
- (id)getPostObjectFromPK:(id)arg1;
- (id)createOrGetPostObjectFromPK:(id)arg1;

@end

@interface HapticFeedbackGenerator : NSObject
{
}

+ (void)notificationErrorOccured;
+ (void)notificationWarningOccured;
+ (void)notificationSuccessOccured;
+ (void)impactHeavyOccured;
+ (void)impactMediumOccured;
+ (void)impactLightOccured;
+ (void)selectionOccured;

@end

@interface AnalyticsManager : NSObject
{
}

+ (void)logAdResponse:(id)arg1;
+ (void)logAdRequest:(id)arg1;
+ (void)logAdImpression:(id)arg1;
+ (void)logHeartbeatEventWithParameters:(id)arg1;
+ (void)logNotificationTappedEventWithNotificationId:(id)arg1 notificationType:(id)arg2;
+ (void)logNotificationEventWithNotificationId:(id)arg1 notificationType:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)logBucketingEventWithExperimentID:(id)arg1 experimentName:(id)arg2 variant:(id)arg3;
+ (void)logScrollEventWithParameters:(id)arg1;
+ (void)logControlTapEventWithParameters:(id)arg1;
+ (void)logScreenViewEventWithParameters:(id)arg1 fromBackground:(_Bool)arg2;
+ (void)logScreenViewEventWithParameters:(id)arg1;
+ (id)makeEventRequestForEvents:(id)arg1 withError:(id)arg2;
+ (id)makeEventPayloadWithEventTopic:(id)arg1 eventType:(id)arg2 eventUUID:(id)arg3 parameters:(id)arg4;
+ (void)logEventTopic:(id)arg1 withEventType:(id)arg2 withParameters:(id)arg3;
+ (id)signatureHeaderWithBody:(id)arg1;
+ (id)hmacString:(id)arg1;
+ (void)processEvents:(CDUnknownBlockType)arg1;
+ (void)processEvents;
+ (id)eventDirectory;
+ (void)backfillEventLoids;
+ (void)configureWithBranchParameters:(id)arg1;
+ (id)loidType;
+ (id)loid;
+ (void)enable;
+ (void)initialize;

@end

@interface AFNetworkActivityIndicatorManager : NSObject
{
    _Bool _enabled;
    _Bool _networkActivityIndicatorVisible;
    double _activationDelay;
    double _completionDelay;
    long long _activityCount;
    NSTimer *_activationDelayTimer;
    NSTimer *_completionDelayTimer;
    CDUnknownBlockType _networkActivityActionBlock;
    long long _currentState;
}

+ (id)sharedManager;
@property(nonatomic) long long currentState; // @synthesize currentState=_currentState;
@property(copy, nonatomic) CDUnknownBlockType networkActivityActionBlock; // @synthesize networkActivityActionBlock=_networkActivityActionBlock;
@property(retain, nonatomic) NSTimer *completionDelayTimer; // @synthesize completionDelayTimer=_completionDelayTimer;
@property(retain, nonatomic) NSTimer *activationDelayTimer; // @synthesize activationDelayTimer=_activationDelayTimer;
@property(nonatomic) long long activityCount; // @synthesize activityCount=_activityCount;
@property(nonatomic) double completionDelay; // @synthesize completionDelay=_completionDelay;
@property(nonatomic) double activationDelay; // @synthesize activationDelay=_activationDelay;
@property(nonatomic, getter=isNetworkActivityIndicatorVisible) _Bool networkActivityIndicatorVisible; // @synthesize networkActivityIndicatorVisible=_networkActivityIndicatorVisible;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)cancelCompletionDelayTimer;
- (void)cancelActivationDelayTimer;
- (void)completionDelayTimerFired;
- (void)startCompletionDelayTimer;
- (void)activationDelayTimerFired;
- (void)startActivationDelayTimer;
- (void)updateCurrentStateForNetworkActivityChange;
- (void)networkRequestDidFinish:(id)arg1;
- (void)networkRequestDidStart:(id)arg1;
- (void)decrementActivityCount;
- (void)incrementActivityCount;
@property(readonly, nonatomic, getter=isNetworkActivityOccurring) _Bool networkActivityOccurring;
- (void)setNetworkingActivityActionWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ListingViewController : BaseViewController <FloatingHeaderCallbackProtocol, ListingNetworkSourceDelegate, ListingViewBatchUpdateProtocol>
{
    _Bool isUpdateQueueBusy;
    _Bool _isCurrentQueueBusy;
    _Bool _hasStartedObservingScrollViewOffset;
    _Bool _allowObservingScrollViewContentOffset;
    FloatingHeaderManager *_floatingHeaderManager;
    NSArray *_currentObjects;
    NSMutableArray *_currentUpdateQueue;
    ListingNetworkSource *_listingNetworkSource;
    UIActivityIndicatorView *_bottomSpinner;
    RefreshControl *_refreshControl;
    AnimatedSpinner *_firstLoadSpinner;
    EmptyDogeView *_emptyView;
}

@property(retain, nonatomic) EmptyDogeView *emptyView; // @synthesize emptyView=_emptyView;
@property(nonatomic) _Bool allowObservingScrollViewContentOffset; // @synthesize allowObservingScrollViewContentOffset=_allowObservingScrollViewContentOffset;
@property(nonatomic) _Bool hasStartedObservingScrollViewOffset; // @synthesize hasStartedObservingScrollViewOffset=_hasStartedObservingScrollViewOffset;
@property(retain, nonatomic) AnimatedSpinner *firstLoadSpinner; // @synthesize firstLoadSpinner=_firstLoadSpinner;
@property(retain, nonatomic) RefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(retain, nonatomic) UIActivityIndicatorView *bottomSpinner; // @synthesize bottomSpinner=_bottomSpinner;
@property(retain, nonatomic) ListingNetworkSource *listingNetworkSource; // @synthesize listingNetworkSource=_listingNetworkSource;
@property(copy, nonatomic) NSMutableArray *currentUpdateQueue; // @synthesize currentUpdateQueue=_currentUpdateQueue;
@property(nonatomic) _Bool isCurrentQueueBusy; // @synthesize isCurrentQueueBusy=_isCurrentQueueBusy;
@property(copy, nonatomic) NSArray *currentObjects; // @synthesize currentObjects=_currentObjects;
@property(retain, nonatomic) FloatingHeaderManager *floatingHeaderManager; // @synthesize floatingHeaderManager=_floatingHeaderManager;
@property(nonatomic) _Bool isUpdateQueueBusy; // @synthesize isUpdateQueueBusy;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)updateContentViewsForData:(id)arg1;
- (void)floatingHeaderShouldMove:(id)arg1;
- (void)willMoveFloatingHeaderViewWithTransformY:(double)arg1;
- (double)initialFloatingResistanceDistance;
- (double)maxFloatingTransformY;
- (_Bool)shouldScrollContentViewToTop;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)listingNetworkSourceDidStartFetching:(id)arg1;
- (void)listingNetworkSourceDidParseNewData:(id)arg1;
- (void)listingNetworkSourceDidFail:(id)arg1;
- (void)listingNetworkSourceDidFetchMoreData:(id)arg1;
- (void)listingNetworkSourceDidFetchData:(id)arg1;
- (void)updateContentViewsWhenLoadingMoreFinishes;
- (void)updateContentViewsWhenReloadFinishes;
- (void)removeEmptyWelcomeView;
- (void)displayEmptyWelcomeView;
- (void)triggerDeferredViewUpdates;
- (void)markQueueAsFreeAndTriggerNextUpdate;
- (void)queueNewObjects:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reloadDataSafely;
- (void)reloadDataSafelyWithObjects:(id)arg1;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLayoutSubviews;
- (void)updateBottomSpinner;
- (void)fetchMoreContentIfNecessary;
- (void)didPullToRefresh:(id)arg1;
- (void)updateContentScrollViewInsets;
- (void)contentScrollViewContentInsetsDidChange;
- (id)majorContentScrollView;
- (id)majorContentView;
- (void)reloadContentFromNetworkSource;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)notifyPossibleCellsAboutViewDisappearing;
- (void)notifyPossibleCellsAboutViewAppearing;
- (void)handleAppDidEnterBackground;
- (void)handleAppDidEnterForeground;
- (void)viewDidLoad;
- (void)fetchDataInExtraConditions;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Comment : BaseModel <ThemeUpdateCallbackProtocol, NSObject, NSSecureCoding, ThreadedObjectProtocol>
{
    _Bool _isLoadingMoreNode;
    _Bool _isPoster;
    _Bool _scoreHidden;
    _Bool _edited;
    _Bool _stickied;
    _Bool _saved;
    _Bool _archived;
    _Bool _unread;
    _Bool _isCollapsed;
    _Bool _isTextSelected;
    double _lastUpdated;
    NSArray *_childrenCommentPKs;
    NSString *_linkedPostID;
    NSString *_bodyText;
    NSAttributedString *_bodyAttributedText;
    NSString *_htmlBody;
    NSString *_author;
    NSString *_permalink;
    NSString *_subredditName;
    NSDate *_createDate;
    NSString *_parentCommentPK;
    long long _score;
    long long _voteStatus;
    NSString *_distinguished;
    unsigned long long _gilded;
    NSString *_authorFlairText;
    NSString *_authorFlairCSSClass;
    NSArray *_imageUrls;
    NSString *_linkTitle;
    unsigned long long _level;
    NSArray *_replies;
    Comment *_parent;
    unsigned long long _visualLevel;
    NSArray *_visualReplies;
    NSDictionary *_debugData;
}

+ (id)loadingMoreCommentCommentFromData:(id)arg1;
+ (id)commentFromData:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSDictionary *debugData; // @synthesize debugData=_debugData;
@property(copy, nonatomic) NSArray *visualReplies; // @synthesize visualReplies=_visualReplies;
@property(nonatomic) unsigned long long visualLevel; // @synthesize visualLevel=_visualLevel;
@property(nonatomic) _Bool isTextSelected; // @synthesize isTextSelected=_isTextSelected;
@property(nonatomic) _Bool isCollapsed; // @synthesize isCollapsed=_isCollapsed;
@property(nonatomic) __weak Comment *parent; // @synthesize parent=_parent;
@property(copy, nonatomic) NSArray *replies; // @synthesize replies=_replies;
@property(nonatomic) unsigned long long level; // @synthesize level=_level;
@property(nonatomic) _Bool unread; // @synthesize unread=_unread;
@property(copy, nonatomic) NSString *linkTitle; // @synthesize linkTitle=_linkTitle;
@property(copy, nonatomic) NSArray *imageUrls; // @synthesize imageUrls=_imageUrls;
@property(copy, nonatomic) NSString *authorFlairCSSClass; // @synthesize authorFlairCSSClass=_authorFlairCSSClass;
@property(copy, nonatomic) NSString *authorFlairText; // @synthesize authorFlairText=_authorFlairText;
@property(nonatomic) _Bool archived; // @synthesize archived=_archived;
@property(nonatomic) unsigned long long gilded; // @synthesize gilded=_gilded;
@property(copy, nonatomic) NSString *distinguished; // @synthesize distinguished=_distinguished;
@property(nonatomic) _Bool saved; // @synthesize saved=_saved;
@property(nonatomic) _Bool stickied; // @synthesize stickied=_stickied;
@property(nonatomic) _Bool edited; // @synthesize edited=_edited;
@property(nonatomic) _Bool scoreHidden; // @synthesize scoreHidden=_scoreHidden;
@property(nonatomic) long long voteStatus; // @synthesize voteStatus=_voteStatus;
@property(nonatomic) long long score; // @synthesize score=_score;
@property(nonatomic) _Bool isPoster; // @synthesize isPoster=_isPoster;
@property(copy, nonatomic) NSString *parentCommentPK; // @synthesize parentCommentPK=_parentCommentPK;
@property(retain, nonatomic) NSDate *createDate; // @synthesize createDate=_createDate;
@property(copy, nonatomic) NSString *subredditName; // @synthesize subredditName=_subredditName;
@property(copy, nonatomic) NSString *permalink; // @synthesize permalink=_permalink;
@property(copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(copy, nonatomic) NSString *htmlBody; // @synthesize htmlBody=_htmlBody;
@property(copy, nonatomic) NSAttributedString *bodyAttributedText; // @synthesize bodyAttributedText=_bodyAttributedText;
@property(copy, nonatomic) NSString *bodyText; // @synthesize bodyText=_bodyText;
@property(copy, nonatomic) NSString *linkedPostID; // @synthesize linkedPostID=_linkedPostID;
@property(copy, nonatomic) NSArray *childrenCommentPKs; // @synthesize childrenCommentPKs=_childrenCommentPKs;
@property(nonatomic) _Bool isLoadingMoreNode; // @synthesize isLoadingMoreNode=_isLoadingMoreNode;
@property(nonatomic) double lastUpdated; // @synthesize lastUpdated=_lastUpdated;
- (void).cxx_destruct;
- (id)selectorsToObserveChanges;
@property(readonly, copy) NSString *debugDescription;
- (id)debugDescriptionWithLevel:(long long)arg1;
@property(readonly, copy, nonatomic) NSString *sharingPermalinkIncludingDomain;
@property(readonly, copy, nonatomic) NSString *internalPermalinkIncludingDomain;
@property(readonly, nonatomic) _Bool isSelfComment;
@property(readonly, copy, nonatomic) NSString *pkWithoutPrefix;
- (void)themeDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool hasImages;
- (id)init;
@property(readonly, copy, nonatomic) NSString *parentCommentPKWithoutPrefix;
@property(readonly, copy, nonatomic) NSString *linkedPostIDWithoutPrefix;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface BaseLabel : UILabel <ThemeUpdateCallbackProtocol>
{
    CALayer *_topBorder;
    CALayer *_bottomBorder;
    CALayer *_trailingBorder;
    CALayer *_leadingBorder;
    struct UIEdgeInsets _borderSizes;
    struct UIEdgeInsets _bottomBorderInsets;
    struct UIEdgeInsets _textEdgeInsets;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1;
@property(nonatomic) struct UIEdgeInsets textEdgeInsets; // @synthesize textEdgeInsets=_textEdgeInsets;
@property(retain, nonatomic) CALayer *leadingBorder; // @synthesize leadingBorder=_leadingBorder;
@property(retain, nonatomic) CALayer *trailingBorder; // @synthesize trailingBorder=_trailingBorder;
@property(retain, nonatomic) CALayer *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(retain, nonatomic) CALayer *topBorder; // @synthesize topBorder=_topBorder;
@property(nonatomic) struct UIEdgeInsets bottomBorderInsets; // @synthesize bottomBorderInsets=_bottomBorderInsets;
@property(nonatomic) struct UIEdgeInsets borderSizes; // @synthesize borderSizes=_borderSizes;
- (void).cxx_destruct;
- (void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4;
- (void)updateContentViewsForData:(id)arg1;
- (void)layoutSubviews;
- (void)themeDidChange:(id)arg1;
- (void)drawTextInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OpenInChromeController : NSObject
{
}

+ (id)sharedInstance;
- (_Bool)openInChrome:(id)arg1 withCallbackURL:(id)arg2 createNewTab:(_Bool)arg3;
- (_Bool)openInChrome:(id)arg1;
- (_Bool)isChromeInstalled;

@end

@interface LiveBannerContentView : BaseView
{
    id <LiveBannerContentViewDelegate> _delegate;
    LiveEvent *_liveEvent;
    AttributedLabelRegular *_metadataLabel;
    BaseLabel *_titleLabel;
    BaseImageView *_chevronImageView;
}

+ (id)metadataStringWithLiveEvent:(id)arg1;
+ (struct CGSize)calculatedSizeWithData:(id)arg1;
+ (id)titleLabelFactory;
@property(retain, nonatomic) BaseImageView *chevronImageView; // @synthesize chevronImageView=_chevronImageView;
@property(retain, nonatomic) BaseLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) AttributedLabelRegular *metadataLabel; // @synthesize metadataLabel=_metadataLabel;
@property(retain, nonatomic) LiveEvent *liveEvent; // @synthesize liveEvent=_liveEvent;
@property(nonatomic) __weak id <LiveBannerContentViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didTap:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)init;

@end

@interface TitledPopupViewController : BaseViewController
{
}

- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface UserTableHeaderView : BaseView <ThemeUpdateCallbackProtocol>
{
    BaseImageView *_karmaLogoView;
    BaseImageView *_createdLogoView;
    BaseLabel *_karmaSubtitleLabel;
    BaseLabel *_createdSubtitleLabel;
    BaseView *_divider;
    BaseView *_divider2;
    BaseView *_divider3;
    BaseView *_karmaView;
    BaseView *_karmaDetailView;
    BaseView *_createdView;
    BaseView *_createdDetailView;
    BaseLabel *_karmaLabel;
    BaseLabel *_commentKarmaLabel;
    BaseLabel *_linkKarmaLabel;
    BaseLabel *_createdAtLabel;
    BaseLabel *_createdDetailLabel;
    BaseLabel *_redditorSinceLabel;
    UITapGestureRecognizer *_tapGesture;
    double _xOffset;
}

+ (double)defaultHeight;
@property(nonatomic) double xOffset; // @synthesize xOffset=_xOffset;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(retain, nonatomic) BaseLabel *redditorSinceLabel; // @synthesize redditorSinceLabel=_redditorSinceLabel;
@property(retain, nonatomic) BaseLabel *createdDetailLabel; // @synthesize createdDetailLabel=_createdDetailLabel;
@property(retain, nonatomic) BaseLabel *createdAtLabel; // @synthesize createdAtLabel=_createdAtLabel;
@property(retain, nonatomic) BaseLabel *linkKarmaLabel; // @synthesize linkKarmaLabel=_linkKarmaLabel;
@property(retain, nonatomic) BaseLabel *commentKarmaLabel; // @synthesize commentKarmaLabel=_commentKarmaLabel;
@property(retain, nonatomic) BaseLabel *karmaLabel; // @synthesize karmaLabel=_karmaLabel;
@property(retain, nonatomic) BaseView *createdDetailView; // @synthesize createdDetailView=_createdDetailView;
@property(retain, nonatomic) BaseView *createdView; // @synthesize createdView=_createdView;
@property(retain, nonatomic) BaseView *karmaDetailView; // @synthesize karmaDetailView=_karmaDetailView;
@property(retain, nonatomic) BaseView *karmaView; // @synthesize karmaView=_karmaView;
@property(retain, nonatomic) BaseView *divider3; // @synthesize divider3=_divider3;
@property(retain, nonatomic) BaseView *divider2; // @synthesize divider2=_divider2;
@property(retain, nonatomic) BaseView *divider; // @synthesize divider=_divider;
@property(retain, nonatomic) BaseLabel *createdSubtitleLabel; // @synthesize createdSubtitleLabel=_createdSubtitleLabel;
@property(retain, nonatomic) BaseLabel *karmaSubtitleLabel; // @synthesize karmaSubtitleLabel=_karmaSubtitleLabel;
@property(retain, nonatomic) BaseImageView *createdLogoView; // @synthesize createdLogoView=_createdLogoView;
@property(retain, nonatomic) BaseImageView *karmaLogoView; // @synthesize karmaLogoView=_karmaLogoView;
- (void).cxx_destruct;
- (void)themeDidChange:(id)arg1;
- (void)didTap:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithUser:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LabeledTextField : BaseTextField
{
    BaseLabel *_leftLabel;
}

@property(retain, nonatomic) BaseLabel *leftLabel; // @synthesize leftLabel=_leftLabel;
- (void).cxx_destruct;
- (struct CGRect)leftViewRectForBounds:(struct CGRect)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface FeedPostImageView : BaseView <ContentImageViewDelegate>
{
    id <FeedPostImageViewDelegate> _delegate;
    Post *_post;
    ContentImageView *_imageView;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 shouldCropImage:(_Bool)arg2 shouldAlwaysShowImage:(_Bool)arg3 delegate:(id)arg4;
@property(retain, nonatomic) ContentImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak id <FeedPostImageViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)contentImageViewDidTapImage:(id)arg1;
- (void)layoutSubviews;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPAdConversionTracker : NSObject <NSURLConnectionDataDelegate>
{
    NSMutableData *_responseData;
    long long _statusCode;
}

+ (id)sharedConversionTracker;
@property(nonatomic) long long statusCode; // @synthesize statusCode=_statusCode;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
- (void).cxx_destruct;
- (id)URLForAppID:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)reportApplicationOpenForApplicationID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FeedPostYouTubeEmbeddedView : BaseView <UIGestureRecognizerDelegate, YTPlayerViewDelegate>
{
    _Bool _allowYoutubeProgressTimeRecovery;
    id <FeedPostYouTubeEmbeddedViewDelegate> _delegate;
    Post *_post;
    ContentImageView *_imageView;
    YTPlayerView *_embeddedPlayerView;
    LoaderSnooView *_snooForLoading;
    BaseImageView *_videoPlayButtonOverlay;
    long long _currentState;
}

+ (struct CGSize)calculatedSizeWithData:(id)arg1 andDelegate:(id)arg2;
@property(nonatomic) _Bool allowYoutubeProgressTimeRecovery; // @synthesize allowYoutubeProgressTimeRecovery=_allowYoutubeProgressTimeRecovery;
@property(nonatomic) long long currentState; // @synthesize currentState=_currentState;
@property(retain, nonatomic) BaseImageView *videoPlayButtonOverlay; // @synthesize videoPlayButtonOverlay=_videoPlayButtonOverlay;
@property(retain, nonatomic) LoaderSnooView *snooForLoading; // @synthesize snooForLoading=_snooForLoading;
@property(retain, nonatomic) YTPlayerView *embeddedPlayerView; // @synthesize embeddedPlayerView=_embeddedPlayerView;
@property(retain, nonatomic) ContentImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) Post *post; // @synthesize post=_post;
@property(nonatomic) __weak id <FeedPostYouTubeEmbeddedViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)enableMuteSwitch:(_Bool)arg1;
- (void)playerView:(id)arg1 didPlayTime:(float)arg2;
- (_Bool)playerView:(id)arg1 handleNavigationToUrl:(id)arg2;
- (void)playerView:(id)arg1 receivedError:(long long)arg2;
- (id)playerViewPreferredWebViewBackgroundColor:(id)arg1;
- (void)playerView:(id)arg1 didChangeToState:(long long)arg2;
- (void)playerViewDidBecomeReady:(id)arg1;
- (void)removePlayButtonAndShowPlayer;
- (void)recoverPlayProgressIfNeeded;
- (void)play;
@property(readonly) _Bool isPlaying;
- (void)configureWithData:(id)arg1 andDelegate:(id)arg2;
- (void)layoutSubviews;
- (void)didEndDisplaying;
- (void)willBeginDisplaying;
- (void)prepareForReuse;
- (void)loadEmbeddedVideoStackForPlayback;
- (void)didTapVideoPlayButton;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UserProfileViewController : PagedTabViewController
{
    NSString *_username;
    FeedViewController *_feedController;
    CommentListViewController *_commentsController;
}

@property(retain, nonatomic) CommentListViewController *commentsController; // @synthesize commentsController=_commentsController;
@property(retain, nonatomic) FeedViewController *feedController; // @synthesize feedController=_feedController;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (id)analyticsScreenViewParameters;
- (id)analyticsScreenViewName;
- (void)viewDidLoad;
- (id)initWithUsername:(id)arg1;

@end

@interface UserPostFeedViewController : FeedViewController
{
}

- (id)analyticsScreenViewName;
- (id)init;

@end

@interface RedditApplication : UIApplication <PostViewControllerDelegate, MFMailComposeViewControllerDelegate>
{
}

- (void)doWebKitHouseKeeping;
- (void)doImageCacheHouseKeeping;
- (_Bool)shouldDoImageCacheHouseKeeping;
- (_Bool)shouldDoWebKitHouseKeeping;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)postViewController:(id)arg1 didFinishWithPost:(id)arg2;
- (void)startTicking;
- (void)postScreenshotToBetaGroup;
- (void)sendEvent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRCommand : NSObject
{
    id <MRCommandDelegate> _delegate;
}

+ (id)commandForString:(id)arg1;
+ (Class)commandClassForString:(id)arg1;
+ (id)commandType;
+ (void)registerCommand:(Class)arg1;
+ (id)sharedCommandClassMap;
@property(nonatomic) __weak id <MRCommandDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)urlFromParameters:(id)arg1 forKey:(id)arg2;
- (id)stringFromParameters:(id)arg1 forKey:(id)arg2;
- (int)intFromParameters:(id)arg1 forKey:(id)arg2;
- (_Bool)boolFromParameters:(id)arg1 forKey:(id)arg2;
- (double)floatFromParameters:(id)arg1 forKey:(id)arg2 withDefault:(double)arg3;
- (double)floatFromParameters:(id)arg1 forKey:(id)arg2;
- (_Bool)executeWithParams:(id)arg1;
- (_Bool)executableWhileBlockingRequests;
- (_Bool)requiresUserInteractionForPlacementType:(unsigned long long)arg1;

@end

@interface MRCloseCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface MRExpandCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface MRResizeCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface MRUseCustomCloseCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;
- (_Bool)requiresUserInteractionForPlacementType:(unsigned long long)arg1;
- (_Bool)executableWhileBlockingRequests;

@end

@interface MRSetOrientationPropertiesCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executableWhileBlockingRequests;
- (_Bool)executeWithParams:(id)arg1;
- (_Bool)requiresUserInteractionForPlacementType:(unsigned long long)arg1;

@end

@interface MROpenCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface MRCreateCalendarEventCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface MRPlayVideoCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;
- (_Bool)requiresUserInteractionForPlacementType:(unsigned long long)arg1;

@end

@interface MRStorePictureCommand : MRCommand
{
}

+ (id)commandType;
+ (void)load;
- (_Bool)executeWithParams:(id)arg1;

@end

@interface RoundedImageView : BaseView
{
    _Bool _cropCircle;
    UIImage *_image;
    UIColor *_circleFillColor;
    struct UIEdgeInsets _imageInsets;
}

@property(nonatomic) struct UIEdgeInsets imageInsets; // @synthesize imageInsets=_imageInsets;
@property(retain, nonatomic) UIColor *circleFillColor; // @synthesize circleFillColor=_circleFillColor;
@property(nonatomic) _Bool cropCircle; // @synthesize cropCircle=_cropCircle;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LabeledCollectionHeaderView : UICollectionReusableView
{
    BaseLabel *_label;
}

@property(retain, nonatomic) BaseLabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SRWebSocket : NSObject <NSStreamDelegate>
{
    long long _webSocketVersion;
    NSOperationQueue *_delegateOperationQueue;
    NSObject<OS_dispatch_queue> *_delegateDispatchQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_consumers;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    NSMutableData *_readBuffer;
    unsigned long long _readBufferOffset;
    NSMutableData *_outputBuffer;
    unsigned long long _outputBufferOffset;
    unsigned char _currentFrameOpcode;
    unsigned long long _currentFrameCount;
    unsigned long long _readOpCount;
    unsigned int _currentStringScanPosition;
    NSMutableData *_currentFrameData;
    NSString *_closeReason;
    NSString *_secKey;
    NSString *_basicAuthorizationString;
    _Bool _pinnedCertFound;
    unsigned char _currentReadMaskKey[4];
    unsigned long long _currentReadMaskOffset;
    _Bool _consumerStopped;
    _Bool _closeWhenFinishedWriting;
    _Bool _failed;
    _Bool _secure;
    NSURLRequest *_urlRequest;
    _Bool _sentClose;
    _Bool _didFail;
    _Bool _cleanupScheduled;
    int _closeCode;
    _Bool _isPumping;
    NSMutableSet *_scheduledRunloops;
    SRWebSocket *_selfRetain;
    NSArray *_requestedProtocols;
    SRIOConsumerPool *_consumerPool;
    _Bool _allowsUntrustedSSLCertificates;
    id <SRWebSocketDelegate> _delegate;
    NSURL *_url;
    long long _readyState;
    NSString *_protocol;
    struct __CFHTTPMessage *_receivedHTTPHeaders;
    NSArray *_requestCookies;
}

+ (void)initialize;
@property(nonatomic) _Bool allowsUntrustedSSLCertificates; // @synthesize allowsUntrustedSSLCertificates=_allowsUntrustedSSLCertificates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateDispatchQueue; // @synthesize delegateDispatchQueue=_delegateDispatchQueue;
@property(retain, nonatomic) NSOperationQueue *delegateOperationQueue; // @synthesize delegateOperationQueue=_delegateOperationQueue;
@property(retain, nonatomic) NSArray *requestCookies; // @synthesize requestCookies=_requestCookies;
@property(readonly, nonatomic) struct __CFHTTPMessage *receivedHTTPHeaders; // @synthesize receivedHTTPHeaders=_receivedHTTPHeaders;
@property(readonly, copy, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property(nonatomic) long long readyState; // @synthesize readyState=_readyState;
@property(readonly, retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) __weak id <SRWebSocketDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safeHandleEvent:(unsigned long long)arg1 stream:(id)arg2;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)_sendFrameWithOpcode:(int)arg1 data:(id)arg2;
- (void)_pumpScanner;
- (_Bool)_innerPumpScanner;
- (void)_readUntilBytes:(const void *)arg1 length:(unsigned long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_readUntilHeaderCompleteWithCallback:(CDUnknownBlockType)arg1;
- (void)_cleanupSelfReference:(id)arg1;
- (void)_scheduleCleanup;
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2 dataLength:(unsigned long long)arg3;
- (void)_addConsumerWithDataLength:(unsigned long long)arg1 callback:(CDUnknownBlockType)arg2 readToCurrentFrame:(_Bool)arg3 unmaskBytes:(_Bool)arg4;
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_pumpWriting;
- (void)_readFrameNew;
- (void)_readFrameContinue;
- (void)_handleFrameHeader:(CDStruct_6a6a01a4)arg1 curData:(id)arg2;
- (void)_handleFrameWithData:(id)arg1 opCode:(long long)arg2;
- (void)closeConnection;
- (void)handleCloseWithData:(id)arg1;
- (void)_handleMessage:(id)arg1;
- (void)handlePong:(id)arg1;
- (void)handlePing:(id)arg1;
- (void)sendPing:(id)arg1;
- (void)send:(id)arg1;
- (void)_writeData:(id)arg1;
- (void)_failWithError:(id)arg1;
- (void)_closeWithProtocolError:(id)arg1;
- (void)closeWithCode:(long long)arg1 reason:(id)arg2;
- (void)close;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)openConnection;
- (void)setupNetworkServiceType:(unsigned long long)arg1;
- (void)_updateSecureStreamOptions;
- (void)_initializeStreams;
- (void)didConnect;
- (void)_readHTTPHeader;
- (void)_HTTPHeadersDidFinish;
- (_Bool)_checkHandshake:(struct __CFHTTPMessage *)arg1;
- (void)_performDelegateBlock:(CDUnknownBlockType)arg1;
- (void)open;
- (void)dealloc;
- (void)assertOnWorkQueue;
- (void)_SR_commonInit;
- (id)initWithURL:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(_Bool)arg3;
- (id)initWithURL:(id)arg1 protocols:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2;
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SRIOConsumer : NSObject
{
    CDUnknownBlockType _scanner;
    CDUnknownBlockType _handler;
    unsigned long long _bytesNeeded;
    _Bool _readToCurrentFrame;
    _Bool _unmaskBytes;
}

@property(readonly, nonatomic) _Bool unmaskBytes; // @synthesize unmaskBytes=_unmaskBytes;
@property(readonly, nonatomic) _Bool readToCurrentFrame; // @synthesize readToCurrentFrame=_readToCurrentFrame;
@property(readonly, copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(readonly, copy, nonatomic) CDUnknownBlockType consumer; // @synthesize consumer=_scanner;
@property(nonatomic) unsigned long long bytesNeeded; // @synthesize bytesNeeded=_bytesNeeded;
- (void).cxx_destruct;
- (void)setupWithScanner:(CDUnknownBlockType)arg1 handler:(CDUnknownBlockType)arg2 bytesNeeded:(unsigned long long)arg3 readToCurrentFrame:(_Bool)arg4 unmaskBytes:(_Bool)arg5;

@end

@interface SRIOConsumerPool : NSObject
{
    unsigned long long _poolSize;
    NSMutableArray *_bufferedConsumers;
}

- (void).cxx_destruct;
- (void)returnConsumer:(id)arg1;
- (id)consumerWithScanner:(CDUnknownBlockType)arg1 handler:(CDUnknownBlockType)arg2 bytesNeeded:(unsigned long long)arg3 readToCurrentFrame:(_Bool)arg4 unmaskBytes:(_Bool)arg5;
- (id)init;
- (id)initWithBufferCapacity:(unsigned long long)arg1;

@end

@interface _SRRunLoopThread : NSThread
{
    NSObject<OS_dispatch_group> *_waitGroup;
    NSRunLoop *_runLoop;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
- (void)main;
- (id)init;
- (void)dealloc;

@end

@interface RootViewController : BaseViewController <IntroViewControllerDelegate, UIAlertViewDelegate>
{
    _Bool _hasConfiguredControllers;
    IntroViewController *_introController;
    MainTabBarController *_tabController;
    AnimatedSpinner *_firstLoadSpinner;
}

@property(nonatomic) _Bool hasConfiguredControllers; // @synthesize hasConfiguredControllers=_hasConfiguredControllers;
@property(retain, nonatomic) AnimatedSpinner *firstLoadSpinner; // @synthesize firstLoadSpinner=_firstLoadSpinner;
@property(retain, nonatomic) MainTabBarController *tabController; // @synthesize tabController=_tabController;
@property(retain, nonatomic) IntroViewController *introController; // @synthesize introController=_introController;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)allowNonEdgyNavigationPopGesture;
- (void)introViewControllerDidFinish:(id)arg1 shouldShowOnboarding:(_Bool)arg2;
- (void)showMainViewControllers;
- (void)hideIntroViewController;
- (void)skipButtonTapped;
- (void)showIntroViewController;
- (id)childViewControllerForStatusBarStyle;
- (void)showAlertDialogWithTitle:(id)arg1 actionURLString:(id)arg2 force:(_Bool)arg3;
- (void)showStartupDialogIfNeeded;
- (void)unloadChildViewControllers;
- (void)refreshConfig;
- (void)configureControllers;
- (void)didChangeUser:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRScribeService : NSObject <TFSScribeRequestHandler>
{
    TFSScribe *_scribe;
    TWTRSessionStore *_sessionStore;
    TWTRNetworkingPipeline *_networkingPipeline;
    id <TWTRAPIServiceConfig> _scribeAPIServiceConfig;
    NSTimer *_scribeTimer;
    double _secondsToDelayScribe;
    long long _scribeFailCount;
}

@property(nonatomic) long long scribeFailCount; // @synthesize scribeFailCount=_scribeFailCount;
@property(nonatomic) double secondsToDelayScribe; // @synthesize secondsToDelayScribe=_secondsToDelayScribe;
@property(retain, nonatomic) NSTimer *scribeTimer; // @synthesize scribeTimer=_scribeTimer;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> scribeAPIServiceConfig; // @synthesize scribeAPIServiceConfig=_scribeAPIServiceConfig;
@property(readonly, nonatomic) TWTRNetworkingPipeline *networkingPipeline; // @synthesize networkingPipeline=_networkingPipeline;
@property(readonly, nonatomic) TWTRSessionStore *sessionStore; // @synthesize sessionStore=_sessionStore;
@property(readonly, nonatomic) TFSScribe *scribe; // @synthesize scribe=_scribe;
- (void).cxx_destruct;
- (_Bool)isValidEventsArray:(id)arg1;
- (id)existingUserIDs;
- (id)URLRequestByAppendingAttributionHeadersToRequest:(id)arg1;
- (id)URLRequestWithAttributionHeadersFromRequestBuilder:(id)arg1 parameters:(id)arg2;
- (id)requestBuilder;
- (id)scribeServiceRequestParameters:(id)arg1;
- (void)enqueuePipelineRequest:(id)arg1 userID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendOutgoingEvents:(id)arg1 userID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)mainThreadHandleScribeOutgoingEvents:(id)arg1 userID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleScribeOutgoingEvents:(id)arg1 userID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scheduleScribe;
- (void)scribePendingEvents;
- (void)openScribe:(id)arg1;
- (void)enqueueEvents:(id)arg1;
- (void)enqueueEvent:(id)arg1;
- (void)setSessionStore:(id)arg1 networkingPipeline:(id)arg2;
- (id)initWithScribe:(id)arg1 scribeAPIServiceConfig:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRUserAuthRequestSigner : NSObject
{
}

+ (id)signedURLRequest:(id)arg1 authConfig:(id)arg2 session:(id)arg3;

@end

@interface TWTRMultipartFormElement : NSObject
{
    NSString *_name;
    NSString *_contentType;
    NSString *_fileName;
    NSData *_content;
}

@property(readonly, copy, nonatomic) NSData *content; // @synthesize content=_content;
@property(readonly, copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly, copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)documentData;
- (id)initWithName:(id)arg1 contentType:(id)arg2 fileName:(id)arg3 content:(id)arg4;

@end

@interface TWTRMultipartFormDocument : NSObject
{
    NSString *_boundary;
    NSString *_contentTypeHeaderField;
    NSObject<OS_dispatch_io> *_writeChannel;
    NSObject<OS_dispatch_queue> *_serialIOHandlerQueue;
    NSArray *_formElements;
}

@property(readonly, nonatomic) NSArray *formElements; // @synthesize formElements=_formElements;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialIOHandlerQueue; // @synthesize serialIOHandlerQueue=_serialIOHandlerQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_io> *writeChannel; // @synthesize writeChannel=_writeChannel;
@property(readonly, copy, nonatomic) NSString *contentTypeHeaderField; // @synthesize contentTypeHeaderField=_contentTypeHeaderField;
@property(readonly, copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
- (void).cxx_destruct;
- (id)documentData;
- (void)loadBodyDataWithCallbackQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithFormElements:(id)arg1;
- (id)init;

@end

@interface TWTRAPINetworkErrorsShim : NSObject
{
    NSURLResponse *_response;
    NSData *_responseData;
}

+ (id)acceptableHTTPStatusCodes;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
- (void).cxx_destruct;
- (id)firstNormalizedAPIErrorInResponseBody:(id)arg1;
- (id)validate;
- (id)initWithHTTPResponse:(id)arg1 responseData:(id)arg2;

@end

@interface TWTRAPIResponseValidator : NSObject <TWTRNetworkingResponseValidating>
{
}

- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRDateFormatters : NSObject
{
}

+ (id)locale;
+ (void)setLocale:(id)arg1;
+ (void)resetCache;
+ (id)cache;
+ (id)shortHistoricalDateFormatter;
+ (id)systemLongDateFormatter;
+ (id)dayAndMonthDateFormatter;
+ (id)HTTPDateHeaderParsingFormatter;
+ (id)serverParsingDateFormatter;

@end

@interface TWTRGuestAuthRequestSigner : NSObject
{
}

+ (id)signedURLRequest:(id)arg1 session:(id)arg2;

@end

@interface TWTRKeychainWrapper : NSObject
{
    NSMutableDictionary *_keychainItemData;
    NSMutableDictionary *_genericPasswordQuery;
}

@property(retain, nonatomic) NSMutableDictionary *genericPasswordQuery; // @synthesize genericPasswordQuery=_genericPasswordQuery;
@property(retain, nonatomic) NSMutableDictionary *keychainItemData; // @synthesize keychainItemData=_keychainItemData;
- (void).cxx_destruct;
- (void)executeAccessGroupBlockWithBlock:(CDUnknownBlockType)arg1 withBlockToRunOnSimulator:(CDUnknownBlockType)arg2;
- (_Bool)writeToKeychain;
- (id)secItemFormatToDictionary:(id)arg1;
- (id)dictionaryToSecItemFormat:(id)arg1;
- (void)resetKeychainItem;
- (id)objectForKey:(id)arg1;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (id)initWithAccount:(id)arg1 service:(id)arg2 accessGroup:(id)arg3;

@end

@interface TWTRScribeClientEventNamespace : NSObject <TWTRScribeSerializable>
{
    NSString *_client;
    NSString *_page;
    NSString *_section;
    NSString *_component;
    NSString *_element;
    NSString *_action;
}

+ (id)errorNamespace;
+ (id)scribeKey;
@property(readonly, copy, nonatomic) NSString *action; // @synthesize action=_action;
@property(readonly, copy, nonatomic) NSString *element; // @synthesize element=_element;
@property(readonly, copy, nonatomic) NSString *component; // @synthesize component=_component;
@property(readonly, copy, nonatomic) NSString *section; // @synthesize section=_section;
@property(readonly, copy, nonatomic) NSString *page; // @synthesize page=_page;
@property(readonly, copy, nonatomic) NSString *client; // @synthesize client=_client;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithClient:(id)arg1 page:(id)arg2 section:(id)arg3 component:(id)arg4 element:(id)arg5 action:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface TwitterUserAPIClient : TwitterNetworking
{
    NSString *_authToken;
    NSString *_authTokenSecret;
}

+ (id)hostWithPortFromURL:(id)arg1;
@property(readonly, copy, nonatomic) NSString *authTokenSecret; // @synthesize authTokenSecret=_authTokenSecret;
@property(readonly, copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
- (void).cxx_destruct;
- (id)URLRequestWithMethod:(id)arg1 URL:(id)arg2 parameters:(id)arg3;
- (id)DELETE:(id)arg1 parameters:(id)arg2;
- (id)POST:(id)arg1 parameters:(id)arg2;
- (id)GET:(id)arg1 parameters:(id)arg2;
- (id)initWithAuthConfig:(id)arg1 authToken:(id)arg2 authTokenSecret:(id)arg3;

@end

@interface TwitterNetworking : NSObject
{
    TWTRAuthConfig *_authConfig;
}

+ (id)defaultAdditionalHeaders;
+ (id)defaultConfiguration;
+ (id)URLSession;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (id)operationQueue;
- (id)URLRequestWithMethod:(id)arg1 URL:(id)arg2 parameters:(id)arg3;
- (void)sendAsynchronousRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)DELETE:(id)arg1 parameters:(id)arg2;
- (id)POST:(id)arg1 parameters:(id)arg2;
- (id)GET:(id)arg1 parameters:(id)arg2;
- (id)initWithAuthConfig:(id)arg1;

@end

@interface TWTRRequestSigningOperation : NSOperation
{
    TWTRNetworkingPipelinePackage *_networkingPackage;
    CDUnknownBlockType _successCallbackToExecute;
    CDUnknownBlockType _cancelCallbackToExecute;
}

@property(copy, nonatomic) CDUnknownBlockType cancelCallbackToExecute; // @synthesize cancelCallbackToExecute=_cancelCallbackToExecute;
@property(copy, nonatomic) CDUnknownBlockType successCallbackToExecute; // @synthesize successCallbackToExecute=_successCallbackToExecute;
@property(readonly, nonatomic) TWTRNetworkingPipelinePackage *networkingPackage; // @synthesize networkingPackage=_networkingPackage;
- (void).cxx_destruct;
- (id)signRequest:(id)arg1;
- (void)didInvokeCompletionBlock;
- (void)invokeCancelBlock;
- (void)invokeSuccessBlock:(id)arg1;
- (void)cancel;
- (void)main;
- (id)initWithPackage:(id)arg1 success:(CDUnknownBlockType)arg2 cancel:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface TWTRGuestRequestSigningOperation : TWTRRequestSigningOperation
{
    CDUnknownBlockType _sessionProvider;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType sessionProvider; // @synthesize sessionProvider=_sessionProvider;
- (void).cxx_destruct;
- (id)signRequest:(id)arg1;
- (id)initWithPackage:(id)arg1 sessionProvider:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 cancel:(CDUnknownBlockType)arg4;

@end

@interface TWTRUserRequestSigningOperation : TWTRRequestSigningOperation
{
    CDUnknownBlockType _sessionProvider;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType sessionProvider; // @synthesize sessionProvider=_sessionProvider;
- (void).cxx_destruct;
- (id)signRequest:(id)arg1;
- (id)initWithPackage:(id)arg1 sessionProvider:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 cancel:(CDUnknownBlockType)arg4;

@end

@interface TWTRColorUtil : NSObject
{
}

+ (id)lighterColorForColor:(id)arg1 lightnessLevel:(double)arg2;
+ (id)darkerColorForColor:(id)arg1 lightnessLevel:(double)arg2;
+ (id)contrastingTextColorFromBackgroundColor:(id)arg1;
+ (id)logoColorFromBackgroundColor:(id)arg1;
+ (id)mediaBackgroundColorFromBackgroundColor:(id)arg1;
+ (id)secondaryTextColorFromPrimaryTextColor:(id)arg1 backgroundColor:(id)arg2 minAlpha:(double)arg3 maxAlpha:(double)arg4;
+ (id)secondaryTextColorFromPrimaryTextColor:(id)arg1 backgroundColor:(id)arg2;
+ (_Bool)isOpaqueColor:(id)arg1;
+ (_Bool)isLightColor:(id)arg1 lightnessThreshold:(double)arg2;
+ (_Bool)isLightColor:(id)arg1;
+ (id)imageWithColor:(id)arg1;
+ (id)colorFromHex:(long long)arg1;
+ (long long)hexWithColor:(id)arg1;
+ (id)imagePlaceholderColor;
+ (id)textColor;
+ (id)darkGrayColor;
+ (id)mediumGrayColor;
+ (id)faintGrayColor;
+ (id)darkGrayTextColor;
+ (id)grayTextColor;
+ (id)darkBorderGrayColor;
+ (id)borderGrayColor;
+ (id)grayColor;
+ (id)mediumPurpleColor;
+ (id)deepPurpleColor;
+ (id)darkPurpleColor;
+ (id)darkRedColor;
+ (id)redColor;
+ (id)darkBlueColor;
+ (id)mediumBlueColor;
+ (id)lightBlueColor;
+ (id)blueTextColor;
+ (id)blueColor;
+ (id)whiteColor;
+ (id)blackColor;

@end

@interface TWTRFileManager : NSObject
{
}

+ (id)pathForFileName:(id)arg1 inDirectory:(id)arg2;
+ (id)readDictionaryFromFileName:(id)arg1 inDirectory:(id)arg2;
+ (_Bool)writeDictionary:(id)arg1 toFileName:(id)arg2 inDirectory:(id)arg3;
+ (_Bool)createFileWithName:(id)arg1 inDirectory:(id)arg2;
+ (id)cacheDirectory;

@end

@interface TWTRGuestSessionRefreshStrategy : NSObject <TWTRSessionRefreshStrategy>
{
    TWTRAuthConfig *_authConfig;
    NSString *_accessToken;
    id <TWTRAPIServiceConfig> _APIServiceConfig;
}

+ (_Bool)isSessionExpiredBasedOnRequestError:(id)arg1;
+ (_Bool)isSessionExpiredBasedOnRequestResponse:(id)arg1;
+ (_Bool)canSupportSessionClass:(Class)arg1;
+ (id)expiredStatusCodes;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> APIServiceConfig; // @synthesize APIServiceConfig=_APIServiceConfig;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (void)refreshSession:(id)arg1 URLSession:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TFSScribe : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSURL *_storeURL;
    NSURL *_modelURL;
    long long _requestID;
    NSManagedObjectContext *_managedObjectContext;
    unsigned int _flags;
    id <TFSScribeErrorDelegate> _errorDelegate;
}

+ (void)setDebugEnabled:(_Bool)arg1;
+ (_Bool)isDebugEnabled;
@property(nonatomic) __weak id <TFSScribeErrorDelegate> errorDelegate; // @synthesize errorDelegate=_errorDelegate;
- (void).cxx_destruct;
- (id)_modelURL;
- (void)_handleScribeError:(id)arg1;
- (void)_resetScribeEvents;
- (void)_removePersistentStore;
- (void)_performInManagedObjectContext:(CDUnknownBlockType)arg1;
- (void)_setupManagedObjectContext;
- (void)_deleteImpressionsForUserID:(id)arg1 managedObjectContext:(id)arg2;
- (void)_deleteEventsForUserID:(id)arg1 managedObjectContext:(id)arg2;
- (void)deleteUserID:(id)arg1;
- (void)_didFlushEventsWithRequestID:(long long)arg1 disposition:(unsigned long long)arg2 userID:(id)arg3 managedObjectContext:(id)arg4;
- (id)_flushEventsWithRequestID:(long long)arg1 userID:(id)arg2 managedObjectContext:(id)arg3;
- (void)_batchImpressionsForUserID:(id)arg1 requestHandler:(id)arg2 managedObjectContext:(id)arg3;
- (void)flushUserID:(id)arg1 token:(id)arg2 requestHandler:(id)arg3;
- (void)flushUserID:(id)arg1 requestHandler:(id)arg2;
- (void)_enqueueImpression:(id)arg1 eventName:(id)arg2 query:(id)arg3 clientVersion:(id)arg4 timestamp:(id)arg5 userID:(id)arg6 managedObjectContext:(id)arg7;
- (void)enqueueImpression:(id)arg1 eventName:(id)arg2 query:(id)arg3 clientVersion:(id)arg4 userID:(id)arg5;
- (void)_enqueueEvent:(id)arg1 timestamp:(id)arg2 managedObjectContext:(id)arg3;
- (void)enqueueEvent:(id)arg1;
- (void)resume;
- (void)suspend;
- (void)closeWithStartBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)close;
- (void)openWithStartBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)open;
- (id)initWithStoreURL:(id)arg1 modelURL:(id)arg2;
- (id)initWithStoreURL:(id)arg1;
- (id)init;

@end

@interface TFSScribeEvent : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSData *content; // @dynamic content;
@property(retain, nonatomic) NSNumber *requestID; // @dynamic requestID;
@property(retain, nonatomic) NSNumber *retryCount; // @dynamic retryCount;
@property(retain, nonatomic) NSDate *timestamp; // @dynamic timestamp;
@property(retain, nonatomic) NSNumber *userID; // @dynamic userID;
@end

@interface TWTRResourcesUtil : NSObject
{
}

+ (id)localizedApplicationDisplayName;
+ (id)userAgentFromKitBundle;
+ (id)platform;
+ (id)OSVersionString;
+ (id)deviceModel;
+ (double)screenScale;
+ (id)localizedStringForKey:(id)arg1 bundlePath:(id)arg2;
+ (id)localizedBundleWithBundlePath:(id)arg1;
+ (id)localizedBundleWithBundle:(id)arg1;
+ (id)bundleWithBundlePath:(id)arg1;

@end

@interface TWTRAuthenticationProvider : NSObject
{
}

+ (void)validateResponseWithResponse:(id)arg1 data:(id)arg2 connectionError:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)authenticateWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface TWTRAuthConfig : NSObject <NSCoding>
{
    NSString *_consumerKey;
    NSString *_consumerSecret;
}

@property(copy, nonatomic) NSString *consumerSecret; // @synthesize consumerSecret=_consumerSecret;
@property(copy, nonatomic) NSString *consumerKey; // @synthesize consumerKey=_consumerKey;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToAuthConfig:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithConsumerKey:(id)arg1 consumerSecret:(id)arg2;

@end

@interface TWTRDateUtil : NSObject
{
}

+ (id)UTCDateWithYear:(unsigned long long)arg1 month:(unsigned long long)arg2 day:(unsigned long long)arg3 hour:(unsigned long long)arg4 minute:(unsigned long long)arg5 second:(unsigned long long)arg6;
+ (_Bool)date:(id)arg1 isWithinSameUTCDayAsDate:(id)arg2;
+ (_Bool)isDate:(id)arg1 withinInterval:(double)arg2 fromDate:(id)arg3;
+ (id)accessibilityTextForDate:(id)arg1;
+ (_Bool)isDateInCurrentYear:(id)arg1;

@end

@interface TWTRUserSessionVerifier : NSObject
{
    _Bool _alreadyStarted;
    id <TWTRUserSessionVerifierDelegate> _delegate;
    double _maxDesiredInterval;
    NSDate *_lastVerifiedTimestamp;
}

@property(nonatomic) _Bool alreadyStarted; // @synthesize alreadyStarted=_alreadyStarted;
@property(retain, nonatomic) NSDate *lastVerifiedTimestamp; // @synthesize lastVerifiedTimestamp=_lastVerifiedTimestamp;
@property(readonly, nonatomic) double maxDesiredInterval; // @synthesize maxDesiredInterval=_maxDesiredInterval;
@property(nonatomic) __weak id <TWTRUserSessionVerifierDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)isPastMaxDesiredInterval;
- (void)verifyNowIfNecessary;
- (void)dealloc;
- (void)addHooksForFutureVerifications;
- (void)startVerification;
- (void)startVerificationAfterDelay:(double)arg1;
- (id)initWithDelegate:(id)arg1 maxDesiredInterval:(double)arg2;

@end

@interface TWTRGuestAuthProvider : TWTRAuthenticationProvider
{
    id <TWTRAPIServiceConfig> _apiServiceConfig;
    TWTRAuthConfig *_authConfig;
    NSString *_accessToken;
    TwitterAppAPIClient *_appAPIClient;
}

@property(retain, nonatomic) TwitterAppAPIClient *appAPIClient; // @synthesize appAPIClient=_appAPIClient;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> apiServiceConfig; // @synthesize apiServiceConfig=_apiServiceConfig;
- (void).cxx_destruct;
- (id)guestAuthResponseFromValidationResponseDictionary:(id)arg1;
- (id)activateNewGuestTokenRequest;
- (void)authenticateWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithAuthConfig:(id)arg1 apiServiceConfig:(id)arg2 accessToken:(id)arg3;

@end

@interface TWTRScribeMediaDetails : NSObject <TWTRScribeSerializable>
{
    NSString *_publisherID;
    NSString *_contentID;
    unsigned long long _mediaType;
}

+ (id)scribeKey;
@property(readonly, nonatomic) unsigned long long mediaType; // @synthesize mediaType=_mediaType;
@property(readonly, copy, nonatomic) NSString *contentID; // @synthesize contentID=_contentID;
@property(readonly, copy, nonatomic) NSString *publisherID; // @synthesize publisherID=_publisherID;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithPublisherID:(id)arg1 contentID:(id)arg2 mediaType:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRIdentifier : NSObject
{
}

@end

@interface TWTRScribeEvent : NSObject <TFSScribeEventParameters>
{
    NSString *_userID;
    NSString *_tweetID;
    NSString *_eventInfo;
    unsigned long long _category;
    TWTRScribeClientEventNamespace *_eventNamespace;
    NSArray *_items;
    NSNumber *_timestamp;
    NSString *_currentLanguage;
}

+ (id)categoryStringFromEnum:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSString *currentLanguage; // @synthesize currentLanguage=_currentLanguage;
@property(readonly, nonatomic) NSNumber *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, copy, nonatomic) TWTRScribeClientEventNamespace *eventNamespace; // @synthesize eventNamespace=_eventNamespace;
@property(readonly, nonatomic) unsigned long long category; // @synthesize category=_category;
@property(readonly, copy, nonatomic) NSString *eventInfo; // @synthesize eventInfo=_eventInfo;
@property(readonly, copy, nonatomic) NSString *tweetID; // @synthesize tweetID=_tweetID;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
- (id)data;
- (id)dictionaryRepresentation;
- (id)standardParameters;
- (id)initWithUserID:(id)arg1 eventInfo:(id)arg2 category:(unsigned long long)arg3 eventNamespace:(id)arg4 items:(id)arg5;
- (id)initWithUserID:(id)arg1 tweetID:(id)arg2 category:(unsigned long long)arg3 eventNamespace:(id)arg4 items:(id)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRErrorScribeEvent : TWTRScribeEvent
{
    NSError *_error;
    NSString *_errorMessage;
}

@property(readonly, copy, nonatomic) NSString *errorMessage; // @synthesize errorMessage=_errorMessage;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)initWithError:(id)arg1 message:(id)arg2;
- (id)dictionaryRepresentation;

@end

@interface TWTRGenericKeychainQuery : NSObject
{
    NSString *_service;
    NSString *_account;
    NSString *_genericValue;
    NSString *_accessGroup;
}

+ (id)queryForAccessGroup:(id)arg1;
+ (id)queryForGenericValue:(id)arg1;
+ (id)queryForService:(id)arg1 account:(id)arg2;
+ (id)queryForAccount:(id)arg1;
+ (id)queryForService:(id)arg1;
+ (id)queryForAllItems;
@property(readonly, copy, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
@property(readonly, copy, nonatomic) NSString *genericValue; // @synthesize genericValue=_genericValue;
@property(readonly, copy, nonatomic) NSString *account; // @synthesize account=_account;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (id)queryDictionary;
- (id)initWithService:(id)arg1 account:(id)arg2 genericValue:(id)arg3 accessGroup:(id)arg4;

@end

@interface TWTRGenericKeychainItem : NSObject
{
    NSString *_service;
    NSString *_account;
    NSData *_secret;
    NSString *_genericValue;
    NSDate *_lastSavedDate;
    NSString *_accessGroup;
}

+ (id)errorDescriptionForKeychainOsCode:(int)arg1;
+ (id)errorWithStatus:(int)arg1;
+ (id)storedItemsMatchingQueryDictionary:(id)arg1 error:(id *)arg2;
+ (id)storedItemsMatchingQuery:(id)arg1 error:(id *)arg2;
+ (id)unsynchronizedStoredItemsMatchingQuery:(id)arg1 error:(id *)arg2;
+ (_Bool)removeAllItemsForQuery:(id)arg1 error:(id *)arg2;
+ (void)synchronouslyAccessKeychain:(CDUnknownBlockType)arg1;
+ (id)keychainItemFromRawObject:(id)arg1;
@property(readonly, copy, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
@property(readonly, copy, nonatomic) NSDate *lastSavedDate; // @synthesize lastSavedDate=_lastSavedDate;
@property(readonly, copy, nonatomic) NSString *genericValue; // @synthesize genericValue=_genericValue;
@property(readonly, copy, nonatomic) NSData *secret; // @synthesize secret=_secret;
@property(readonly, copy, nonatomic) NSString *account; // @synthesize account=_account;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (id)existingKeychainItem;
- (id)simpleRawRepresentation;
- (id)fullRawRepresentation;
- (_Bool)unsynchronizedRemoveFromKeychain:(id *)arg1;
- (_Bool)removeFromKeychain:(id *)arg1;
- (_Bool)storeInKeychainReplacingExisting:(_Bool)arg1 error:(id *)arg2;
- (_Bool)storeInKeychain:(id *)arg1;
- (_Bool)isEqualToKeychainItem:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithService:(id)arg1 account:(id)arg2 secret:(id)arg3 genericValue:(id)arg4 accessGroup:(id)arg5;
- (id)initWithService:(id)arg1 account:(id)arg2 secret:(id)arg3 genericValue:(id)arg4;
- (id)initWithService:(id)arg1 account:(id)arg2 secret:(id)arg3;

@end

@interface TWTRNetworkingPipeline : NSObject
{
    id <TWTRNetworkingResponseValidating> _responseValidator;
    NSMutableDictionary *_userQueueLookupTable;
    TWTRNetworkingPipelineQueue *_guestQueue;
    NSURLSession *_URLSession;
}

@property(readonly, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property(readonly, nonatomic) TWTRNetworkingPipelineQueue *guestQueue; // @synthesize guestQueue=_guestQueue;
@property(readonly, nonatomic) NSMutableDictionary *userQueueLookupTable; // @synthesize userQueueLookupTable=_userQueueLookupTable;
@property(readonly, nonatomic) id <TWTRNetworkingResponseValidating> responseValidator; // @synthesize responseValidator=_responseValidator;
- (void).cxx_destruct;
- (id)enqueueUserPackage:(id)arg1;
- (id)enqueueGuestPackage:(id)arg1;
- (id)userQueueForUser:(id)arg1;
- (id)enqueueRequest:(id)arg1 sessionStore:(id)arg2 requestingUser:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)enqueueRequest:(id)arg1 sessionStore:(id)arg2 requestingUser:(id)arg3;
- (id)enqueueRequest:(id)arg1 sessionStore:(id)arg2;
- (id)initWithURLSession:(id)arg1 responseValidator:(id)arg2;

@end

@interface TWTRCore : NSObject <FABKit>
{
}

+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TwitterAppAPIClient : TwitterNetworking
{
    NSString *_accessToken;
}

@property(retain, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (void).cxx_destruct;
- (id)authHeaderValue;
- (id)URLRequestWithMethod:(id)arg1 URL:(id)arg2 parameters:(id)arg3;
- (id)initWithAuthConfig:(id)arg1 accessToken:(id)arg2;

@end

@interface TWTRAPIServiceConfigRegistry : NSObject
{
    NSMutableDictionary *_registeredConfigs;
}

+ (id)defaultRegistry;
@property(readonly, nonatomic) NSMutableDictionary *registeredConfigs; // @synthesize registeredConfigs=_registeredConfigs;
- (void).cxx_destruct;
- (id)configForType:(long long)arg1;
- (void)registerServiceConfig:(id)arg1 forType:(long long)arg2;
- (id)init;

@end

@interface TWTRAuthConfigSessionsValidator : NSObject
{
    TWTRAuthConfigStore *_configStore;
    id <TWTRSessionStore_Private> _sessionStore;
}

@property(readonly, nonatomic) id <TWTRSessionStore_Private> sessionStore; // @synthesize sessionStore=_sessionStore;
@property(readonly, nonatomic) TWTRAuthConfigStore *configStore; // @synthesize configStore=_configStore;
- (void).cxx_destruct;
- (void)purgeSessionsFromSessionStore;
- (_Bool)doesSessionStoreNeedPurge;
- (void)validateSessionStoreContainsValidAuthConfig;
- (id)initWithConfigStore:(id)arg1 sessionStore:(id)arg2;

@end

@interface TWTRScribeItem : NSObject <TWTRScribeSerializable>
{
    unsigned long long _itemType;
    NSString *_itemID;
    TWTRScribeCardEvent *_cardEvent;
    TWTRScribeMediaDetails *_mediaDetails;
}

+ (id)scribeKey;
@property(readonly, nonatomic) TWTRScribeMediaDetails *mediaDetails; // @synthesize mediaDetails=_mediaDetails;
@property(readonly, nonatomic) TWTRScribeCardEvent *cardEvent; // @synthesize cardEvent=_cardEvent;
@property(readonly, copy, nonatomic) NSString *itemID; // @synthesize itemID=_itemID;
@property(readonly, nonatomic) unsigned long long itemType; // @synthesize itemType=_itemType;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithItemType:(unsigned long long)arg1 itemID:(id)arg2 cardEvent:(id)arg3 mediaDetails:(id)arg4;
- (id)initWithItemType:(unsigned long long)arg1 itemID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRScribeCardEvent : NSObject <TWTRScribeSerializable>
{
    unsigned long long _promotionCardType;
}

+ (id)scribeKey;
@property(readonly, nonatomic) unsigned long long promotionCardType; // @synthesize promotionCardType=_promotionCardType;
- (id)dictionaryRepresentation;
- (id)initWithPromotionCardType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTokenOnlyAuthSession : NSObject <TWTRAuthSession>
{
    NSString *_authToken;
    NSString *_authTokenSecret;
    NSString *_userID;
}

+ (id)authSessionWithToken:(id)arg1 secret:(id)arg2;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, copy, nonatomic) NSString *authTokenSecret; // @synthesize authTokenSecret=_authTokenSecret;
@property(readonly, copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithToken:(id)arg1 secret:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRURLSessionDelegate : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate>
{
    TWTRServerTrustEvaluator *_trustEvaluator;
}

@property(readonly, nonatomic) TWTRServerTrustEvaluator *trustEvaluator; // @synthesize trustEvaluator=_trustEvaluator;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRNetworkingUtil : NSObject
{
}

+ (id)percentUnescapedQueryStringWithString:(id)arg1 encoding:(unsigned long long)arg2;
+ (id)parametersFromQueryString:(id)arg1;
+ (id)percentEscapedQueryStringWithString:(id)arg1 encoding:(unsigned long long)arg2;
+ (id)queryStringFromParameters:(id)arg1;

@end

@interface TWTROAuth1aAuthRequestSigner : NSObject
{
}

+ (id)signedURLRequest:(id)arg1 authConfig:(id)arg2 session:(id)arg3;

@end

@interface TWTRGCOAuth : NSObject
{
    NSString *signatureSecret;
    NSDictionary *OAuthParameters;
    NSDictionary *__parameters;
    NSString *__method;
    NSURL *__url;
}

+ (_Bool)isJSONRequest:(id)arg1;
+ (_Bool)isMultipartFormRequest:(id)arg1;
+ (id)hostAndPortForURL:(id)arg1;
+ (id)URLRequestForPath:(id)arg1 POSTParameters:(id)arg2 scheme:(id)arg3 host:(id)arg4 consumerKey:(id)arg5 consumerSecret:(id)arg6 accessToken:(id)arg7 tokenSecret:(id)arg8;
+ (id)URLRequestForPath:(id)arg1 POSTParameters:(id)arg2 host:(id)arg3 consumerKey:(id)arg4 consumerSecret:(id)arg5 accessToken:(id)arg6 tokenSecret:(id)arg7;
+ (id)URLRequestForPath:(id)arg1 DELETEParameters:(id)arg2 scheme:(id)arg3 host:(id)arg4 consumerKey:(id)arg5 consumerSecret:(id)arg6 accessToken:(id)arg7 tokenSecret:(id)arg8;
+ (id)URLRequestForPath:(id)arg1 DELETEParameters:(id)arg2 host:(id)arg3 consumerKey:(id)arg4 consumerSecret:(id)arg5 accessToken:(id)arg6 tokenSecret:(id)arg7;
+ (id)URLRequestForPath:(id)arg1 GETParameters:(id)arg2 scheme:(id)arg3 host:(id)arg4 consumerKey:(id)arg5 consumerSecret:(id)arg6 accessToken:(id)arg7 tokenSecret:(id)arg8;
+ (id)URLRequestForPath:(id)arg1 GETParameters:(id)arg2 host:(id)arg3 consumerKey:(id)arg4 consumerSecret:(id)arg5 accessToken:(id)arg6 tokenSecret:(id)arg7;
+ (id)URLRequestFromRequest:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3 accessToken:(id)arg4 tokenSecret:(id)arg5;
+ (id)URLRequestForPath:(id)arg1 HTTPMethod:(id)arg2 parameters:(id)arg3 scheme:(id)arg4 host:(id)arg5 consumerKey:(id)arg6 consumerSecret:(id)arg7 accessToken:(id)arg8 tokenSecret:(id)arg9;
+ (id)queryStringFromParameters:(id)arg1;
+ (id)timeStamp;
+ (id)nonce;
+ (void)setHTTPShouldHandleCookies:(_Bool)arg1;
+ (void)setTimeStampOffset:(long long)arg1;
+ (void)setUserAgent:(id)arg1;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=__url;
@property(copy, nonatomic) NSString *HTTPMethod; // @synthesize HTTPMethod=__method;
@property(copy, nonatomic) NSDictionary *requestParameters; // @synthesize requestParameters=__parameters;
- (void).cxx_destruct;
- (id)signatureBase;
- (id)signature;
- (id)authorizationHeader;
- (id)request;
- (id)initWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 accessToken:(id)arg3 tokenSecret:(id)arg4;

@end

@interface TWTRAppInstallationUUID : NSObject
{
}

+ (id)appInstallationUUID;

@end

@interface TWTRNetworkSessionProvider : NSObject <TWTRNetworkSessionProvider>
{
}

+ (id)userSessionWithAuthToken:(id)arg1 authTokenSecret:(id)arg2 fromResponseData:(id)arg3;
+ (void)callGuestCompletion:(CDUnknownBlockType)arg1 withSession:(id)arg2 error:(id)arg3;
+ (void)guestSessionWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 accessToken:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)appSessionWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)sessionWithResponseDict:(id)arg1;
+ (void)callUserCompletionWithResponseDict:(id)arg1 withError:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)guestSessionWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 URLSession:(id)arg3 accessToken:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)verifySessionWithAuthToken:(id)arg1 authSecret:(id)arg2 withAuthConfig:(id)arg3 APIServiceConfig:(id)arg4 URLSession:(id)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)verifyUserSession:(id)arg1 withAuthConfig:(id)arg2 APIServiceConfig:(id)arg3 URLSession:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)userSessionWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 errorLogger:(id)arg3 completion:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRSessionStore : NSObject <TWTRSessionStore_Private, TWTRSessionStore>
{
    TWTRAuthConfig *_authConfig;
    TWTRGuestSession *_guestSession;
    NSURLSession *_URLSession;
    NSMutableArray *_authSessionCache;
    NSArray *_refreshStrategies;
    NSString *_accessGroup;
    id <TWTRErrorLogger> _errorLogger;
    id <TWTRAPIServiceConfig> _APIServiceConfig;
    CDUnknownBlockType _userLogoutHook;
    CDUnknownBlockType _userSessionSavedCompletion;
}

+ (id)concurrentSessionQueue;
@property(copy, nonatomic) CDUnknownBlockType userSessionSavedCompletion; // @synthesize userSessionSavedCompletion=_userSessionSavedCompletion;
@property(copy, nonatomic) CDUnknownBlockType userLogoutHook; // @synthesize userLogoutHook=_userLogoutHook;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> APIServiceConfig; // @synthesize APIServiceConfig=_APIServiceConfig;
@property(readonly, nonatomic) id <TWTRErrorLogger> errorLogger; // @synthesize errorLogger=_errorLogger;
@property(readonly, copy, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
@property(readonly, copy, nonatomic) NSArray *refreshStrategies; // @synthesize refreshStrategies=_refreshStrategies;
@property(retain, nonatomic) NSMutableArray *authSessionCache; // @synthesize authSessionCache=_authSessionCache;
@property(readonly, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (void)destroyAllSessions;
- (void)refreshGuestSessionWithStrategy:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)refreshAuthSessionID:(id)arg1 withStrategy:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateKeychainItemsAccessGroupIfNeeded:(id)arg1;
- (id)transformedKeychainItems:(id)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)keychainItemsMatchingQuery:(id)arg1;
- (id)unsafeLoadSessionsWithQuery:(id)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)unsafeLoadGuestSession;
- (id)unsafeLoadAllUserSessions;
- (void)unsafeDeleteSessionForService:(id)arg1 sessionID:(id)arg2;
- (void)unsafeDeleteGuestSession;
- (void)unsafeDeleteUserSessionWithSessionID:(id)arg1;
- (void)saveKeychainItem:(id)arg1;
- (void)unsafePersistSession:(id)arg1 service:(id)arg2 sessionID:(id)arg3;
- (void)unsafePersistGuestSession:(id)arg1;
- (void)unsafePersistAuthSession:(id)arg1;
- (long long)indexOfCachedSessionWithSessionID:(id)arg1;
- (void)unsafePurgeCachedSessionWithSessionID:(id)arg1;
- (id)unsafeCachedSessionWithSessionID:(id)arg1;
- (id)unsafeAllCachedUserSessions;
- (void)unsafeCacheSession:(id)arg1;
- (void)unsafePrimeUserSessionCache;
- (void)unsafePrimeGuestSessionCache;
- (void)primeWriteThroughCaches;
- (id)userSessionQueryWithID:(id)arg1;
- (id)allUserSessions;
- (void)storeSession:(id)arg1;
- (void)removeSessionWithSessionID:(id)arg1;
- (id)sessionWithSessionID:(id)arg1;
- (id)guestSessionQuery;
- (void)unsafeSetGuestSession:(id)arg1;
@property(retain, nonatomic) TWTRGuestSession *guestSession; // @synthesize guestSession=_guestSession;
- (id)namespacedServiceNameWithName:(id)arg1;
- (id)userSessionServiceName;
- (id)guestSessionServiceName;
- (id)sessionRefreshStrategyForSessionClass:(Class)arg1;
- (_Bool)isExpiredSession:(id)arg1 response:(id)arg2 error:(id)arg3;
- (_Bool)isExpiredSession:(id)arg1 error:(id)arg2;
- (_Bool)isExpiredSession:(id)arg1 response:(id)arg2;
- (void)refreshSessionClass:(Class)arg1 sessionID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchGuestSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)logOutUserID:(id)arg1;
- (void)logInWithSystemAccountsCompletion:(CDUnknownBlockType)arg1;
- (id)session;
- (id)existingUserSessions;
- (id)sessionForUserID:(id)arg1;
- (void)saveSessionWithAuthToken:(id)arg1 authTokenSecret:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveSession:(id)arg1 withVerification:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveSession:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reloadSessionStore;
- (id)initWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 refreshStrategies:(id)arg3 URLSession:(id)arg4 errorLogger:(id)arg5 accessGroup:(id)arg6;
- (id)initWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 refreshStrategies:(id)arg3 URLSession:(id)arg4 errorLogger:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRNetworkingPipelineQueue : NSObject
{
    _Bool _fetchingSession;
    _Bool _logNetworkRequest;
    long long _queueType;
    id <TWTRNetworkingResponseValidating> _responseValidator;
    NSObject<OS_dispatch_queue> *_serialAccessQueue;
    NSObject<OS_dispatch_queue> *_cancellationSupportQueue;
    id _session;
    NSError *_sessionFetchError;
    NSOperationQueue *_operationQueue;
    NSURLSession *_URLSession;
    NSMapTable *_inFlightTasks;
    NSHashTable *_invokedPackages;
    NSMutableSet *_pendingCancellations;
}

+ (id)fetchCancelledErrorForPackage:(id)arg1;
+ (id)sessionFetchFailureError;
+ (id)userPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2;
+ (id)guestPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2;
@property(readonly, nonatomic) _Bool logNetworkRequest; // @synthesize logNetworkRequest=_logNetworkRequest;
@property(readonly, nonatomic) NSMutableSet *pendingCancellations; // @synthesize pendingCancellations=_pendingCancellations;
@property(readonly, nonatomic) NSHashTable *invokedPackages; // @synthesize invokedPackages=_invokedPackages;
@property(readonly, nonatomic) NSMapTable *inFlightTasks; // @synthesize inFlightTasks=_inFlightTasks;
@property(readonly, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSError *sessionFetchError; // @synthesize sessionFetchError=_sessionFetchError;
@property(retain, nonatomic) id session; // @synthesize session=_session;
@property(nonatomic, getter=isFetchingSession) _Bool fetchingSession; // @synthesize fetchingSession=_fetchingSession;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *cancellationSupportQueue; // @synthesize cancellationSupportQueue=_cancellationSupportQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialAccessQueue; // @synthesize serialAccessQueue=_serialAccessQueue;
@property(readonly, nonatomic) id <TWTRNetworkingResponseValidating> responseValidator; // @synthesize responseValidator=_responseValidator;
@property(readonly, nonatomic) long long queueType; // @synthesize queueType=_queueType;
- (void).cxx_destruct;
- (void)syncLocalTime:(id)arg1;
- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (void)invokeCallbackForPackage:(id)arg1 withData:(id)arg2 response:(id)arg3 error:(id)arg4;
- (void)invokeCancelCallbackForPackage:(id)arg1;
- (void)packageRequest:(id)arg1 session:(id)arg2 didReceiveResponse:(id)arg3 data:(id)arg4;
- (void)packageRequest:(id)arg1 session:(id)arg2 didReceiveError:(id)arg3;
- (void)sendRequestForPackage:(id)arg1 withSignedRequest:(id)arg2;
- (void)withCancellationSupportQueueSync:(CDUnknownBlockType)arg1;
- (void)withCancellationSupportQueueAsync:(CDUnknownBlockType)arg1;
- (_Bool)isPackageCancelled:(id)arg1 shouldRemoveIfNecessary:(_Bool)arg2;
- (void)markPackageAsCancelled:(id)arg1;
- (void)appendInFlightTask:(id)arg1 forPackage:(id)arg2;
- (void)endFetchingOrRefreshingSession;
- (void)beginFetchingOrRefreshingSession;
- (void)handleSessionStoreResponse:(id)arg1 error:(id)arg2;
- (void)refreshSession:(id)arg1 forPackage:(id)arg2;
- (void)fetchSessionForPackage:(id)arg1;
- (void)cancelAllPendingRequests;
- (void)fetchSessionIfNeededForPackage:(id)arg1;
- (CDUnknownBlockType)requestSigningCancelBlock:(id)arg1;
- (CDUnknownBlockType)requestSigningSuccessBlock:(id)arg1;
- (id)userRequestSigningOperationWithPackage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;
- (id)guestRequestSigningOperationWithPackage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;
- (id)requestSigningOperationWithPackage:(id)arg1;
- (id)enqueuePipelinePackage:(id)arg1;
- (id)initWithType:(long long)arg1 URLSession:(id)arg2 responseValidator:(id)arg3;

@end

@interface TWTRAuthConfigStore : NSObject
{
    NSString *_nameSpace;
}

@property(readonly, copy, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
- (void).cxx_destruct;
- (void)persistAuthConfig:(id)arg1;
- (id)authConfigQuery;
- (id)nameSpacedAccountKey;
- (id)nameSpacedServiceKey;
- (void)forgetAuthConfig;
- (id)lastSavedAuthConfig;
- (void)saveAuthConfig:(id)arg1;
- (id)initWithNameSpace:(id)arg1;

@end

@interface TWTRCoreLanguage : NSObject
{
}

+ (id)preferredLanguage;

@end

@interface TWTRSession : NSObject <TWTRAuthSession>
{
    NSString *_authToken;
    NSString *_authTokenSecret;
    NSString *_userName;
    NSString *_userID;
}

+ (_Bool)isValidSessionDictionary:(id)arg1;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, copy, nonatomic) NSString *userName; // @synthesize userName=_userName;
@property(readonly, copy, nonatomic) NSString *authTokenSecret; // @synthesize authTokenSecret=_authTokenSecret;
@property(readonly, copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
- (_Bool)isEqualToSession:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithAuthToken:(id)arg1 authTokenSecret:(id)arg2 userName:(id)arg3 userID:(id)arg4;
- (id)initWithSessionDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRX509Certificate : NSObject
{
    NSString *_fingerprint;
    NSData *_publicKey;
    struct __CFData *_certificateDataRef;
    long long _certificateLength;
    const char *_certificateBytes;
}

- (void).cxx_destruct;
- (void)dealloc;
- (int)findRsaOidOffset:(const char *)arg1 length:(long long)arg2;
- (int)findEnclosingSequence:(const char *)arg1 offset:(int)arg2;
- (int)parseSequenceLength:(const char *)arg1 offset:(int)arg2 length:(long long)arg3;
- (id)publicKey;
- (id)fingerprint;
- (id)initWithCertificate:(struct __SecCertificate *)arg1;

@end

@interface TFSScribeImpression : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *clientVersion; // @dynamic clientVersion;
@property(retain, nonatomic) NSData *content; // @dynamic content;
@property(retain, nonatomic) NSString *eventName; // @dynamic eventName;
@property(retain, nonatomic) NSString *query; // @dynamic query;
@property(retain, nonatomic) NSDate *timestamp; // @dynamic timestamp;
@property(retain, nonatomic) NSString *userID; // @dynamic userID;
@end

@interface TWTRAppleSocialAuthenticaticationProvider : TWTRAuthenticationProvider <UIActionSheetDelegate>
{
    ACAccountStore *_accountStore;
    NSArray *_accounts;
    TwitterUserAPIClient *_twitterClient;
    TWTRAuthConfig *_authConfig;
    id <TWTRErrorLogger> _errorLogger;
    id <TWTRAPIServiceConfig> _apiServiceConfig;
}

@property(readonly, copy, nonatomic) id <TWTRAPIServiceConfig> apiServiceConfig; // @synthesize apiServiceConfig=_apiServiceConfig;
@property(readonly, nonatomic) id <TWTRErrorLogger> errorLogger; // @synthesize errorLogger=_errorLogger;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
@property(readonly, nonatomic) TwitterUserAPIClient *twitterClient; // @synthesize twitterClient=_twitterClient;
@property(retain, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
@property(readonly, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
- (void).cxx_destruct;
- (void)actionSheetCancel:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)actionSheet;
- (void)showActionSheetWithCompletion:(CDUnknownBlockType)arg1;
- (void)getAuthTokenWithAccount:(id)arg1 withAuthToken:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getAuthTokenWithAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performTwitterRequestWithURL:(id)arg1 parameters:(id)arg2 account:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)getTwitterAccounts;
- (void)requestAccessForTwitterAccountsWithCompletion:(CDUnknownBlockType)arg1;
- (void)authenticateWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithAuthConfig:(id)arg1 apiServiceConfig:(id)arg2 errorLogger:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRAPIDateSync : NSObject
{
    NSHTTPURLResponse *_response;
}

@property(retain, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
- (void).cxx_destruct;
- (_Bool)sync;
- (id)initWithHTTPResponse:(id)arg1;

@end

@interface TWTRDictUtil : NSObject
{
}

+ (id)numberForKey:(id)arg1 fromDict:(id)arg2;
+ (id)arrayForKey:(id)arg1 fromDict:(id)arg2;
+ (id)dictForKey:(id)arg1 fromDict:(id)arg2;
+ (id)dateForKey:(id)arg1 fromDict:(id)arg2;
+ (id)stringForKey:(id)arg1 fromDict:(id)arg2;
+ (id)objectForKey:(id)arg1 fromDict:(id)arg2;
+ (id)stringFromNumberForKey:(id)arg1 fromDict:(id)arg2;
+ (unsigned long long)unsignedIntegerForKey:(id)arg1 fromDict:(id)arg2;
+ (long long)longlongForKey:(id)arg1 fromDict:(id)arg2;
+ (long long)intForKey:(id)arg1 fromDict:(id)arg2;
+ (_Bool)boolForKey:(id)arg1 fromDict:(id)arg2;
+ (double)doubleForKey:(id)arg1 fromDict:(id)arg2;
+ (double)CGFloatForKey:(id)arg1 fromDict:(id)arg2;

@end

@interface TWTRMultiThreadUtil : NSObject
{
}

+ (void)warnForBackgroundThreadUsage;
+ (void)assertMainThread;

@end

@interface TWTRAuthenticator : NSObject
{
}

+ (id)authPlistFilenameForAuthType:(long long)arg1;
+ (id)keychainAccountStringForAuthType:(long long)arg1;
+ (id)authTypeStringForAuthType:(long long)arg1;
+ (id)readAuthDirectoryForAuthType:(long long)arg1;
+ (id)keychainWrapperForAuthType:(long long)arg1;
+ (_Bool)saveAuthenticationWithDictionary:(id)arg1 forAuthType:(long long)arg2 error:(id *)arg3;
+ (void)logoutAuthType:(long long)arg1;
+ (id)authenticationResponseForAuthType:(long long)arg1;

@end

@interface TWTRGuestSession : NSObject <TWTRBaseSession>
{
    NSString *_accessToken;
    NSString *_guestToken;
    NSDate *_creationDate;
}

@property(readonly, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(readonly, copy, nonatomic) NSString *guestToken; // @synthesize guestToken=_guestToken;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) _Bool probablyNeedsRefreshing;
@property(readonly, copy) NSString *debugDescription;
- (_Bool)isEqualToGuestSession:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)initWithAccessToken:(id)arg1 guestToken:(id)arg2 creationDate:(id)arg3;
- (id)initWithAccessToken:(id)arg1 guestToken:(id)arg2;
- (id)initWithSessionDictionary:(id)arg1 creationDate:(id)arg2;
- (id)initWithSessionDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRUtils : NSObject
{
}

+ (_Bool)isEqualOrBothNil:(id)arg1 other:(id)arg2;
+ (id)localizedShortAppName;
+ (id)localizedLongAppName;
+ (id)topViewControllerWithRootViewController:(id)arg1;
+ (id)topViewController;
+ (id)mainAppWindow;
+ (id)base64EncodedStringWithData:(id)arg1;
+ (id)urlDecodedStringForString:(id)arg1;
+ (id)urlEncodedStringForString:(id)arg1;
+ (id)queryStringFromDictionary:(id)arg1;
+ (id)dictionaryWithQueryString:(id)arg1;

@end

@interface TWTRNetworkingPipelinePackage : NSObject <NSCopying>
{
    NSURLRequest *_request;
    id <TWTRSessionStore> _sessionStore;
    NSString *_userID;
    CDUnknownBlockType _callback;
    long long _attemptCounter;
    NSUUID *_UUID;
}

+ (id)packageWithRequest:(id)arg1 sessionStore:(id)arg2 userID:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) long long attemptCounter; // @synthesize attemptCounter=_attemptCounter;
@property(readonly, copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) id <TWTRSessionStore> sessionStore; // @synthesize sessionStore=_sessionStore;
@property(readonly, copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyForRetry;
- (id)initWithRequest:(id)arg1 sessionStore:(id)arg2 userID:(id)arg3 completion:(CDUnknownBlockType)arg4;

@end

@interface TWTRServerTrustEvaluator : NSObject
{
    NSArray *_pinnedPublicKeys;
}

+ (void)cacheValidCertificateChain:(struct __SecTrust *)arg1;
+ (_Bool)isCertificateChainCached:(struct __SecTrust *)arg1;
+ (void)hexDecode:(const char *)arg1 decoded:(char *)arg2;
+ (_Bool)isPinnedSPKI:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSArray *pinnedPublicKeys; // @synthesize pinnedPublicKeys=_pinnedPublicKeys;
- (void).cxx_destruct;
- (_Bool)evaluateServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;

@end

@interface TWTRAppAuthProvider : TWTRAuthenticationProvider
{
    TWTRAuthConfig *_authConfig;
    id <TWTRAPIServiceConfig> _apiServiceConfig;
    TwitterNetworking *_networkingClient;
}

@property(retain, nonatomic) TwitterNetworking *networkingClient; // @synthesize networkingClient=_networkingClient;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> apiServiceConfig; // @synthesize apiServiceConfig=_apiServiceConfig;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (id)base64EncodedBasicAuthHeader;
- (id)appAuthTokenRequest;
- (void)authenticateWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithAuthConfig:(id)arg1 apiServiceConfig:(id)arg2;

@end

@interface BNCServerRequest : NSObject <NSCoding>
{
}

- (void)safeSetValue:(id)arg1 forKey:(id)arg2 onDict:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface BNCDeviceInfo : NSObject
{
    _Bool _isRealHardwareId;
    _Bool _isAdTrackingEnabled;
    NSString *_hardwareId;
    NSString *_hardwareIdType;
    NSString *_vendorId;
    NSString *_brandName;
    NSString *_modelName;
    NSString *_osName;
    NSString *_osVersion;
    NSNumber *_screenWidth;
    NSNumber *_screenHeight;
}

+ (id)getInstance;
@property(nonatomic) _Bool isAdTrackingEnabled; // @synthesize isAdTrackingEnabled=_isAdTrackingEnabled;
@property(retain, nonatomic) NSNumber *screenHeight; // @synthesize screenHeight=_screenHeight;
@property(retain, nonatomic) NSNumber *screenWidth; // @synthesize screenWidth=_screenWidth;
@property(retain, nonatomic) NSString *osVersion; // @synthesize osVersion=_osVersion;
@property(retain, nonatomic) NSString *osName; // @synthesize osName=_osName;
@property(retain, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(retain, nonatomic) NSString *brandName; // @synthesize brandName=_brandName;
@property(retain, nonatomic) NSString *vendorId; // @synthesize vendorId=_vendorId;
@property(nonatomic) _Bool isRealHardwareId; // @synthesize isRealHardwareId=_isRealHardwareId;
@property(retain, nonatomic) NSString *hardwareIdType; // @synthesize hardwareIdType=_hardwareIdType;
@property(retain, nonatomic) NSString *hardwareId; // @synthesize hardwareId=_hardwareId;
- (void).cxx_destruct;
- (id)init;

@end

@interface BNCContentDiscoveryManager : NSObject
{
    NSUserActivity *_currentUserActivity;
}

@property(retain, nonatomic) NSUserActivity *currentUserActivity; // @synthesize currentUserActivity=_currentUserActivity;
- (void).cxx_destruct;
- (void)indexContentWithUrl:(id)arg1 spotlightIdentifier:(id)arg2 title:(id)arg3 description:(id)arg4 type:(id)arg5 thumbnailUrl:(id)arg6 thumbnailData:(id)arg7 publiclyIndexable:(_Bool)arg8 userInfo:(id)arg9 keywords:(id)arg10 expirationDate:(id)arg11 callback:(CDUnknownBlockType)arg12 spotlightCallback:(CDUnknownBlockType)arg13;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 userInfo:(id)arg7 expirationDate:(id)arg8 callback:(CDUnknownBlockType)arg9 spotlightCallback:(CDUnknownBlockType)arg10;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 userInfo:(id)arg7 spotlightCallback:(CDUnknownBlockType)arg8;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 userInfo:(id)arg7 callback:(CDUnknownBlockType)arg8;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 userInfo:(id)arg7 expirationDate:(id)arg8 callback:(CDUnknownBlockType)arg9;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 thumbnailUrl:(id)arg4 keywords:(id)arg5 userInfo:(id)arg6;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 thumbnailUrl:(id)arg4 userInfo:(id)arg5;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 userInfo:(id)arg7;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 keywords:(id)arg6 callback:(CDUnknownBlockType)arg7;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 thumbnailUrl:(id)arg5 callback:(CDUnknownBlockType)arg6;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 type:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 callback:(CDUnknownBlockType)arg4;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)indexContentWithTitle:(id)arg1 description:(id)arg2;
- (id)standardSpotlightIdentifierFromActivity:(id)arg1;
- (id)spotlightIdentifierFromActivity:(id)arg1;

@end

@interface Branch : NSObject <BranchDeepLinkingControllerCompletionDelegate, FABKit>
{
    _Bool _isInitialized;
    _Bool _shouldCallSessionInitCallback;
    _Bool _shouldAutomaticallyDeepLink;
    _Bool _useCookieBasedMatching;
    _Bool _accountForFacebookSDK;
    BNCServerInterface *_bServerInterface;
    NSTimer *_sessionTimer;
    BNCServerRequestQueue *_requestQueue;
    NSObject<OS_dispatch_semaphore> *_processing_sema;
    CDUnknownBlockType _sessionInitWithParamsCallback;
    CDUnknownBlockType _sessionInitWithBranchUniversalObjectCallback;
    long long _networkCount;
    BNCLinkCache *_linkCache;
    BNCPreferenceHelper *_preferenceHelper;
    BNCContentDiscoveryManager *_contentDiscoveryManager;
    UILongPressGestureRecognizer *_debugGestureRecognizer;
    NSTimer *_debugHeartbeatTimer;
    NSString *_branchKey;
    NSMutableDictionary *_deepLinkControllers;
    UIViewController *_deepLinkPresentingController;
    NSDictionary *_deepLinkDebugParams;
    id _FBSDKAppLinkUtility;
}

+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (id)getInstanceInternal:(id)arg1 returnNilIfNoCurrentInstance:(_Bool)arg2;
+ (void)setDebug;
+ (id)getBranchActivityItemWithParams:(id)arg1 andTags:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andAlias:(id)arg5;
+ (id)getBranchActivityItemWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3 andAlias:(id)arg4;
+ (id)getBranchActivityItemWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3 andTags:(id)arg4;
+ (id)getBranchActivityItemWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3;
+ (id)getBranchActivityItemWithParams:(id)arg1 andFeature:(id)arg2;
+ (id)getBranchActivityItemWithParams:(id)arg1 feature:(id)arg2 stage:(id)arg3 tags:(id)arg4 alias:(id)arg5 delegate:(id)arg6;
+ (id)getBranchActivityItemWithParams:(id)arg1 feature:(id)arg2 stage:(id)arg3 tags:(id)arg4 alias:(id)arg5;
+ (id)getBranchActivityItemWithParams:(id)arg1 feature:(id)arg2 stage:(id)arg3 tags:(id)arg4;
+ (id)getBranchActivityItemWithParams:(id)arg1 feature:(id)arg2 stage:(id)arg3;
+ (id)getBranchActivityItemWithParams:(id)arg1 feature:(id)arg2;
+ (id)getBranchActivityItemWithParams:(id)arg1;
+ (id)getInstance:(id)arg1;
+ (id)getTestInstance;
+ (id)getInstance;
@property(nonatomic) id FBSDKAppLinkUtility; // @synthesize FBSDKAppLinkUtility=_FBSDKAppLinkUtility;
@property(nonatomic) _Bool accountForFacebookSDK; // @synthesize accountForFacebookSDK=_accountForFacebookSDK;
@property(retain, nonatomic) NSDictionary *deepLinkDebugParams; // @synthesize deepLinkDebugParams=_deepLinkDebugParams;
@property(nonatomic) _Bool useCookieBasedMatching; // @synthesize useCookieBasedMatching=_useCookieBasedMatching;
@property(nonatomic) __weak UIViewController *deepLinkPresentingController; // @synthesize deepLinkPresentingController=_deepLinkPresentingController;
@property(retain, nonatomic) NSMutableDictionary *deepLinkControllers; // @synthesize deepLinkControllers=_deepLinkControllers;
@property(retain, nonatomic) NSString *branchKey; // @synthesize branchKey=_branchKey;
@property(retain, nonatomic) NSTimer *debugHeartbeatTimer; // @synthesize debugHeartbeatTimer=_debugHeartbeatTimer;
@property(retain, nonatomic) UILongPressGestureRecognizer *debugGestureRecognizer; // @synthesize debugGestureRecognizer=_debugGestureRecognizer;
@property(retain, nonatomic) BNCContentDiscoveryManager *contentDiscoveryManager; // @synthesize contentDiscoveryManager=_contentDiscoveryManager;
@property(retain, nonatomic) BNCPreferenceHelper *preferenceHelper; // @synthesize preferenceHelper=_preferenceHelper;
@property(retain, nonatomic) BNCLinkCache *linkCache; // @synthesize linkCache=_linkCache;
@property(nonatomic) _Bool shouldAutomaticallyDeepLink; // @synthesize shouldAutomaticallyDeepLink=_shouldAutomaticallyDeepLink;
@property(nonatomic) _Bool shouldCallSessionInitCallback; // @synthesize shouldCallSessionInitCallback=_shouldCallSessionInitCallback;
@property(nonatomic) _Bool isInitialized; // @synthesize isInitialized=_isInitialized;
@property(nonatomic) long long networkCount; // @synthesize networkCount=_networkCount;
@property(copy, nonatomic) CDUnknownBlockType sessionInitWithBranchUniversalObjectCallback; // @synthesize sessionInitWithBranchUniversalObjectCallback=_sessionInitWithBranchUniversalObjectCallback;
@property(copy, nonatomic) CDUnknownBlockType sessionInitWithParamsCallback; // @synthesize sessionInitWithParamsCallback=_sessionInitWithParamsCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *processing_sema; // @synthesize processing_sema=_processing_sema;
@property(retain, nonatomic) BNCServerRequestQueue *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(retain, nonatomic) NSTimer *sessionTimer; // @synthesize sessionTimer=_sessionTimer;
@property(retain, nonatomic) BNCServerInterface *bServerInterface; // @synthesize bServerInterface=_bServerInterface;
- (void).cxx_destruct;
- (void)deepLinkingControllerCompleted;
- (void)dealloc;
- (void)handleInitFailure:(id)arg1;
- (void)handleInitSuccess;
- (void)registerInstallOrOpen:(Class)arg1;
- (void)initializeSession;
- (void)initUserSessionAndCallCallback:(_Bool)arg1;
- (void)initSessionIfNeededAndNotInProgress;
- (void)processNextQueueItem;
- (void)insertRequestAtFront:(id)arg1;
- (void)callClose;
- (void)clearTimer;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)registerViewWithParams:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (id)prepareLinkDataFor:(id)arg1 andAlias:(id)arg2 andType:(unsigned long long)arg3 andMatchDuration:(unsigned long long)arg4 andChannel:(id)arg5 andFeature:(id)arg6 andStage:(id)arg7 andParams:(id)arg8 ignoreUAString:(id)arg9;
- (id)longUrlWithBaseUrl:(id)arg1 params:(id)arg2 tags:(id)arg3 feature:(id)arg4 channel:(id)arg5 stage:(id)arg6 alias:(id)arg7 duration:(unsigned long long)arg8 type:(unsigned long long)arg9;
- (id)generateLongURLWithParams:(id)arg1 andChannel:(id)arg2 andTags:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6;
- (id)generateShortUrl:(id)arg1 andAlias:(id)arg2 andType:(unsigned long long)arg3 andMatchDuration:(unsigned long long)arg4 andChannel:(id)arg5 andFeature:(id)arg6 andStage:(id)arg7 andParams:(id)arg8 ignoreUAString:(id)arg9 forceLinkCreation:(_Bool)arg10;
- (void)generateShortUrl:(id)arg1 andAlias:(id)arg2 andType:(unsigned long long)arg3 andMatchDuration:(unsigned long long)arg4 andChannel:(id)arg5 andFeature:(id)arg6 andStage:(id)arg7 andParams:(id)arg8 andCallback:(CDUnknownBlockType)arg9;
- (void)applyPromoCode:(id)arg1 useOld:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)applyPromoCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)applyReferralCode:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)validatePromoCode:(id)arg1 useOld:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)validatePromoCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)validateReferralCode:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getPromoCodeWithPrefix:(id)arg1 amount:(long long)arg2 expiration:(id)arg3 bucket:(id)arg4 usageType:(unsigned long long)arg5 rewardLocation:(unsigned long long)arg6 useOld:(_Bool)arg7 callback:(CDUnknownBlockType)arg8;
- (void)getPromoCodeWithPrefix:(id)arg1 amount:(long long)arg2 expiration:(id)arg3 bucket:(id)arg4 usageType:(unsigned long long)arg5 rewardLocation:(unsigned long long)arg6 callback:(CDUnknownBlockType)arg7;
- (void)getReferralCodeWithPrefix:(id)arg1 amount:(long long)arg2 expiration:(id)arg3 bucket:(id)arg4 calculationType:(unsigned long long)arg5 location:(unsigned long long)arg6 andCallback:(CDUnknownBlockType)arg7;
- (void)getReferralCodeWithPrefix:(id)arg1 amount:(long long)arg2 expiration:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (void)getPromoCodeWithPrefix:(id)arg1 amount:(long long)arg2 expiration:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)getReferralCodeWithAmount:(long long)arg1 expiration:(id)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)getPromoCodeWithAmount:(long long)arg1 expiration:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)getReferralCodeWithPrefix:(id)arg1 amount:(long long)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)getPromoCodeWithPrefix:(id)arg1 amount:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)getReferralCodeWithAmount:(long long)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getPromoCodeWithAmount:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getReferralCodeWithCallback:(CDUnknownBlockType)arg1;
- (void)getPromoCodeWithCallback:(CDUnknownBlockType)arg1;
- (void)getReferralUrlWithParams:(id)arg1 andChannel:(id)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)getReferralUrlWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (id)getReferralUrlWithParams:(id)arg1 andChannel:(id)arg2;
- (id)getReferralUrlWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 type:(id)arg5 publiclyIndexable:(_Bool)arg6 keywords:(id)arg7 expirationDate:(id)arg8 spotlightCallback:(CDUnknownBlockType)arg9;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 type:(id)arg5 publiclyIndexable:(_Bool)arg6 keywords:(id)arg7 expirationDate:(id)arg8 callback:(CDUnknownBlockType)arg9;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 type:(id)arg5 publiclyIndexable:(_Bool)arg6 keywords:(id)arg7 callback:(CDUnknownBlockType)arg8;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 type:(id)arg4 publiclyIndexable:(_Bool)arg5 keywords:(id)arg6;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 type:(id)arg5 publiclyIndexable:(_Bool)arg6 keywords:(id)arg7;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 publiclyIndexable:(_Bool)arg5 keywords:(id)arg6;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 linkParams:(id)arg4 publiclyIndexable:(_Bool)arg5;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 type:(id)arg4 publiclyIndexable:(_Bool)arg5 keywords:(id)arg6 callback:(CDUnknownBlockType)arg7;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 thumbnailUrl:(id)arg3 type:(id)arg4 publiclyIndexable:(_Bool)arg5 callback:(CDUnknownBlockType)arg6;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 type:(id)arg3 publiclyIndexable:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 publiclyIndexable:(_Bool)arg3 callback:(CDUnknownBlockType)arg4;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)createDiscoverableContentWithTitle:(id)arg1 description:(id)arg2;
- (id)getLongURLWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3 andAlias:(id)arg4;
- (id)getLongURLWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3 andTags:(id)arg4;
- (id)getLongURLWithParams:(id)arg1 andFeature:(id)arg2 andStage:(id)arg3;
- (id)getLongURLWithParams:(id)arg1 andFeature:(id)arg2;
- (id)getLongURLWithParams:(id)arg1;
- (id)getLongURLWithParams:(id)arg1 andChannel:(id)arg2 andTags:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6;
- (void)getSpotlightUrlWithParams:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getShortUrlWithParams:(id)arg1 andTags:(id)arg2 andAlias:(id)arg3 andMatchDuration:(unsigned long long)arg4 andChannel:(id)arg5 andFeature:(id)arg6 andStage:(id)arg7 andCallback:(CDUnknownBlockType)arg8;
- (void)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (void)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andMatchDuration:(unsigned long long)arg5 andCallback:(CDUnknownBlockType)arg6;
- (void)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andType:(unsigned long long)arg5 andCallback:(CDUnknownBlockType)arg6;
- (void)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andAlias:(id)arg5 andCallback:(CDUnknownBlockType)arg6;
- (void)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andCallback:(CDUnknownBlockType)arg5;
- (void)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andMatchDuration:(unsigned long long)arg6 andCallback:(CDUnknownBlockType)arg7;
- (void)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andType:(unsigned long long)arg6 andCallback:(CDUnknownBlockType)arg7;
- (void)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6 andCallback:(CDUnknownBlockType)arg7;
- (void)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andCallback:(CDUnknownBlockType)arg6;
- (void)getShortURLWithParams:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getShortURLWithCallback:(CDUnknownBlockType)arg1;
- (id)getShortUrlWithParams:(id)arg1 andTags:(id)arg2 andAlias:(id)arg3 andChannel:(id)arg4 andFeature:(id)arg5 andStage:(id)arg6 andMatchDuration:(unsigned long long)arg7;
- (id)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3;
- (id)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andMatchDuration:(unsigned long long)arg5;
- (id)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andType:(unsigned long long)arg5;
- (id)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andAlias:(id)arg5;
- (id)getShortURLWithParams:(id)arg1 andChannel:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andMatchDuration:(unsigned long long)arg6;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andType:(unsigned long long)arg6;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6 ignoreUAString:(id)arg7 forceLinkCreation:(_Bool)arg8;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6 ignoreUAString:(id)arg7;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5 andAlias:(id)arg6;
- (id)getShortURLWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andFeature:(id)arg4 andStage:(id)arg5;
- (id)getShortURLWithParams:(id)arg1;
- (id)getShortURL;
- (void)getContentUrlWithParams:(id)arg1 andChannel:(id)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)getContentUrlWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (id)getContentUrlWithParams:(id)arg1 andTags:(id)arg2 andChannel:(id)arg3;
- (id)getContentUrlWithParams:(id)arg1 andChannel:(id)arg2;
- (id)getLatestReferringBranchLinkProperties;
- (id)getLatestReferringBranchUniversalObject;
- (id)getLatestReferringParams;
- (id)getFirstReferringParams;
- (id)getFirstReferringBranchLinkProperties;
- (id)getFirstReferringBranchUniversalObject;
- (void)getCreditHistoryForBucket:(id)arg1 after:(id)arg2 number:(long long)arg3 order:(unsigned long long)arg4 andCallback:(CDUnknownBlockType)arg5;
- (void)getCreditHistoryAfter:(id)arg1 number:(long long)arg2 order:(unsigned long long)arg3 andCallback:(CDUnknownBlockType)arg4;
- (void)getCreditHistoryForBucket:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getCreditHistoryWithCallback:(CDUnknownBlockType)arg1;
- (void)redeemRewards:(long long)arg1 forBucket:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)redeemRewards:(long long)arg1 forBucket:(id)arg2;
- (long long)getCreditsForBucket:(id)arg1;
- (void)redeemRewards:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)redeemRewards:(long long)arg1;
- (long long)getCredits;
- (void)loadRewardsWithCallback:(CDUnknownBlockType)arg1;
- (void)userCompletedAction:(id)arg1 withState:(id)arg2 withDelegate:(id)arg3;
- (void)userCompletedAction:(id)arg1 withState:(id)arg2;
- (void)userCompletedAction:(id)arg1;
- (long long)getUniqueCountsForAction:(id)arg1;
- (long long)getTotalCountsForAction:(id)arg1;
- (void)loadActionCountsWithCallback:(CDUnknownBlockType)arg1;
- (void)logoutWithCallback:(CDUnknownBlockType)arg1;
- (void)logout;
- (void)setIdentity:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)setIdentity:(id)arg1;
- (void)registerDeepLinkController:(id)arg1 forKey:(id)arg2;
- (_Bool)checkFacebookAppLinks;
- (void)registerFacebookDeepLinkingClass:(id)arg1;
- (void)handlePushNotification:(id)arg1;
- (void)executeGenericRequest:(id)arg1;
- (_Bool)continueUserActivity:(id)arg1;
- (_Bool)handleDeepLink:(id)arg1;
- (void)setDeepLinkDebugMode:(id)arg1;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2 explicitlyRequestedReferrable:(_Bool)arg3 automaticallyDisplayController:(_Bool)arg4;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2 explicitlyRequestedReferrable:(_Bool)arg3 automaticallyDisplayController:(_Bool)arg4 registerDeepLinkHandler:(CDUnknownBlockType)arg5;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2 explicitlyRequestedReferrable:(_Bool)arg3 automaticallyDisplayController:(_Bool)arg4 registerDeepLinkHandlerUsingBranchUniversalObject:(CDUnknownBlockType)arg5;
- (void)initSessionWithLaunchOptions:(id)arg1 automaticallyDisplayDeepLinkController:(_Bool)arg2 isReferrable:(_Bool)arg3 deepLinkHandler:(CDUnknownBlockType)arg4;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2 automaticallyDisplayDeepLinkController:(_Bool)arg3;
- (void)initSessionWithLaunchOptions:(id)arg1 automaticallyDisplayDeepLinkController:(_Bool)arg2 deepLinkHandler:(CDUnknownBlockType)arg3;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2 andRegisterDeepLinkHandler:(CDUnknownBlockType)arg3;
- (void)initSessionWithLaunchOptions:(id)arg1 automaticallyDisplayDeepLinkController:(_Bool)arg2;
- (void)initSessionWithLaunchOptions:(id)arg1 isReferrable:(_Bool)arg2;
- (void)initSessionWithLaunchOptions:(id)arg1 andRegisterDeepLinkHandlerUsingBranchUniversalObject:(CDUnknownBlockType)arg2;
- (void)initSessionWithLaunchOptions:(id)arg1 andRegisterDeepLinkHandler:(CDUnknownBlockType)arg2;
- (void)initSessionWithLaunchOptions:(id)arg1;
- (void)setRequestMetadataKey:(id)arg1 value:(id)arg2;
- (void)suppressWarningLogs;
- (void)accountForFacebookSDKPreventingAppLaunch;
- (void)disableCookieBasedMatching;
- (void)setRetryInterval:(double)arg1;
- (void)setMaxRetries:(long long)arg1;
- (void)setNetworkTimeout:(double)arg1;
- (_Bool)isUserIdentified;
- (void)resetUserSession;
- (void)setDebug;
- (id)initWithInterface:(id)arg1 queue:(id)arg2 cache:(id)arg3 preferenceHelper:(id)arg4 key:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BranchView : NSObject
{
    NSString *_branchViewID;
    NSString *_branchViewAction;
    long long _numOfUse;
    NSString *_webUrl;
    NSString *_webHtml;
}

@property(retain, nonatomic) NSString *webHtml; // @synthesize webHtml=_webHtml;
@property(retain, nonatomic) NSString *webUrl; // @synthesize webUrl=_webUrl;
@property(nonatomic) long long numOfUse; // @synthesize numOfUse=_numOfUse;
@property(retain, nonatomic) NSString *branchViewAction; // @synthesize branchViewAction=_branchViewAction;
@property(retain, nonatomic) NSString *branchViewID; // @synthesize branchViewID=_branchViewID;
- (void).cxx_destruct;
- (void)updateUsageCount;
- (_Bool)isAvailable;
- (id)initWithBranchView:(id)arg1 andActionName:(id)arg2;

@end

@interface BranchShortUrlSyncRequest : NSObject
{
    NSArray *_tags;
    NSString *_alias;
    unsigned long long _type;
    long long _matchDuration;
    NSString *_channel;
    NSString *_feature;
    NSString *_stage;
    NSDictionary *_params;
    BNCLinkCache *_linkCache;
    BNCLinkData *_linkData;
}

+ (id)createLongUrlWithBaseUrl:(id)arg1 tags:(id)arg2 alias:(id)arg3 type:(unsigned long long)arg4 matchDuration:(long long)arg5 channel:(id)arg6 feature:(id)arg7 stage:(id)arg8 params:(id)arg9;
+ (id)createLinkFromBranchKey:(id)arg1 tags:(id)arg2 alias:(id)arg3 type:(unsigned long long)arg4 matchDuration:(long long)arg5 channel:(id)arg6 feature:(id)arg7 stage:(id)arg8 params:(id)arg9;
@property(retain, nonatomic) BNCLinkData *linkData; // @synthesize linkData=_linkData;
@property(retain, nonatomic) BNCLinkCache *linkCache; // @synthesize linkCache=_linkCache;
@property(retain, nonatomic) NSDictionary *params; // @synthesize params=_params;
@property(retain, nonatomic) NSString *stage; // @synthesize stage=_stage;
@property(retain, nonatomic) NSString *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) long long matchDuration; // @synthesize matchDuration=_matchDuration;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (id)createLongUrlForUserUrl:(id)arg1;
- (id)processResponse:(id)arg1;
- (id)makeRequest:(id)arg1 key:(id)arg2;
- (id)initWithTags:(id)arg1 alias:(id)arg2 type:(unsigned long long)arg3 matchDuration:(long long)arg4 channel:(id)arg5 feature:(id)arg6 stage:(id)arg7 params:(id)arg8 linkData:(id)arg9 linkCache:(id)arg10;

@end

@interface BranchGetPromoCodeRequest : BNCServerRequest
{
    _Bool _useOld;
    unsigned long long _usageType;
    unsigned long long _rewardLocation;
    long long _amount;
    NSString *_bucket;
    NSString *_prefix;
    NSDate *_expiration;
    CDUnknownBlockType _callback;
}

@property(nonatomic) _Bool useOld; // @synthesize useOld=_useOld;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSDate *expiration; // @synthesize expiration=_expiration;
@property(retain, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
@property(retain, nonatomic) NSString *bucket; // @synthesize bucket=_bucket;
@property(nonatomic) long long amount; // @synthesize amount=_amount;
@property(nonatomic) unsigned long long rewardLocation; // @synthesize rewardLocation=_rewardLocation;
@property(nonatomic) unsigned long long usageType; // @synthesize usageType=_usageType;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithUsageType:(unsigned long long)arg1 rewardLocation:(unsigned long long)arg2 amount:(long long)arg3 bucket:(id)arg4 prefix:(id)arg5 expiration:(id)arg6 useOld:(_Bool)arg7 callback:(CDUnknownBlockType)arg8;

@end

@interface BranchUniversalObject : NSObject
{
    BNCPreferenceHelper *_preferenceHelper;
    NSString *_canonicalIdentifier;
    NSString *_canonicalUrl;
    NSString *_title;
    NSString *_contentDescription;
    NSString *_imageUrl;
    NSDictionary *_metadata;
    NSString *_type;
    long long _contentIndexMode;
    NSArray *_keywords;
    NSDate *_expirationDate;
    NSString *_spotlightIdentifier;
}

+ (id)getBranchUniversalObjectFromDictionary:(id)arg1;
@property(retain, nonatomic) NSString *spotlightIdentifier; // @synthesize spotlightIdentifier=_spotlightIdentifier;
@property(retain, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(retain, nonatomic) NSArray *keywords; // @synthesize keywords=_keywords;
@property(nonatomic) long long contentIndexMode; // @synthesize contentIndexMode=_contentIndexMode;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) NSString *imageUrl; // @synthesize imageUrl=_imageUrl;
@property(retain, nonatomic) NSString *contentDescription; // @synthesize contentDescription=_contentDescription;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *canonicalUrl; // @synthesize canonicalUrl=_canonicalUrl;
@property(retain, nonatomic) NSString *canonicalIdentifier; // @synthesize canonicalIdentifier=_canonicalIdentifier;
- (void).cxx_destruct;
- (void)safeSetValue:(id)arg1 forKey:(id)arg2 onDict:(id)arg3;
- (id)getDictionaryWithCompleteLinkProperties:(id)arg1;
- (id)getParamsForServerRequestWithAddedLinkProperties:(id)arg1;
- (id)getParamsForServerRequest;
- (id)description;
- (void)listOnSpotlightWithIdentifierCallback:(CDUnknownBlockType)arg1;
- (void)listOnSpotlightWithCallback:(CDUnknownBlockType)arg1;
- (void)listOnSpotlight;
- (void)showShareSheetWithLinkProperties:(id)arg1 andShareText:(id)arg2 fromViewController:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (void)showShareSheetWithShareText:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)showShareSheetWithLinkProperties:(id)arg1 andShareText:(id)arg2 fromViewController:(id)arg3 anchor:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)showShareSheetWithLinkProperties:(id)arg1 andShareText:(id)arg2 fromViewController:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)showShareSheetWithShareText:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getBranchActivityItemWithLinkProperties:(id)arg1;
- (id)getShortUrlWithLinkPropertiesAndIgnoreFirstClick:(id)arg1;
- (void)getShortUrlWithLinkProperties:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (id)getShortUrlWithLinkProperties:(id)arg1;
- (void)registerViewWithCallback:(CDUnknownBlockType)arg1;
- (void)registerView;
- (void)addMetadataKey:(id)arg1 value:(id)arg2;
- (id)initWithTitle:(id)arg1;
- (id)initWithCanonicalIdentifier:(id)arg1;

@end

@interface BranchRegisterViewRequest : BNCServerRequest
{
    NSDictionary *_params;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSDictionary *params; // @synthesize params=_params;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithParams:(id)arg1 andCallback:(CDUnknownBlockType)arg2;

@end

@interface BranchSetIdentityRequest : BNCServerRequest
{
    _Bool _shouldCallCallback;
    NSString *_userId;
    CDUnknownBlockType _callback;
}

@property(nonatomic) _Bool shouldCallCallback; // @synthesize shouldCallCallback=_shouldCallCallback;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithUserId:(id)arg1 callback:(CDUnknownBlockType)arg2;

@end

@interface BranchShortUrlRequest : BNCServerRequest
{
    NSArray *_tags;
    NSString *_alias;
    unsigned long long _type;
    long long _matchDuration;
    NSString *_channel;
    NSString *_feature;
    NSString *_stage;
    NSDictionary *_params;
    BNCLinkCache *_linkCache;
    BNCLinkData *_linkData;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) BNCLinkData *linkData; // @synthesize linkData=_linkData;
@property(retain, nonatomic) BNCLinkCache *linkCache; // @synthesize linkCache=_linkCache;
@property(retain, nonatomic) NSDictionary *params; // @synthesize params=_params;
@property(retain, nonatomic) NSString *stage; // @synthesize stage=_stage;
@property(retain, nonatomic) NSString *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) long long matchDuration; // @synthesize matchDuration=_matchDuration;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)createLongUrlForUserUrl:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithTags:(id)arg1 alias:(id)arg2 type:(unsigned long long)arg3 matchDuration:(long long)arg4 channel:(id)arg5 feature:(id)arg6 stage:(id)arg7 params:(id)arg8 linkData:(id)arg9 linkCache:(id)arg10 callback:(CDUnknownBlockType)arg11;

@end

@interface BranchViewHandler : NSObject <UIWebViewDelegate>
{
    id <BranchViewControllerDelegate> _branchViewCallback;
    BranchView *_pendingBranchView;
    UIWebView *_pendingWebview;
}

+ (id)getInstance;
@property(retain, nonatomic) UIWebView *pendingWebview; // @synthesize pendingWebview=_pendingWebview;
@property(retain, nonatomic) BranchView *pendingBranchView; // @synthesize pendingBranchView=_pendingBranchView;
@property(nonatomic) id <BranchViewControllerDelegate> branchViewCallback; // @synthesize branchViewCallback=_branchViewCallback;
- (void).cxx_destruct;
- (_Bool)handleUserActionRedirects:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)closeBranchView;
- (void)showView:(id)arg1;
- (_Bool)showBranchView:(id)arg1 withDelegate:(id)arg2;
- (_Bool)showBranchView:(id)arg1 withBranchViewDictionary:(id)arg2 andWithDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BNCPreferenceHelper : NSObject
{
    _Bool _isReferrable;
    _Bool _isDebug;
    _Bool _shouldWaitForInit;
    _Bool _suppressWarningLogs;
    _Bool _checkedFacebookAppLinks;
    _Bool _explicitlyRequestedReferrable;
    _Bool _isUsingLiveKey;
    NSString *_branchKey;
    NSString *_appKey;
    NSString *_lastRunBranchKey;
    NSString *_appVersion;
    NSString *_deviceFingerprintID;
    NSString *_sessionID;
    NSString *_spotlightIdentifier;
    NSString *_identityID;
    NSString *_linkClickIdentifier;
    NSString *_userUrl;
    NSString *_userIdentity;
    NSString *_sessionParams;
    NSString *_installParams;
    NSString *_universalLinkUrl;
    NSString *_externalIntentURI;
    long long _retryCount;
    double _retryInterval;
    double _timeout;
    NSDate *_lastStrongMatchDate;
    NSMutableDictionary *_requestMetadataDictionary;
    NSMutableDictionary *_persistenceDict;
    NSMutableDictionary *_countsDictionary;
    NSMutableDictionary *_creditsDictionary;
}

+ (id)getInstance;
+ (id)preferenceHelper;
@property(nonatomic) _Bool isUsingLiveKey; // @synthesize isUsingLiveKey=_isUsingLiveKey;
@property(retain, nonatomic) NSMutableDictionary *creditsDictionary; // @synthesize creditsDictionary=_creditsDictionary;
@property(retain, nonatomic) NSMutableDictionary *countsDictionary; // @synthesize countsDictionary=_countsDictionary;
@property(retain, nonatomic) NSMutableDictionary *persistenceDict; // @synthesize persistenceDict=_persistenceDict;
@property(nonatomic) _Bool explicitlyRequestedReferrable; // @synthesize explicitlyRequestedReferrable=_explicitlyRequestedReferrable;
@property(retain, nonatomic) NSMutableDictionary *requestMetadataDictionary; // @synthesize requestMetadataDictionary=_requestMetadataDictionary;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) double retryInterval; // @synthesize retryInterval=_retryInterval;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) _Bool suppressWarningLogs; // @synthesize suppressWarningLogs=_suppressWarningLogs;
@property(nonatomic) _Bool shouldWaitForInit; // @synthesize shouldWaitForInit=_shouldWaitForInit;
@property(nonatomic) _Bool isDebug; // @synthesize isDebug=_isDebug;
@property(retain, nonatomic) NSString *branchKey; // @synthesize branchKey=_branchKey;
- (void).cxx_destruct;
- (id)prefsFile;
- (long long)readIntegerFromDefaults:(id)arg1;
- (_Bool)readBoolFromDefaults:(id)arg1;
- (id)readStringFromDefaults:(id)arg1;
- (id)readObjectFromDefaults:(id)arg1;
- (void)persistPrefsToDisk;
- (void)writeObjectToDefaults:(id)arg1 value:(id)arg2;
- (void)writeBoolToDefaults:(id)arg1 value:(_Bool)arg2;
- (void)writeIntegerToDefaults:(id)arg1 value:(long long)arg2;
- (long long)getBranchViewCount:(id)arg1;
- (void)updateBranchViewCount:(id)arg1;
- (long long)getActionUniqueCount:(id)arg1;
- (long long)getActionTotalCount:(id)arg1;
- (void)setActionUniqueCount:(id)arg1 withCount:(long long)arg2;
- (void)setActionTotalCount:(id)arg1 withCount:(long long)arg2;
- (void)clearUserCredits;
- (long long)getCreditCountForBucket:(id)arg1;
- (long long)getCreditCount;
- (id)getCreditDictionary;
- (void)removeCreditCountForBucket:(id)arg1;
- (void)setCreditCount:(long long)arg1 forBucket:(id)arg2;
- (void)setCreditCount:(long long)arg1;
- (void)setRequestMetadataKey:(id)arg1 value:(id)arg2;
- (id)getBranchUniversalLinkDomains;
- (void)clearUserCreditsAndCounts;
@property(nonatomic) _Bool isReferrable; // @synthesize isReferrable=_isReferrable;
@property(nonatomic) _Bool checkedFacebookAppLinks; // @synthesize checkedFacebookAppLinks=_checkedFacebookAppLinks;
@property(retain, nonatomic) NSString *userUrl; // @synthesize userUrl=_userUrl;
@property(retain, nonatomic) NSString *installParams; // @synthesize installParams=_installParams;
@property(retain, nonatomic) NSString *sessionParams; // @synthesize sessionParams=_sessionParams;
@property(retain, nonatomic) NSString *universalLinkUrl; // @synthesize universalLinkUrl=_universalLinkUrl;
@property(retain, nonatomic) NSString *externalIntentURI; // @synthesize externalIntentURI=_externalIntentURI;
@property(retain, nonatomic) NSString *spotlightIdentifier; // @synthesize spotlightIdentifier=_spotlightIdentifier;
@property(retain, nonatomic) NSString *linkClickIdentifier; // @synthesize linkClickIdentifier=_linkClickIdentifier;
@property(retain, nonatomic) NSString *userIdentity; // @synthesize userIdentity=_userIdentity;
@property(retain, nonatomic) NSString *identityID; // @synthesize identityID=_identityID;
@property(retain, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSString *deviceFingerprintID; // @synthesize deviceFingerprintID=_deviceFingerprintID;
@property(retain, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(retain, nonatomic) NSDate *lastStrongMatchDate; // @synthesize lastStrongMatchDate=_lastStrongMatchDate;
@property(retain, nonatomic) NSString *lastRunBranchKey; // @synthesize lastRunBranchKey=_lastRunBranchKey;
- (id)getBranchKey:(_Bool)arg1;
@property(retain, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
- (id)getAPIURL:(id)arg1;
- (id)getAPIBaseURL;
- (void)logWarning:(id)arg1;
- (void)log:(id)arg1 line:(int)arg2 message:(id)arg3;
- (id)persistPrefsQueue;
- (id)init;

@end

@interface BNCServerInterface : NSObject
{
    BNCPreferenceHelper *_preferenceHelper;
}

@property(retain, nonatomic) BNCPreferenceHelper *preferenceHelper; // @synthesize preferenceHelper=_preferenceHelper;
- (void).cxx_destruct;
- (void)safeSetValue:(id)arg1 forKey:(id)arg2 onDict:(id)arg3;
- (id)updateDeviceInfoToParams:(id)arg1;
- (void)updateDeviceInfoToMutableDictionary:(id)arg1;
- (id)processServerResponse:(id)arg1 data:(id)arg2 error:(id)arg3 log:(_Bool)arg4;
- (id)prepareParamDict:(id)arg1 key:(id)arg2 retryNumber:(long long)arg3;
- (id)preparePostRequest:(id)arg1 url:(id)arg2 key:(id)arg3 retryNumber:(long long)arg4 log:(_Bool)arg5;
- (id)prepareGetRequest:(id)arg1 url:(id)arg2 key:(id)arg3 retryNumber:(long long)arg4 log:(_Bool)arg5;
- (id)genericHTTPRequest:(id)arg1 log:(_Bool)arg2;
- (void)genericHTTPRequest:(id)arg1 retryNumber:(long long)arg2 log:(_Bool)arg3 callback:(CDUnknownBlockType)arg4 retryHandler:(CDUnknownBlockType)arg5;
- (void)genericHTTPRequest:(id)arg1 log:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (id)postRequest:(id)arg1 url:(id)arg2 key:(id)arg3 log:(_Bool)arg4;
- (void)postRequest:(id)arg1 url:(id)arg2 retryNumber:(long long)arg3 key:(id)arg4 log:(_Bool)arg5 callback:(CDUnknownBlockType)arg6;
- (void)postRequest:(id)arg1 url:(id)arg2 key:(id)arg3 log:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)postRequest:(id)arg1 url:(id)arg2 key:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)getRequest:(id)arg1 url:(id)arg2 key:(id)arg3 log:(_Bool)arg4;
- (id)getRequest:(id)arg1 url:(id)arg2 key:(id)arg3;
- (void)getRequest:(id)arg1 url:(id)arg2 key:(id)arg3 retryNumber:(long long)arg4 log:(_Bool)arg5 callback:(CDUnknownBlockType)arg6;
- (void)getRequest:(id)arg1 url:(id)arg2 key:(id)arg3 log:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)getRequest:(id)arg1 url:(id)arg2 key:(id)arg3 callback:(CDUnknownBlockType)arg4;

@end

@interface BranchOpenRequest : BNCServerRequest
{
    _Bool _isInstall;
    CDUnknownBlockType _callback;
}

@property(nonatomic) _Bool isInstall; // @synthesize isInstall=_isInstall;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (id)getActionName;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCallback:(CDUnknownBlockType)arg1 isInstall:(_Bool)arg2;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

@end

@interface BranchUserCompletedActionRequest : BNCServerRequest
{
    NSString *_action;
    NSDictionary *_state;
    id <BranchViewControllerDelegate> _branchViewcallback;
}

@property(retain, nonatomic) id <BranchViewControllerDelegate> branchViewcallback; // @synthesize branchViewcallback=_branchViewcallback;
@property(retain, nonatomic) NSDictionary *state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithAction:(id)arg1 state:(id)arg2 withBranchViewCallback:(id)arg3;
- (id)initWithAction:(id)arg1 state:(id)arg2;

@end

@interface BranchCloseRequest : BNCServerRequest
{
}

- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface BranchCreditHistoryRequest : BNCServerRequest
{
    CDUnknownBlockType _callback;
    NSString *_bucket;
    NSString *_creditTransactionId;
    long long _length;
    unsigned long long _order;
}

@property(nonatomic) unsigned long long order; // @synthesize order=_order;
@property(nonatomic) long long length; // @synthesize length=_length;
@property(retain, nonatomic) NSString *creditTransactionId; // @synthesize creditTransactionId=_creditTransactionId;
@property(retain, nonatomic) NSString *bucket; // @synthesize bucket=_bucket;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithBucket:(id)arg1 creditTransactionId:(id)arg2 length:(long long)arg3 order:(unsigned long long)arg4 callback:(CDUnknownBlockType)arg5;

@end

@interface BNCSystemObserver : NSObject
{
}

+ (id)getScreenHeight;
+ (id)getScreenWidth;
+ (id)getOSVersion;
+ (id)getOS;
+ (void)setUpdateState;
+ (id)getUpdateState;
+ (_Bool)isSimulator;
+ (id)getModel;
+ (id)getBrand;
+ (id)getTeamIdentifier;
+ (id)getBundleID;
+ (id)getAppVersion;
+ (id)getDefaultUriScheme;
+ (_Bool)adTrackingSafe;
+ (id)getVendorId;
+ (id)getUniqueHardwareId:(_Bool *)arg1 isDebug:(_Bool)arg2 andType:(id *)arg3;

@end

@interface BNCServerRequestQueue : NSObject
{
    NSMutableArray *_queue;
    NSObject<OS_dispatch_queue> *_asyncQueue;
    NSTimer *_writeTimer;
}

+ (id)getInstance;
@property(retain, nonatomic) NSTimer *writeTimer; // @synthesize writeTimer=_writeTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *asyncQueue; // @synthesize asyncQueue=_asyncQueue;
@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (id)queueFile;
- (id)exceptionString:(id)arg1;
- (void)retrieve;
- (void)persistToDisk;
- (void)persistImmediately;
- (void)persistEventually;
- (_Bool)containsClose;
- (id)moveInstallOrOpenToFront:(long long)arg1;
- (_Bool)containsInstallOrOpen;
- (void)clearQueue;
- (id)description;
@property(readonly, nonatomic) unsigned int size;
- (id)peekAt:(unsigned int)arg1;
- (id)peek;
- (void)remove:(id)arg1;
- (id)removeAt:(unsigned int)arg1;
- (id)dequeue;
- (void)insert:(id)arg1 at:(unsigned int)arg2;
- (void)enqueue:(id)arg1;
- (id)init;

@end

@interface BranchLogoutRequest : BNCServerRequest
{
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

@end

@interface BNCError : NSObject
{
}

@end

@interface BranchInstallRequest : BranchOpenRequest
{
}

- (id)getActionName;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

@end

@interface BNCServerResponse : NSObject
{
    NSNumber *_statusCode;
    id _data;
}

@property(retain, nonatomic) id data; // @synthesize data=_data;
@property(retain, nonatomic) NSNumber *statusCode; // @synthesize statusCode=_statusCode;
- (void).cxx_destruct;
- (id)description;

@end

@interface BNCLinkData : NSObject
{
    NSMutableDictionary *_data;
    NSArray *_tags;
    NSString *_alias;
    NSString *_channel;
    NSString *_feature;
    NSString *_stage;
    NSDictionary *_params;
    NSString *_ignoreUAString;
    unsigned long long _type;
    unsigned long long _duration;
}

@property(nonatomic) unsigned long long duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *ignoreUAString; // @synthesize ignoreUAString=_ignoreUAString;
@property(retain, nonatomic) NSDictionary *params; // @synthesize params=_params;
@property(retain, nonatomic) NSString *stage; // @synthesize stage=_stage;
@property(retain, nonatomic) NSString *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(retain, nonatomic) NSMutableDictionary *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (void)setupParams:(id)arg1;
- (void)setupIgnoreUAString:(id)arg1;
- (void)setupStage:(id)arg1;
- (void)setupFeature:(id)arg1;
- (void)setupChannel:(id)arg1;
- (void)setupMatchDuration:(unsigned long long)arg1;
- (void)setupType:(unsigned long long)arg1;
- (void)setupAlias:(id)arg1;
- (void)setupTags:(id)arg1;
- (id)init;

@end

@interface BranchLinkProperties : NSObject
{
    NSArray *_tags;
    NSString *_feature;
    NSString *_alias;
    NSString *_channel;
    NSString *_stage;
    unsigned long long _matchDuration;
    NSDictionary *_controlParams;
}

+ (id)getBranchLinkPropertiesFromDictionary:(id)arg1;
@property(retain, nonatomic) NSDictionary *controlParams; // @synthesize controlParams=_controlParams;
@property(nonatomic) unsigned long long matchDuration; // @synthesize matchDuration=_matchDuration;
@property(retain, nonatomic) NSString *stage; // @synthesize stage=_stage;
@property(retain, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSString *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (id)description;
- (void)addControlParam:(id)arg1 withValue:(id)arg2;

@end

@interface BNCLinkCache : NSObject
{
    NSMutableDictionary *_cache;
}

@property(retain, nonatomic) NSMutableDictionary *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface BranchLoadRewardsRequest : BNCServerRequest
{
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

@end

@interface BranchApplyPromoCodeRequest : BNCServerRequest
{
    _Bool _useOld;
    NSString *_code;
    CDUnknownBlockType _callback;
}

@property(nonatomic) _Bool useOld; // @synthesize useOld=_useOld;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *code; // @synthesize code=_code;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCode:(id)arg1 useOld:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface BranchValidatePromoCodeRequest : BNCServerRequest
{
    _Bool _useOld;
    NSString *_code;
    CDUnknownBlockType _callback;
}

@property(nonatomic) _Bool useOld; // @synthesize useOld=_useOld;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *code; // @synthesize code=_code;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCode:(id)arg1 useOld:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface BranchActivityItemProvider : UIActivityItemProvider
{
    NSDictionary *_params;
    NSArray *_tags;
    NSString *_feature;
    NSString *_stage;
    NSString *_alias;
    NSString *_userAgentString;
    id <BranchActivityItemProviderDelegate> _delegate;
}

+ (id)humanReadableChannelWithActivityType:(id)arg1;
@property(nonatomic) __weak id <BranchActivityItemProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *userAgentString; // @synthesize userAgentString=_userAgentString;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSString *stage; // @synthesize stage=_stage;
@property(retain, nonatomic) NSString *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(retain, nonatomic) NSDictionary *params; // @synthesize params=_params;
- (void).cxx_destruct;
- (id)aliasForChannel:(id)arg1;
- (id)stageForChannel:(id)arg1;
- (id)featureForChannel:(id)arg1;
- (id)tagsForChannel:(id)arg1;
- (id)paramsForChannel:(id)arg1;
- (id)item;
- (id)initWithParams:(id)arg1 tags:(id)arg2 feature:(id)arg3 stage:(id)arg4 alias:(id)arg5 delegate:(id)arg6;
- (id)initWithParams:(id)arg1 andTags:(id)arg2 andFeature:(id)arg3 andStage:(id)arg4 andAlias:(id)arg5;

@end

@interface BNCEncodingUtils : NSObject
{
}

+ (id)decodeQueryStringToDictionary:(id)arg1;
+ (id)decodeJsonStringToDictionary:(id)arg1;
+ (id)decodeJsonDataToDictionary:(id)arg1;
+ (id)encodeDictionaryToQueryString:(id)arg1;
+ (id)urlEncodedString:(id)arg1;
+ (id)encodeArrayToJsonString:(id)arg1;
+ (id)encodeDictionaryToJsonString:(id)arg1;
+ (id)encodeDictionaryToJsonData:(id)arg1;
+ (id)sanitizedStringFromString:(id)arg1;
+ (id)iso8601StringFromDate:(id)arg1;
+ (id)md5Encode:(id)arg1;
+ (id)base64DecodeString:(id)arg1;
+ (id)base64EncodeData:(id)arg1;
+ (id)base64DecodeStringToString:(id)arg1;
+ (id)base64EncodeStringToString:(id)arg1;

@end

@interface BranchRedeemRewardsRequest : BNCServerRequest
{
    long long _amount;
    NSString *_bucket;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *bucket; // @synthesize bucket=_bucket;
@property(nonatomic) long long amount; // @synthesize amount=_amount;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithAmount:(long long)arg1 bucket:(id)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface BranchSpotlightUrlRequest : BranchShortUrlRequest
{
    CDUnknownBlockType _spotlightCallback;
}

@property(copy, nonatomic) CDUnknownBlockType spotlightCallback; // @synthesize spotlightCallback=_spotlightCallback;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (id)initWithParams:(id)arg1 callback:(CDUnknownBlockType)arg2;

@end

@interface BranchLoadActionsRequest : BNCServerRequest
{
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 error:(id)arg2;
- (void)makeRequest:(id)arg1 key:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

@end

@interface BNCFabricAnswers : NSObject
{
}

+ (id)prepareBranchDataForAnswers:(id)arg1;
+ (void)sendEventWithName:(id)arg1 andAttributes:(id)arg2;

@end

@interface BNCStrongMatchHelper : NSObject
{
    _Bool _requestInProgress;
    _Bool _shouldDelayInstallRequest;
    UIWindow *_secondWindow;
}

+ (id)strongMatchHelper;
@property(nonatomic) _Bool shouldDelayInstallRequest; // @synthesize shouldDelayInstallRequest=_shouldDelayInstallRequest;
@property(nonatomic) _Bool requestInProgress; // @synthesize requestInProgress=_requestInProgress;
@property(retain, nonatomic) UIWindow *secondWindow; // @synthesize secondWindow=_secondWindow;
- (void).cxx_destruct;
- (void)presentSafariVCWithBranchKey:(id)arg1;
- (void)createStrongMatchWithBranchKey:(id)arg1;

@end

@interface TWTRTweetViewSizeCalculator : NSObject
{
    TWTRTweetView *_regularTweetView;
    TWTRTweetView *_compactTweetView;
}

+ (double)heightForTweet:(id)arg1 style:(unsigned long long)arg2 fittingWidth:(double)arg3 showingActions:(_Bool)arg4;
+ (double)calculatedHeightForTweet:(id)arg1 style:(unsigned long long)arg2 fittingWidth:(double)arg3 showingActions:(_Bool)arg4;
+ (id)heightCache;
+ (id)compactTweetView;
+ (id)regularTweetView;
+ (id)cachedTweetViewForStyle:(unsigned long long)arg1;
@property(retain, nonatomic) TWTRTweetView *compactTweetView; // @synthesize compactTweetView=_compactTweetView;
@property(retain, nonatomic) TWTRTweetView *regularTweetView; // @synthesize regularTweetView=_regularTweetView;
- (void).cxx_destruct;

@end

@interface TWTRTweetShareItemProvider : UIActivityItemProvider
{
    TWTRTweet *_tweet;
}

@property(retain, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
- (void).cxx_destruct;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)item;
- (id)initWithTweet:(id)arg1;

@end

@interface TWTRSearchTimelineDataSource : NSObject <TWTRTimelineDataSource>
{
    _Bool _topTweetsOnly;
    _Bool _filterSensitiveTweets;
    TWTRAPIClient *_APIClient;
    NSString *_searchQuery;
    NSString *_languageCode;
    unsigned long long _maxTweetsPerRequest;
    NSString *_geocodeSpecifier;
}

@property(nonatomic) _Bool filterSensitiveTweets; // @synthesize filterSensitiveTweets=_filterSensitiveTweets;
@property(nonatomic) _Bool topTweetsOnly; // @synthesize topTweetsOnly=_topTweetsOnly;
@property(copy, nonatomic) NSString *geocodeSpecifier; // @synthesize geocodeSpecifier=_geocodeSpecifier;
@property(readonly, nonatomic) unsigned long long maxTweetsPerRequest; // @synthesize maxTweetsPerRequest=_maxTweetsPerRequest;
@property(readonly, copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(readonly, copy, nonatomic) NSString *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(retain, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
- (void).cxx_destruct;
- (id)queryParametersWithMaxPosition:(id)arg1;
@property(readonly, nonatomic) unsigned long long timelineType;
- (void)loadPreviousTweetsBeforePosition:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSearchQuery:(id)arg1 APIClient:(id)arg2 languageCode:(id)arg3 maxTweetsPerRequest:(unsigned long long)arg4;
- (id)initWithSearchQuery:(id)arg1 APIClient:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTimelineCursor : NSObject
{
    NSString *_maxPosition;
    NSString *_minPosition;
}

@property(readonly, copy, nonatomic) NSString *minPosition; // @synthesize minPosition=_minPosition;
@property(readonly, copy, nonatomic) NSString *maxPosition; // @synthesize maxPosition=_maxPosition;
- (void).cxx_destruct;
- (id)initWithMaxPosition:(id)arg1 minPosition:(id)arg2;

@end

@interface TWTRImageViewController : UIViewController <TWTRMediaContainerPresentable>
{
    TWTRImageScrollView *_scrollView;
    UIImage *_image;
    TWTRTweetMediaEntity *_mediaEntity;
    NSString *_parentTweetID;
    UIPopoverController *_popover;
}

@property(retain, nonatomic) UIPopoverController *popover; // @synthesize popover=_popover;
@property(readonly, copy, nonatomic) NSString *parentTweetID; // @synthesize parentTweetID=_parentTweetID;
@property(readonly, nonatomic) TWTRTweetMediaEntity *mediaEntity; // @synthesize mediaEntity=_mediaEntity;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) TWTRImageScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (void)transitionDidComplete;
- (void)transitionWillBegin;
- (struct CGRect)transitionImageTargetFrame;
- (id)transitionImage;
- (void)didDismissInMediaContainer;
- (void)willShowInMediaContainer;
- (id)fullResolutionURL;
- (void)loadFullImageWithURL:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithImage:(id)arg1 mediaEntity:(id)arg2 parentTweetID:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTranslationsUtil : NSObject
{
}

+ (id)accessibilityStringByConcatenatingItems:(id)arg1;
+ (id)localizedStringForKey:(id)arg1;

@end

@interface TWTRScribeSink : NSObject <TWTRErrorLogger>
{
    TWTRScribeService *_scribeService;
}

+ (id)promoImageAppCardItem;
+ (id)verifyCredentialsUniqueNamespace;
+ (id)timelineImpressionNamespaceWithTimelineType:(unsigned long long)arg1;
+ (id)timelineUniqueNamespaceWithTimelineType:(unsigned long long)arg1;
+ (id)twitterKitLoginUsageNamespace;
+ (id)twitterKitTweetViewUsageNamespaceWithTweetViewStyle:(id)arg1 showingActions:(id)arg2;
+ (id)tweetViewShareNamespace;
+ (id)tweetViewImpressionNamespaceWithStyle:(id)arg1 showingActions:(id)arg2;
+ (id)tweetLoadNamespace;
@property(retain, nonatomic) TWTRScribeService *scribeService; // @synthesize scribeService=_scribeService;
- (void).cxx_destruct;
- (void)didTapTweetComposerWithCardType:(unsigned long long)arg1 forUserID:(id)arg2;
- (void)didTapCancelComposerWithCardType:(unsigned long long)arg1 forUserID:(id)arg2;
- (void)didSeeComposerWithCardType:(unsigned long long)arg1 forUserID:(id)arg2;
- (void)didEncounterError:(id)arg1 withMessage:(id)arg2;
- (id)currentUserID;
- (id)uniqueScribeEventWithNamespace:(id)arg1;
- (void)scribeUniqueEventWithNamespace:(id)arg1;
- (void)scribeImpressionEventWithTweetID:(id)arg1 userID:(id)arg2 namespace:(id)arg3 items:(id)arg4;
- (void)didVerifyCredentialsForSession:(id)arg1;
- (void)didStartOAuthLogin;
- (void)didSeeTweetViewWithStyle:(id)arg1 showingActions:(id)arg2;
- (void)didShareTweetWithID:(id)arg1 forUserID:(id)arg2 fromViewName:(unsigned long long)arg3;
- (void)didDismissPhotoGallery;
- (void)didNavigateInsideGallery;
- (void)didSeeMediaEntity:(id)arg1 fromTweetID:(id)arg2;
- (void)didPresentPhotoGallery;
- (void)didPlayPercentOfMedia:(unsigned long long)arg1 fromPlaybackConfiguration:(id)arg2 inTweetID:(id)arg3 publishedByOwnerID:(id)arg4;
- (void)didShowMediaEntities:(id)arg1 inTweetID:(id)arg2 publishedByOwnerID:(id)arg3;
- (void)didShowQuoteTweetDetailWithTweetID:(id)arg1;
- (void)didShowTweetDetailWithTweetID:(id)arg1 forUserID:(id)arg2;
- (void)didShowQuoteTweetWithID:(id)arg1;
- (void)didShowTweetWithID:(id)arg1 style:(unsigned long long)arg2 showingActions:(_Bool)arg3;
- (void)didUnlikeTweetWithID:(id)arg1 forUserID:(id)arg2 fromViewName:(unsigned long long)arg3;
- (void)didLikeTweetWithID:(id)arg1 forUserID:(id)arg2 fromViewName:(unsigned long long)arg3;
- (void)didShowTimelineOfType:(unsigned long long)arg1 timelineID:(id)arg2;
- (void)didLoadTweetsWithIDs:(id)arg1;
- (id)initWithScribeService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRMediaEntityDisplayConfiguration : NSObject
{
    NSString *_imagePath;
    NSString *_pillText;
    UIImage *_pillImage;
    struct CGSize _imageSize;
}

+ (id)mediaEntityDisplayConfigurationWithCardEntity:(id)arg1;
+ (id)stringFromDuration:(double)arg1;
+ (id)labelTextForMediaEntity:(id)arg1;
+ (id)imagePathForMediaEntity:(id)arg1 sizeKey:(id)arg2;
@property(readonly, nonatomic) UIImage *pillImage; // @synthesize pillImage=_pillImage;
@property(readonly, copy, nonatomic) NSString *pillText; // @synthesize pillText=_pillText;
@property(readonly, nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, copy, nonatomic) NSString *imagePath; // @synthesize imagePath=_imagePath;
- (void).cxx_destruct;
- (id)initWithImagePath:(id)arg1 imageSize:(struct CGSize)arg2 pillText:(id)arg3 pillImage:(id)arg4;
- (id)initWithImagePath:(id)arg1 imageSize:(struct CGSize)arg2;
- (id)initWithMediaEntity:(id)arg1 targetWidth:(double)arg2;

@end

@interface TWTRSynchronizerDisplayLinkWrapper : NSObject
{
    CADisplayLink *_displayLink;
    CDUnknownBlockType _actionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
@property(readonly, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
- (void).cxx_destruct;
- (void)invalidate;
- (void)displayLinkDidFire:(id)arg1;
- (id)init;

@end

@interface TWTRVideoControlsViewSynchronizer : NSObject <TWTRVideoPlayerViewDelegate, TWTRVideoPlayerScribeDelegate>
{
    _Bool _disableSynchronization;
    _Bool _presentsVideoControlsOnReady;
    TWTRVideoControlsView *_controlsView;
    TWTRVideoPlayerView *_videoPlayerView;
    id <TWTRVideoPlayerScribeDelegate> _scribeDelegate;
    TWTRSynchronizerDisplayLinkWrapper *_displayLinkWrapper;
    long long _playbackStateBeforeScrubbing;
}

@property(nonatomic) long long playbackStateBeforeScrubbing; // @synthesize playbackStateBeforeScrubbing=_playbackStateBeforeScrubbing;
@property(readonly, nonatomic) TWTRSynchronizerDisplayLinkWrapper *displayLinkWrapper; // @synthesize displayLinkWrapper=_displayLinkWrapper;
@property(nonatomic) _Bool presentsVideoControlsOnReady; // @synthesize presentsVideoControlsOnReady=_presentsVideoControlsOnReady;
@property(nonatomic) __weak id <TWTRVideoPlayerScribeDelegate> scribeDelegate; // @synthesize scribeDelegate=_scribeDelegate;
@property(readonly, nonatomic) __weak TWTRVideoPlayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(readonly, nonatomic) __weak TWTRVideoControlsView *controlsView; // @synthesize controlsView=_controlsView;
- (void).cxx_destruct;
- (void)videoPlayer:(id)arg1 didPlayPercentOfMedia:(unsigned long long)arg2 playbackConfiguration:(id)arg3;
- (void)videoPlayerDidBecomeReady:(id)arg1;
- (void)videoPlayer:(id)arg1 didChangePlaybackState:(long long)arg2;
- (void)handleActionButton;
- (void)handleScrubberValueChange;
- (void)handleScrubberTouchUp;
- (void)handleScrubberTouchDown;
- (id)displayStringForTimeInterval:(double)arg1;
- (void)updateTimeLabelWithElapsedTime:(double)arg1 duration:(double)arg2;
- (void)synchronizeUI;
- (CDUnknownBlockType)displayLinkDidFireBlock;
- (void)dealloc;
- (id)initWithVideoPlayer:(id)arg1 controls:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImageLoaderImageUtils : NSObject
{
}

+ (id)imageDataFromImage:(id)arg1 compressionQuality:(double)arg2;
+ (_Bool)imageHasAlphaChannel:(id)arg1;

@end

@interface TWTRListTimelineDataSource : NSObject <TWTRTimelineDataSource>
{
    _Bool _includeRetweets;
    TWTRAPIClient *_APIClient;
    NSString *_listID;
    NSString *_listSlug;
    NSString *_listOwnerScreenName;
    unsigned long long _maxTweetsPerRequest;
}

@property(readonly, nonatomic) _Bool includeRetweets; // @synthesize includeRetweets=_includeRetweets;
@property(readonly, nonatomic) unsigned long long maxTweetsPerRequest; // @synthesize maxTweetsPerRequest=_maxTweetsPerRequest;
@property(readonly, copy, nonatomic) NSString *listOwnerScreenName; // @synthesize listOwnerScreenName=_listOwnerScreenName;
@property(readonly, copy, nonatomic) NSString *listSlug; // @synthesize listSlug=_listSlug;
@property(readonly, copy, nonatomic) NSString *listID; // @synthesize listID=_listID;
@property(retain, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
- (void).cxx_destruct;
- (id)queryParametersWithMaxPosition:(id)arg1;
@property(readonly, nonatomic) unsigned long long timelineType;
- (void)loadPreviousTweetsBeforePosition:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithListID:(id)arg1 listSlug:(id)arg2 listOwnerScreenName:(id)arg3 APIClient:(id)arg4 maxTweetsPerRequest:(unsigned long long)arg5 includeRetweets:(_Bool)arg6;
- (id)initWithListSlug:(id)arg1 listOwnerScreenName:(id)arg2 APIClient:(id)arg3;
- (id)initWithListID:(id)arg1 APIClient:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRScribeAPIServiceConfig : NSObject <TWTRAPIServiceConfig>
{
}

@property(readonly, copy, nonatomic) NSString *serviceName;
@property(readonly, copy, nonatomic) NSString *apiScheme;
@property(readonly, copy, nonatomic) NSString *apiHost;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRMoPubNativeAdView : UIView <UIGestureRecognizerDelegate>
{
    UILabel *_titleTextLabel;
    UILabel *_mainTextLabel;
    UILabel *_callToActionTextLabel;
    UIImageView *_iconImageView;
    UIImageView *_mainImageView;
    UIColor *_savedCallToActionBackgroundColor;
}

@property(retain, nonatomic) UIColor *savedCallToActionBackgroundColor; // @synthesize savedCallToActionBackgroundColor=_savedCallToActionBackgroundColor;
@property(readonly, nonatomic) UIImageView *mainImageView; // @synthesize mainImageView=_mainImageView;
@property(readonly, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(readonly, nonatomic) UILabel *callToActionTextLabel; // @synthesize callToActionTextLabel=_callToActionTextLabel;
@property(readonly, nonatomic) UILabel *mainTextLabel; // @synthesize mainTextLabel=_mainTextLabel;
@property(readonly, nonatomic) UILabel *titleTextLabel; // @synthesize titleTextLabel=_titleTextLabel;
- (void).cxx_destruct;
- (id)subviewsMapping;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleLongPressCTA:(id)arg1;
- (void)prepareCTAGestureRecognizer;
- (void)layoutSubviews;
- (void)prepareCallToAction;
- (void)prepareTextContent;
- (void)prepareIcon;
- (void)prepareImageHeader;
- (void)prepareLayout;
- (_Bool)isAccessibilityElement;
- (void)setUpAccessibility;
- (id)accessibilityLabel;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRAnimatableImageView : UIImageView
{
    TWTRFrameSheet *_frameSheet;
    CDUnknownBlockType _animationCompletion;
}

+ (Class)layerClass;
@property(copy, nonatomic) CDUnknownBlockType animationCompletion; // @synthesize animationCompletion=_animationCompletion;
@property(readonly, nonatomic) TWTRFrameSheet *frameSheet; // @synthesize frameSheet=_frameSheet;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (void)startAnimatingWithFrameSheet:(id)arg1 duration:(double)arg2 repeatCount:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)startAnimatingWithDuration:(double)arg1 repeatCount:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRAnimatableImageViewLayer : CALayer
{
    TWTRAnimatableImageView *_imageView;
}

@property(nonatomic) __weak TWTRAnimatableImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;

@end

@interface TWTRAnimatableImageViewDelegate : NSObject
{
    TWTRAnimatableImageView *_imageView;
    id _originalDelegate;
    NSString *_animationKey;
    CDUnknownBlockType _completion;
}

@property(readonly, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(readonly, nonatomic) NSString *animationKey; // @synthesize animationKey=_animationKey;
@property(readonly, nonatomic) id originalDelegate; // @synthesize originalDelegate=_originalDelegate;
@property(readonly, nonatomic) TWTRAnimatableImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)initWithImageView:(id)arg1 originalDelegate:(id)arg2 animationKey:(id)arg3 completion:(CDUnknownBlockType)arg4;

@end

@interface TWTRTweetImageViewPill : UIView
{
    UILabel *_label;
    UIImageView *_imageView;
}

@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) UILabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)configureWithMediaEntityConfiguration:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRMediaEntitySize : NSObject <NSCoding>
{
    NSString *_name;
    unsigned long long _resizingMode;
    struct CGSize _size;
}

+ (id)mediaEntitySizesWithJSONDictionary:(id)arg1;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) unsigned long long resizingMode; // @synthesize resizingMode=_resizingMode;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)debugDescription;
- (_Bool)isEqualToMediaEntitySize:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithName:(id)arg1 resizingMode:(unsigned long long)arg2 size:(struct CGSize)arg3;

@end

@interface TWTRWebAuthenticationTokenRequestor : NSObject
{
    TwitterUserAPIClient *_APIClient;
    id <TWTRAPIServiceConfig> _serviceConfig;
    id <TWTRErrorLogger> _errorLogger;
}

@property(readonly, nonatomic) id <TWTRErrorLogger> errorLogger; // @synthesize errorLogger=_errorLogger;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> serviceConfig; // @synthesize serviceConfig=_serviceConfig;
@property(readonly, nonatomic) TwitterUserAPIClient *APIClient; // @synthesize APIClient=_APIClient;
- (void).cxx_destruct;
- (id)unknownLoginErrorWithMessage:(id)arg1;
- (void)didFailToReceiveOAuthToken:(id)arg1;
- (id)dictionaryFromTokenResponseData:(id)arg1;
- (id)tokenFromTokenData:(id)arg1;
- (void)handleRequestTokenResponse:(id)arg1 error:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestAuthenticationToken:(CDUnknownBlockType)arg1;
- (id)initWithAuthConfig:(id)arg1 serviceConfig:(id)arg2 errorLogger:(id)arg3;

@end

@interface TWTRURLSessionConfig : NSObject
{
}

+ (id)defaultAdditionalHeaders;
+ (id)defaultConfiguration;

@end

@interface TWTRDateFormatter : NSObject
{
}

+ (id)_relativeTimeAgoStringForDate:(id)arg1 withFormatForSeconds:(id)arg2 second:(id)arg3 minutes:(id)arg4 minute:(id)arg5 hours:(id)arg6 hour:(id)arg7 days:(id)arg8 day:(id)arg9;
+ (id)_tinyRelativeTimeAgoStringForDate:(id)arg1;
+ (id)elapsedTimeStringSinceDate:(id)arg1;

@end

@interface TWTRTweetDelegationHelper : NSObject
{
}

+ (id)userMentionURL:(id)arg1;
+ (id)hashtagEntityURL:(id)arg1;
+ (void)peformDefaultActionForTappingUserMention:(id)arg1;
+ (void)peformDefaultActionForTappingCashtag:(id)arg1;
+ (void)peformDefaultActionForTappingHashtag:(id)arg1;
+ (void)peformDefaultActionForTappingURL:(id)arg1;
+ (void)peformDefaultActionForTappingProfileForUser:(id)arg1;
+ (void)performDefaultDeepLinkAction:(CDUnknownBlockType)arg1;
+ (_Bool)shouldDeepLink;

@end

@interface TWTRComposerTopBar : TWTRComposerThemedView
{
    UIImageView *_profileImageView;
    UIButton *_closeButton;
    TWTRBirdView *_birdView;
}

@property(readonly, nonatomic) TWTRBirdView *birdView; // @synthesize birdView=_birdView;
@property(readonly, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(readonly, nonatomic) UIImageView *profileImageView; // @synthesize profileImageView=_profileImageView;
- (void).cxx_destruct;
- (void)updateThemedViews;
- (id)makeCloseButton;
- (id)makeTwitterBirdView;
- (id)makeProfileImageView;
- (void)applyConstraintsToSubviews;
- (void)createTopBarSubviews;
- (void)topBarCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRTweetCashtagEntity : TWTRTweetEntity <NSCoding, TWTRJSONConvertible>
{
    NSString *_text;
}

@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)accessibilityValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImageSequenceConfiguration : NSObject
{
    UIImage *_imageSheet;
    unsigned long long _rows;
    unsigned long long _columns;
    unsigned long long _frameCount;
    double _duration;
    struct CGSize _imageSize;
}

+ (id)heartSequenceConfigurationWithImageSheet:(id)arg1 imageSize:(struct CGSize)arg2;
+ (id)heartImageSequenceConfigurationWithLargeSize;
+ (id)heartImageSequenceConfigurationWithRegularSize;
+ (id)heartImageSequenceConfigurationWithSize:(long long)arg1;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) unsigned long long frameCount; // @synthesize frameCount=_frameCount;
@property(nonatomic) unsigned long long columns; // @synthesize columns=_columns;
@property(nonatomic) unsigned long long rows; // @synthesize rows=_rows;
@property(retain, nonatomic) UIImage *imageSheet; // @synthesize imageSheet=_imageSheet;
- (void).cxx_destruct;

@end

@interface TWTRComposerContentView : TWTRComposerThemedView
{
    UITextView *_textView;
    UIScrollView *_scrollView;
    TWTRCardPreviewView *_cardPreview;
    TWTRCardConfiguration *_cardConfig;
    CDUnknownBlockType _countChangeHandler;
    long long _remainingCharacterCount;
    TWTRComposerTextViewDelegate *_textViewDelegate;
    NSLayoutConstraint *_textViewHeightConstraint;
    UILabel *_placeholderLabel;
}

@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(retain, nonatomic) NSLayoutConstraint *textViewHeightConstraint; // @synthesize textViewHeightConstraint=_textViewHeightConstraint;
@property(retain, nonatomic) TWTRComposerTextViewDelegate *textViewDelegate; // @synthesize textViewDelegate=_textViewDelegate;
@property(readonly, nonatomic) long long remainingCharacterCount; // @synthesize remainingCharacterCount=_remainingCharacterCount;
@property(copy, nonatomic) CDUnknownBlockType countChangeHandler; // @synthesize countChangeHandler=_countChangeHandler;
@property(readonly, nonatomic) TWTRCardConfiguration *cardConfig; // @synthesize cardConfig=_cardConfig;
@property(readonly, nonatomic) TWTRCardPreviewView *cardPreview; // @synthesize cardPreview=_cardPreview;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(readonly, nonatomic) UITextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)updateThemedViews;
- (void)togglePlaceholderLabelVisibility;
- (void)handleTextViewChangeWithContext:(id)arg1;
- (id)makeTextViewDelegate;
- (id)makePlaceholderLabel;
- (id)makeComposeEditor;
- (id)makeCardPreviewViewWithConfig:(id)arg1;
- (void)embedViewsInScrollView;
- (void)embedScrollView;
- (id)initWithFrame:(struct CGRect)arg1 cardConfiguration:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRNotificationCenter : NSObject
{
}

+ (void)postNotificationName:(id)arg1 tweet:(id)arg2 userInfo:(id)arg3;

@end

@interface TWTRJSONKeyRequirement : NSObject
{
    _Bool _required;
    Class _klass;
    NSArray *_alternateKeys;
}

+ (id)requiredURL;
+ (id)optionalURL;
+ (id)requiredDate;
+ (id)optionalDate;
+ (id)requiredNumber;
+ (id)optionalNumber;
+ (id)requiredStringWithAlternateKeys:(id)arg1;
+ (id)requiredString;
+ (id)optionalString;
+ (id)optionalKeyOfAnyClass;
+ (id)requiredKeyOfClass:(Class)arg1 alternateKeys:(id)arg2;
+ (id)requiredKeyOfClass:(Class)arg1;
+ (id)optionalKeyOfClass:(Class)arg1;
@property(readonly, copy, nonatomic) NSArray *alternateKeys; // @synthesize alternateKeys=_alternateKeys;
@property(readonly, nonatomic, getter=isRequired) _Bool required; // @synthesize required=_required;
@property(readonly, nonatomic) Class klass; // @synthesize klass=_klass;
- (void).cxx_destruct;
- (id)description;
- (id)initWithClass:(Class)arg1 alternateKeys:(id)arg2 isRequired:(_Bool)arg3;

@end

@interface TWTRTweetRepository : NSObject
{
    id <TWTRTweetCache> _cache;
}

+ (id)cacheDirectoryPath;
+ (id)sortedArrayWithArray:(id)arg1 withIDsArray:(id)arg2;
+ (id)sharedInstance;
@property(retain, nonatomic) id <TWTRTweetCache> cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)lookupRequestForTweetIDs:(id)arg1 APIClient:(id)arg2 additionalParameters:(id)arg3 error:(id *)arg4;
- (void)loadCachedTweetsWithIDs:(id)arg1 perspective:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cacheTweet:(id)arg1 perspective:(id)arg2;
- (void)cacheTweet:(id)arg1;
- (void)loadTweetsWithIDs:(id)arg1 APIClient:(id)arg2 additionalParameters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)initWithCache:(id)arg1;

@end

@interface TWTRVideoViewController : UIViewController <UIGestureRecognizerDelegate, TWTRVideoPlayerScribeDelegate, TWTRVideoCTAViewDelegate, TWTRMediaContainerPresentable>
{
    TWTRTweet *_tweet;
    TWTRVideoPlaybackConfiguration *_playbackConfiguration;
    UIImage *_thumbnailImage;
    TWTRVideoPlayerView *_videoPlayerView;
    TWTRVideoControlsView *_videoControlsView;
    TWTRVideoControlsViewSynchronizer *_synchronizer;
    UIView *_bottomBarContainer;
    UIView *_mediaContainer;
    UIGestureRecognizer *_backgroundTapGestureRecognizer;
    UIGestureRecognizer *_videoTapGestureRecognizer;
    NSLayoutConstraint *_CTATopConstraint;
    NSLayoutConstraint *_CTABottomConstraint;
    UIView *_CTAView;
}

@property(readonly, nonatomic) UIView *CTAView; // @synthesize CTAView=_CTAView;
@property(readonly, nonatomic) NSLayoutConstraint *CTABottomConstraint; // @synthesize CTABottomConstraint=_CTABottomConstraint;
@property(readonly, nonatomic) NSLayoutConstraint *CTATopConstraint; // @synthesize CTATopConstraint=_CTATopConstraint;
@property(readonly, nonatomic) UIGestureRecognizer *videoTapGestureRecognizer; // @synthesize videoTapGestureRecognizer=_videoTapGestureRecognizer;
@property(readonly, nonatomic) UIGestureRecognizer *backgroundTapGestureRecognizer; // @synthesize backgroundTapGestureRecognizer=_backgroundTapGestureRecognizer;
@property(readonly, nonatomic) UIView *mediaContainer; // @synthesize mediaContainer=_mediaContainer;
@property(readonly, nonatomic) UIView *bottomBarContainer; // @synthesize bottomBarContainer=_bottomBarContainer;
@property(readonly, nonatomic) TWTRVideoControlsViewSynchronizer *synchronizer; // @synthesize synchronizer=_synchronizer;
@property(readonly, nonatomic) TWTRVideoControlsView *videoControlsView; // @synthesize videoControlsView=_videoControlsView;
@property(readonly, nonatomic) TWTRVideoPlayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(readonly, nonatomic) UIImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(readonly, nonatomic) TWTRVideoPlaybackConfiguration *playbackConfiguration; // @synthesize playbackConfiguration=_playbackConfiguration;
@property(readonly, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
- (void).cxx_destruct;
- (void)transitionDidComplete;
- (void)transitionWillBegin;
- (struct CGRect)transitionImageTargetFrame;
- (id)transitionImage;
- (void)didDismissInMediaContainer;
- (void)willShowInMediaContainer;
- (void)videoCTAView:(id)arg1 willDeeplinkToTargetURL:(id)arg2;
- (void)videoPlayer:(id)arg1 didPlayPercentOfMedia:(unsigned long long)arg2 playbackConfiguration:(id)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)backgroundGestureRecognizerShouldBegin:(id)arg1;
- (_Bool)videoGestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (double)aspectRatioForMediaContainer;
- (struct CGRect)mediaContainerTargetFrame;
- (void)setChromeVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isChromeVisible;
- (void)handleVideoTap;
- (void)handleBackgroundTap;
- (void)prepareVideoSynchronizer;
- (void)installGestureRecognizers;
- (id)makeCTAViewWithConfiguration:(id)arg1;
- (void)prepareMediaContainer;
- (void)addVideoControlsToBottomBar:(id)arg1;
- (void)prepareCallToActionView;
- (void)prepareBottomBar;
- (void)prepareSubviews;
- (void)viewDidLoad;
- (id)initWithTweet:(id)arg1 playbackConfiguration:(id)arg2 previewImage:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRMoPubAdDisclaimerView : UIView
{
    UIImageView *_privacyInfoIcon;
    UILabel *_disclaimerLabel;
}

@property(readonly, nonatomic) UILabel *disclaimerLabel; // @synthesize disclaimerLabel=_disclaimerLabel;
@property(readonly, nonatomic) UIImageView *privacyInfoIcon; // @synthesize privacyInfoIcon=_privacyInfoIcon;
- (void).cxx_destruct;
- (void)prepareLayout;
- (void)setBackgroundColor:(id)arg1;
- (void)blockTapsOnDisclaimerLabel;
- (void)setUpAccessibility;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRTimelineMessageView : UIView
{
    UILabel *_messageLabel;
    UIActivityIndicatorView *_activityIndicator;
    NSLayoutConstraint *_spinnerMessageConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *spinnerMessageConstraint; // @synthesize spinnerMessageConstraint=_spinnerMessageConstraint;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
- (void).cxx_destruct;
- (void)endLoadingWithMessage:(id)arg1;
- (void)endLoading;
- (void)beginLoading;
- (void)setupConstraints;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRStore : NSObject
{
    NSMutableDictionary *_subscriptions;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *subscriptions; // @synthesize subscriptions=_subscriptions;
- (void).cxx_destruct;
- (id)subscriptionsForClassName:(id)arg1;
- (id)subscriptionsForClassName:(id)arg1 objectID:(id)arg2;
- (void)unsafeUnsubscribeSubscriber:(id)arg1 className:(id)arg2 objectID:(id)arg3;
- (void)unsafeAddSubscriber:(id)arg1 className:(id)arg2 key:(id)arg3;
- (void)notifySubscribersOfChangesToObject:(id)arg1 withID:(id)arg2;
- (void)unsubscribeSubscriber:(id)arg1 fromClass:(Class)arg2 objectID:(id)arg3;
- (void)subscribeSubscriber:(id)arg1 toClass:(Class)arg2 objectID:(id)arg3;
- (id)init;

@end

@interface TWTRTweetOperation : NSObject
{
    TWTRCardConfiguration *_initialCardConfiguration;
    TWTRAPIClient *_APIClient;
}

@property(readonly, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
@property(readonly, nonatomic) TWTRCardConfiguration *initialCardConfiguration; // @synthesize initialCardConfiguration=_initialCardConfiguration;
- (void).cxx_destruct;
- (void)createTweetWithText:(id)arg1 cardConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createTweetWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)uploadImageFromConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)convertCardConfiguration:(CDUnknownBlockType)arg1;
- (id)initWithUserID:(id)arg1 cardConfiguration:(id)arg2;

@end

@interface TWTRSessionMigrator : NSObject <TWTRSessionMigrating>
{
}

- (id)authenticatorUserSessionDictionary;
- (void)logoutAuthenticatorUser;
- (void)removeDeprecatedSessions;
- (void)migrateUserSessionsIntoStore:(id)arg1 removeOnSuccess:(_Bool)arg2;
- (void)runMigrationWithDestination:(id)arg1 removeOnSuccess:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRVideoControlsResponsiveSlider : UISlider
{
}

- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;

@end

@interface TWTRVideoControlsView : UIView
{
    UILabel *_timeLabel;
    UISlider *_scrubber;
    UIButton *_controlButton;
}

@property(readonly, nonatomic) UIButton *controlButton; // @synthesize controlButton=_controlButton;
@property(readonly, nonatomic) UISlider *scrubber; // @synthesize scrubber=_scrubber;
@property(readonly, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
- (void).cxx_destruct;
- (void)prepareSubviews;
- (void)updateButtonImageForState:(long long)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)updateTintColorForSubviews;
- (void)tintColorDidChange;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRPlayIcon : UIImageView
{
}

- (struct CGSize)intrinsicContentSize;
- (id)init;

@end

@interface TWTRFontUtil : NSObject
{
}

+ (double)minimumLineHeightForFont:(id)arg1 traitCollection:(id)arg2;
+ (double)lineHeightRatioForTraitCollection:(id)arg1;
+ (double)defaultFontSize;
+ (id)mediumBoldSystemFont;
+ (id)largeBoldSystemFont;
+ (double)mediumFontSize;
+ (double)largeFontSize;
+ (id)adBodyFont;
+ (id)adTitleFont;
+ (id)largeSizeSystemFont;
+ (id)mediumSizeSystemFont;
+ (id)retweetedByAttributionLabelFont;
+ (id)tweetFontForStyle:(unsigned long long)arg1;
+ (id)timestampFontForStyle:(unsigned long long)arg1;
+ (id)usernameFontForStyle:(unsigned long long)arg1;
+ (id)fullnameFont;

@end

@interface TWTRCollectionTimelineDataSource : NSObject <TWTRTimelineDataSource>
{
    TWTRAPIClient *_APIClient;
    long long _maxTweetsPerRequest;
    NSString *_collectionID;
}

@property(readonly, copy, nonatomic) NSString *collectionID; // @synthesize collectionID=_collectionID;
@property(readonly, nonatomic) long long maxTweetsPerRequest; // @synthesize maxTweetsPerRequest=_maxTweetsPerRequest;
@property(retain, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
- (void).cxx_destruct;
- (id)queryParametersWithMaxPosition:(id)arg1;
@property(readonly, nonatomic) unsigned long long timelineType;
- (void)loadPreviousTweetsBeforePosition:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithCollectionID:(id)arg1 APIClient:(id)arg2 maxTweetsPerRequest:(unsigned long long)arg3;
- (id)initWithCollectionID:(id)arg1 APIClient:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRJSONValidator : NSObject
{
    NSDictionary *_transformers;
    NSDictionary *_outputValues;
}

@property(readonly, copy, nonatomic) NSDictionary *outputValues; // @synthesize outputValues=_outputValues;
@property(readonly, copy, nonatomic) NSDictionary *transformers; // @synthesize transformers=_transformers;
- (void).cxx_destruct;
- (id)pruneDictionary:(id)arg1;
- (_Bool)allRequiredKeysPresent:(id)arg1;
- (_Bool)key:(id)arg1 isValidForClass:(Class)arg2 inDictionary:(id)arg3;
- (void)transformDictionary:(id)arg1;
- (id)validatedDictionaryFromJSON:(id)arg1;
- (id)initWithValueTransformers:(id)arg1 outputValues:(id)arg2;

@end

@interface TWTRLogInButton : UIButton
{
    CDUnknownBlockType _logInCompletion;
    long long _loginMethods;
}

+ (id)buttonWithLogInCompletion:(CDUnknownBlockType)arg1;
@property(nonatomic) long long loginMethods; // @synthesize loginMethods=_loginMethods;
@property(copy, nonatomic) CDUnknownBlockType logInCompletion; // @synthesize logInCompletion=_logInCompletion;
- (void).cxx_destruct;
- (id)accessibilityLabel;
- (struct CGSize)intrinsicContentSize;
- (void)buttonTapped;
- (void)tw_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRVideoPlayerViewLayer : UIView
{
}

+ (Class)layerClass;
@property(readonly, nonatomic) AVPlayerLayer *playerLayer;

@end

@interface TWTRVideoPlayerView : UIView
{
    _Bool _didRegisterForNotifications;
    _Bool _playerHasBecomeReady;
    _Bool _shouldAutoPlay;
    _Bool _shouldAutoLoop;
    id <TWTRVideoPlayerViewDelegate> _delegate;
    id <TWTRVideoPlayerScribeDelegate> _scribeDelegate;
    long long _playbackState;
    AVPlayerItem *_playerItem;
    AVPlayer *_player;
    NSObject<OS_dispatch_queue> *_serialConfigurationQueue;
    id _playerObserver;
    TWTRVideoPlayerViewLayer *_playerLayerView;
    TWTRVideoPlaybackConfiguration *_configuration;
    UIActivityIndicatorView *_loadingView;
    UIImageView *_previewImageView;
}

+ (CDStruct_1b6d18a9)standardTotalTrimAmount;
+ (CDStruct_1b6d18a9)standardTrim;
+ (id)seamlessLoopingVinePlayerItemFromURL:(id)arg1;
@property(readonly, nonatomic) UIImageView *previewImageView; // @synthesize previewImageView=_previewImageView;
@property(readonly, nonatomic) UIActivityIndicatorView *loadingView; // @synthesize loadingView=_loadingView;
@property(readonly, nonatomic) TWTRVideoPlaybackConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, nonatomic) TWTRVideoPlayerViewLayer *playerLayerView; // @synthesize playerLayerView=_playerLayerView;
@property(retain, nonatomic) id playerObserver; // @synthesize playerObserver=_playerObserver;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialConfigurationQueue; // @synthesize serialConfigurationQueue=_serialConfigurationQueue;
@property(readonly, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(readonly, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) __weak id <TWTRVideoPlayerScribeDelegate> scribeDelegate; // @synthesize scribeDelegate=_scribeDelegate;
@property(nonatomic) __weak id <TWTRVideoPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldAutoLoop; // @synthesize shouldAutoLoop=_shouldAutoLoop;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
- (void).cxx_destruct;
- (double)timeIntervalFromTime:(CDStruct_1b6d18a9)arg1;
@property(readonly, nonatomic) double videoDuration;
- (double)elapsedTime;
- (void)seekToPosition:(double)arg1;
- (void)proceedToNextPlaybackState;
- (void)pause;
- (void)play;
- (void)restart;
- (_Bool)isVideoReadyToPlay;
- (void)playerDidBecomeReady;
- (void)handlePlayerDidReachEndNotification:(id)arg1;
- (void)handlePlayerStatusChange:(id)arg1;
- (void)unregisterAnalyticsObservers;
- (void)registerAnalyticsObservers;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unregisterObservers;
- (void)registerObservers;
@property(readonly, nonatomic) struct CGRect videoRect;
- (void)loadVideo;
- (void)performOnMain:(CDUnknownBlockType)arg1;
- (void)configureVideoPlayerInSerialQueue;
- (void)configureVideoPlayer;
- (void)prepareSubviewsWithPreviewImage:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 videoPlaybackConfiguration:(id)arg2 previewImage:(id)arg3 shouldLoadVideo:(_Bool)arg4;

@end

@interface TWTRVideoPlaybackRules : NSObject
{
}

+ (_Bool)shouldAutoLoopForType:(unsigned long long)arg1;
+ (_Bool)shouldShowVideoControlsForType:(unsigned long long)arg1;

@end

@interface TWTRFrameSheet : NSObject
{
    unsigned long long _imageWidth;
    unsigned long long _imageHeight;
    unsigned long long _rows;
    unsigned long long _columns;
    unsigned long long _frameCount;
    UIImage *_frameSheet;
}

@property(readonly, nonatomic) UIImage *frameSheet; // @synthesize frameSheet=_frameSheet;
@property(readonly, nonatomic) unsigned long long frameCount; // @synthesize frameCount=_frameCount;
@property(readonly, nonatomic) unsigned long long columns; // @synthesize columns=_columns;
@property(readonly, nonatomic) unsigned long long rows; // @synthesize rows=_rows;
@property(readonly, nonatomic) unsigned long long imageHeight; // @synthesize imageHeight=_imageHeight;
@property(readonly, nonatomic) unsigned long long imageWidth; // @synthesize imageWidth=_imageWidth;
- (void).cxx_destruct;
- (id)frameArray;
- (id)initWithImage:(id)arg1 rows:(unsigned long long)arg2 columns:(unsigned long long)arg3 frameCount:(unsigned long long)arg4 imageWidth:(unsigned long long)arg5 imageHeight:(unsigned long long)arg6;

@end

@interface TWTRComposerTextChangeContext : NSObject
{
    double _height;
    long long _remainingCharacterCount;
}

@property(readonly, nonatomic) long long remainingCharacterCount; // @synthesize remainingCharacterCount=_remainingCharacterCount;
@property(readonly, nonatomic) double height; // @synthesize height=_height;
- (id)initWithHeight:(double)arg1 remainingCount:(long long)arg2;

@end

@interface TWTRComposerTextViewDelegate : NSObject <UITextViewDelegate>
{
    id _textChangeTarget;
    CDUnknownBlockType _textChangeHandler;
}

@property(copy, nonatomic) CDUnknownBlockType textChangeHandler; // @synthesize textChangeHandler=_textChangeHandler;
@property(nonatomic) __weak id textChangeTarget; // @synthesize textChangeTarget=_textChangeTarget;
- (void).cxx_destruct;
- (double)heightForTextStorage:(id)arg1 constrainedToWidth:(double)arg2;
- (double)heightForTextView:(id)arg1;
- (double)calculateHeightForTextView:(id)arg1;
- (void)invokeChangeHandlerWithContext:(id)arg1;
- (void)handleTextChangeForTextView:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)forceUpdateForTextView:(id)arg1;
- (void)registerTarget:(id)arg1 forTextChangeHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTimelineViewController : UITableViewController
{
    _Bool _showTweetActions;
    _Bool _isCurrentlyLoading;
    id <TWTRTimelineDataSource> _dataSource;
    TWTRMoPubAdConfiguration *_adConfiguration;
    id <TWTRTweetViewDelegate> _tweetViewDelegate;
    id <TWTRTimelineDelegate> _timelineDelegate;
    TWTRTimelineCursor *_currentCursor;
    NSMutableArray *_tweets;
    UIColor *_defaultBackgroundColor;
    NSArray *_tweetNotificationObservers;
    TWTRTableViewAdPlacer *_adPlacer;
    TWTRTimelineMessageView *_messageView;
    id _tableViewProxy;
}

@property(retain, nonatomic) id tableViewProxy; // @synthesize tableViewProxy=_tableViewProxy;
@property(retain, nonatomic) TWTRTimelineMessageView *messageView; // @synthesize messageView=_messageView;
@property(retain, nonatomic) TWTRTableViewAdPlacer *adPlacer; // @synthesize adPlacer=_adPlacer;
@property(readonly, nonatomic) NSArray *tweetNotificationObservers; // @synthesize tweetNotificationObservers=_tweetNotificationObservers;
@property(retain, nonatomic) UIColor *defaultBackgroundColor; // @synthesize defaultBackgroundColor=_defaultBackgroundColor;
@property(retain, nonatomic) NSMutableArray *tweets; // @synthesize tweets=_tweets;
@property(retain, nonatomic) TWTRTimelineCursor *currentCursor; // @synthesize currentCursor=_currentCursor;
@property(nonatomic) _Bool isCurrentlyLoading; // @synthesize isCurrentlyLoading=_isCurrentlyLoading;
@property(nonatomic) __weak id <TWTRTimelineDelegate> timelineDelegate; // @synthesize timelineDelegate=_timelineDelegate;
@property(nonatomic) __weak id <TWTRTweetViewDelegate> tweetViewDelegate; // @synthesize tweetViewDelegate=_tweetViewDelegate;
@property(nonatomic) _Bool showTweetActions; // @synthesize showTweetActions=_showTweetActions;
@property(retain, nonatomic) TWTRMoPubAdConfiguration *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(copy, nonatomic) id <TWTRTimelineDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)configureAdPlacer;
- (void)loadTweetsAndReplaceExisting:(_Bool)arg1;
- (void)loadPreviousTweets;
- (void)loadNewestTweets;
- (_Bool)indexIsBottomCell:(unsigned long long)arg1;
- (void)updateTweet:(id)arg1;
- (void)observeForTweetUpdates;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)snapshotTweets;
- (id)tweetAtIndex:(long long)arg1;
- (unsigned long long)countOfTweets;
- (void)refresh;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)initWithDataSource:(id)arg1 adConfiguration:(id)arg2;
- (id)initWithDataSource:(id)arg1;
- (void)commonInitWithDataSource:(id)arg1 adConfiguration:(id)arg2;

@end

@interface TWTRTweetDetailViewActionBar : UIView
{
    UIViewController *_presenterViewController;
    TWTRLikeButton *_likeButton;
    TWTRShareButton *_shareButton;
}

@property(readonly, nonatomic) TWTRShareButton *shareButton; // @synthesize shareButton=_shareButton;
@property(readonly, nonatomic) TWTRLikeButton *likeButton; // @synthesize likeButton=_likeButton;
@property(nonatomic) __weak UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
- (void).cxx_destruct;
- (id)makeHairlineView;
- (void)configureWithTweet:(id)arg1;
- (void)prepareSubviews;
- (void)commonActionBarInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRWebAuthenticationFlow : NSObject
{
    _Bool _forceLogin;
    TWTRSessionStore *_sessionStore;
    CDUnknownBlockType _controllerPresentation;
    CDUnknownBlockType _completion;
    CDUnknownBlockType _redirectCompletionBlock;
    TWTRLoginUtils *_loginUtils;
}

@property(readonly, nonatomic) _Bool forceLogin; // @synthesize forceLogin=_forceLogin;
@property(readonly, nonatomic) TWTRLoginUtils *loginUtils; // @synthesize loginUtils=_loginUtils;
@property(copy, nonatomic) CDUnknownBlockType redirectCompletionBlock; // @synthesize redirectCompletionBlock=_redirectCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(copy, nonatomic) CDUnknownBlockType controllerPresentation; // @synthesize controllerPresentation=_controllerPresentation;
@property(readonly, nonatomic) TWTRSessionStore *sessionStore; // @synthesize sessionStore=_sessionStore;
- (void).cxx_destruct;
- (void)succeedWithSession:(id)arg1;
- (void)failWithError:(id)arg1;
- (void)saveSession:(id)arg1;
- (void)presentWebAuthenticationViewController:(id)arg1;
- (void)requestAuthenticationToken:(CDUnknownBlockType)arg1;
- (_Bool)resumeAuthenticationWithRedirectURL:(id)arg1;
- (void)beginAuthenticationFlow:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSessionStore:(id)arg1 forceLogin:(_Bool)arg2;

@end

@interface TWTRTweetEntity : NSObject <NSCoding, NSCopying, TWTRJSONConvertible>
{
    long long _startIndex;
    long long _endIndex;
}

@property(readonly, nonatomic) long long endIndex; // @synthesize endIndex=_endIndex;
@property(readonly, nonatomic) long long startIndex; // @synthesize startIndex=_startIndex;
- (id)accessibilityValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToTweetEntity:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStartIndex:(long long)arg1 endIndex:(long long)arg2;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRTweetUrlEntity : TWTRTweetEntity <NSCoding, TWTRJSONConvertible>
{
    NSString *_displayUrl;
    NSString *_expandedUrl;
    NSString *_url;
}

@property(readonly, copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(readonly, copy, nonatomic) NSString *expandedUrl; // @synthesize expandedUrl=_expandedUrl;
@property(readonly, copy, nonatomic) NSString *displayUrl; // @synthesize displayUrl=_displayUrl;
- (void).cxx_destruct;
- (id)accessibilityValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetEntityRange : NSObject
{
    TWTRTweetEntity *_entity;
    struct _NSRange _textRange;
}

@property(readonly, nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property(readonly, nonatomic) TWTRTweetEntity *entity; // @synthesize entity=_entity;
- (void).cxx_destruct;
- (id)description;
- (id)initWithEntity:(id)arg1 textRange:(struct _NSRange)arg2;

@end

@interface TWTRTweetPresenter : NSObject
{
    unsigned long long _style;
}

+ (id)presenterForStyle:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
- (id)entityRangesSortedByPosition:(id)arg1;
- (id)entitiesForTweet:(id)arg1 types:(long long)arg2;
- (id)entityRangesForTweet:(id)arg1 types:(long long)arg2;
- (double)aspectRatioForMultiphotoDisplayOfTweet:(id)arg1;
- (double)aspectRatioForStyleFromAverageRatio:(double)arg1;
- (double)mediaAspectRatioForTweetWithSingleMediaEntity:(id)arg1;
- (double)mediaAspectRatioForTweet:(id)arg1;
- (id)stripWhitespaceFromText:(id)arg1;
- (id)stripCardEntity:(id)arg1 fromText:(id)arg2;
- (id)stripQuoteTweetURLForTweetID:(id)arg1 entities:(id)arg2 fromText:(id)arg3;
- (id)replaceDisplayURLs:(id)arg1 fromText:(id)arg2;
- (id)stripLastImage:(id)arg1 fromText:(id)arg2;
- (id)attributedTextForText:(id)arg1 withEntityRanges:(id)arg2;
- (id)textForTweet:(id)arg1;
- (id)retweetedByTextForRetweet:(id)arg1;
- (id)initWithTweetViewStyle:(unsigned long long)arg1;

@end

@interface TWTRAttributedLabel : UILabel <TWTRAttributedLabel, UIGestureRecognizerDelegate>
{
    _Bool _needsFramesetter;
    struct __CTFramesetter *_framesetter;
    struct __CTFramesetter *_highlightFramesetter;
    NSAttributedString *_attributedText;
    id <TWTRAttributedLabelDelegate> _delegate;
    NSArray *_entities;
    NSDictionary *_linkAttributes;
    NSDictionary *_activeLinkAttributes;
    NSDictionary *_inactiveLinkAttributes;
    double _shadowRadius;
    double _highlightedShadowRadius;
    UIColor *_highlightedShadowColor;
    double _kern;
    double _firstLineIndent;
    double _lineSpacing;
    double _minimumLineHeight;
    double _maximumLineHeight;
    double _lineHeightMultiple;
    long long _verticalAlignment;
    NSString *_truncationTokenString;
    NSDictionary *_truncationTokenStringAttributes;
    NSAttributedString *_inactiveAttributedText;
    NSAttributedString *_renderedAttributedText;
    TWTRTweetEntityRange *_activeLink;
    NSArray *_accessibilityElements;
    struct CGSize _highlightedShadowOffset;
    struct UIEdgeInsets _textInsets;
}

+ (struct CGSize)sizeThatFitsAttributedString:(id)arg1 withConstraints:(struct CGSize)arg2 limitedToNumberOfLines:(unsigned long long)arg3;
@property(retain, nonatomic) NSArray *accessibilityElements; // @synthesize accessibilityElements=_accessibilityElements;
@property(retain, nonatomic) TWTRTweetEntityRange *activeLink; // @synthesize activeLink=_activeLink;
@property(copy, nonatomic) NSAttributedString *renderedAttributedText; // @synthesize renderedAttributedText=_renderedAttributedText;
@property(copy, nonatomic) NSAttributedString *inactiveAttributedText; // @synthesize inactiveAttributedText=_inactiveAttributedText;
@property(retain, nonatomic) NSDictionary *truncationTokenStringAttributes; // @synthesize truncationTokenStringAttributes=_truncationTokenStringAttributes;
@property(retain, nonatomic) NSString *truncationTokenString; // @synthesize truncationTokenString=_truncationTokenString;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) struct UIEdgeInsets textInsets; // @synthesize textInsets=_textInsets;
@property(nonatomic) double lineHeightMultiple; // @synthesize lineHeightMultiple=_lineHeightMultiple;
@property(nonatomic) double maximumLineHeight; // @synthesize maximumLineHeight=_maximumLineHeight;
@property(nonatomic) double minimumLineHeight; // @synthesize minimumLineHeight=_minimumLineHeight;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) double firstLineIndent; // @synthesize firstLineIndent=_firstLineIndent;
@property(nonatomic) double kern; // @synthesize kern=_kern;
@property(retain, nonatomic) UIColor *highlightedShadowColor; // @synthesize highlightedShadowColor=_highlightedShadowColor;
@property(nonatomic) struct CGSize highlightedShadowOffset; // @synthesize highlightedShadowOffset=_highlightedShadowOffset;
@property(nonatomic) double highlightedShadowRadius; // @synthesize highlightedShadowRadius=_highlightedShadowRadius;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius=_shadowRadius;
@property(retain, nonatomic) NSDictionary *inactiveLinkAttributes; // @synthesize inactiveLinkAttributes=_inactiveLinkAttributes;
@property(retain, nonatomic) NSDictionary *activeLinkAttributes; // @synthesize activeLinkAttributes=_activeLinkAttributes;
@property(retain, nonatomic) NSDictionary *linkAttributes; // @synthesize linkAttributes=_linkAttributes;
@property(retain, nonatomic) NSArray *entities; // @synthesize entities=_entities;
@property(nonatomic) id <TWTRAttributedLabelDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)copy:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)tintColorDidChange;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
- (_Bool)isAccessibilityElement;
- (void)drawTextInRect:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setHighlighted:(_Bool)arg1;
- (void)setText:(id)arg1 afterInheritingLabelAttributesAndConfiguringWithBlock:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) id text; // @dynamic text;
- (void)drawStrike:(struct __CTFrame *)arg1 inRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (void)drawBackground:(struct __CTFrame *)arg1 inRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (void)drawFramesetter:(struct __CTFramesetter *)arg1 attributedString:(id)arg2 textRange:(CDStruct_912cb5d2)arg3 inRect:(struct CGRect)arg4 context:(struct CGContext *)arg5;
- (struct CGRect)boundingRectForCharacterRange:(struct _NSRange)arg1;
- (long long)characterIndexAtPoint:(struct CGPoint)arg1;
- (id)entityAtPoint:(struct CGPoint)arg1;
- (id)entityAtCharacterIndex:(long long)arg1;
- (void)addLinksForTweetEntityRanges:(id)arg1 attributes:(id)arg2;
- (void)addLinksForEntityRanges:(id)arg1;
@property(nonatomic) double leading;
- (void)setHighlightFramesetter:(struct __CTFramesetter *)arg1;
- (struct __CTFramesetter *)highlightFramesetter;
- (void)setFramesetter:(struct __CTFramesetter *)arg1;
- (struct __CTFramesetter *)framesetter;
- (void)setNeedsFramesetter;
- (void)dealloc;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRBirdView : UIView
{
    UIColor *_birdColor;
    struct CGSize _desiredSize;
}

+ (id)mediumBird;
+ (id)smallBird;
@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=_desiredSize;
- (void).cxx_destruct;
@property(retain, nonatomic) UIColor *birdColor; // @synthesize birdColor=_birdColor;
- (struct CGSize)intrinsicContentSize;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRVideoMetaDataVariant : NSObject <NSCoding, NSCopying, TWTRJSONConvertible>
{
    long long _bitrate;
    NSString *_contentType;
    NSURL *_URL;
    NSDictionary *_validatedDictionary;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(readonly, nonatomic) long long bitrate; // @synthesize bitrate=_bitrate;
- (void).cxx_destruct;
- (_Bool)isEqualToVariant:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRVideoMetaData : NSObject <NSCoding, NSCopying, TWTRJSONConvertible>
{
    NSURL *_videoURL;
    NSArray *_variants;
    double _aspectRatio;
    double _duration;
    NSDictionary *_validatedDictionary;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(readonly, nonatomic) NSArray *variants; // @synthesize variants=_variants;
@property(readonly, nonatomic) NSURL *videoURL; // @synthesize videoURL=_videoURL;
- (void).cxx_destruct;
- (_Bool)isEqualToVideoMetaData:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRTweetHashtagEntity : TWTRTweetEntity <NSCoding, TWTRJSONConvertible>
{
    NSString *_text;
}

@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)accessibilityValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTwitterAPIServiceConfig : NSObject <TWTRAPIServiceConfig>
{
}

@property(readonly, copy, nonatomic) NSString *serviceName;
@property(readonly, copy, nonatomic) NSString *apiScheme;
@property(readonly, copy, nonatomic) NSString *apiHost;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTwitterUploadServiceConfig : NSObject <TWTRAPIServiceConfig>
{
}

@property(readonly, copy, nonatomic) NSString *serviceName;
@property(readonly, copy, nonatomic) NSString *apiScheme;
@property(readonly, copy, nonatomic) NSString *apiHost;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTwitterCardsServiceConfig : NSObject <TWTRAPIServiceConfig>
{
}

@property(readonly, copy, nonatomic) NSString *serviceName;
@property(readonly, copy, nonatomic) NSString *apiScheme;
@property(readonly, copy, nonatomic) NSString *apiHost;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTwitterText : NSObject
{
}

+ (id)validDomainSucceedingCharRegexp;
+ (id)invalidURLWithoutProtocolPrecedingCharSet;
+ (id)endMentionRegexp;
+ (id)validReplyRegexp;
+ (id)validMentionOrListRegexp;
+ (id)validSymbolRegexp;
+ (id)endHashtagRegexp;
+ (id)validHashtagRegexp;
+ (id)validTCOURLRegexp;
+ (id)validSpecialShortDomainRegexp;
+ (id)invalidShortDomainRegexp;
+ (id)validASCIIDomainRegexp;
+ (id)URLRegexpForValidation;
+ (id)simplifiedValidURLRegexp;
+ (long long)remainingCharacterCount:(id)arg1 httpURLLength:(unsigned long long)arg2 httpsURLLength:(unsigned long long)arg3;
+ (long long)remainingCharacterCount:(id)arg1;
+ (unsigned long long)tweetLength:(id)arg1 httpURLLength:(unsigned long long)arg2 httpsURLLength:(unsigned long long)arg3;
+ (id)validHashtagBoundaryCharacterSet;
+ (unsigned long long)tweetLength:(id)arg1;
+ (id)repliedScreenNameInText:(id)arg1;
+ (id)mentionsOrListsInText:(id)arg1;
+ (id)mentionedScreenNamesInText:(id)arg1;
+ (id)symbolsInText:(id)arg1 withURLEntities:(id)arg2;
+ (id)symbolsInText:(id)arg1 checkingURLOverlap:(_Bool)arg2;
+ (id)hashtagsInText:(id)arg1 withURLEntities:(id)arg2;
+ (id)hashtagsInText:(id)arg1 checkingURLOverlap:(_Bool)arg2;
+ (id)URLsInText:(id)arg1;
+ (id)entitiesInText:(id)arg1;

@end

@interface TWTRTimestampLabel : UILabel
{
    NSDate *_date;
    NSObject<OS_dispatch_source> *_timer;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (void)updateText;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRComposerTheme : NSObject
{
    UIColor *_backgroundColor;
    UIColor *_borderColor;
    UIColor *_birdColor;
    UIColor *_tweetButtonTextColor;
    UIColor *_closeButtonTintColor;
    UIColor *_composerTextColor;
    UIColor *_installButtonTintColor;
    UIColor *_cardPreviewApplicationNameTextColor;
    UIColor *_cardPreviewStoreNameTextColor;
    UIColor *_remainingCharacterCountTextColor;
    UIColor *_remainingCharacterCountWarningTextColor;
    UIColor *_placeholderTextColor;
    UIImage *_closeButtonImage;
    UIImage *_tweetButtonBackgroundImage;
    UIImage *_tweetButtonDisabledBackgroundImage;
    UIFont *_composerFont;
    UIFont *_tweetButtonFont;
    UIFont *_remainingCharacterCountFont;
    UIFont *_cardPreviewFont;
}

@property(readonly, nonatomic) UIFont *cardPreviewFont; // @synthesize cardPreviewFont=_cardPreviewFont;
@property(readonly, nonatomic) UIFont *remainingCharacterCountFont; // @synthesize remainingCharacterCountFont=_remainingCharacterCountFont;
@property(readonly, nonatomic) UIFont *tweetButtonFont; // @synthesize tweetButtonFont=_tweetButtonFont;
@property(readonly, nonatomic) UIFont *composerFont; // @synthesize composerFont=_composerFont;
@property(readonly, nonatomic) UIImage *tweetButtonDisabledBackgroundImage; // @synthesize tweetButtonDisabledBackgroundImage=_tweetButtonDisabledBackgroundImage;
@property(readonly, nonatomic) UIImage *tweetButtonBackgroundImage; // @synthesize tweetButtonBackgroundImage=_tweetButtonBackgroundImage;
@property(readonly, nonatomic) UIImage *closeButtonImage; // @synthesize closeButtonImage=_closeButtonImage;
@property(readonly, nonatomic) UIColor *placeholderTextColor; // @synthesize placeholderTextColor=_placeholderTextColor;
@property(readonly, nonatomic) UIColor *remainingCharacterCountWarningTextColor; // @synthesize remainingCharacterCountWarningTextColor=_remainingCharacterCountWarningTextColor;
@property(readonly, nonatomic) UIColor *remainingCharacterCountTextColor; // @synthesize remainingCharacterCountTextColor=_remainingCharacterCountTextColor;
@property(readonly, nonatomic) UIColor *cardPreviewStoreNameTextColor; // @synthesize cardPreviewStoreNameTextColor=_cardPreviewStoreNameTextColor;
@property(readonly, nonatomic) UIColor *cardPreviewApplicationNameTextColor; // @synthesize cardPreviewApplicationNameTextColor=_cardPreviewApplicationNameTextColor;
@property(readonly, nonatomic) UIColor *installButtonTintColor; // @synthesize installButtonTintColor=_installButtonTintColor;
@property(readonly, nonatomic) UIColor *composerTextColor; // @synthesize composerTextColor=_composerTextColor;
@property(readonly, nonatomic) UIColor *closeButtonTintColor; // @synthesize closeButtonTintColor=_closeButtonTintColor;
@property(readonly, nonatomic) UIColor *tweetButtonTextColor; // @synthesize tweetButtonTextColor=_tweetButtonTextColor;
@property(readonly, nonatomic) UIColor *birdColor; // @synthesize birdColor=_birdColor;
@property(readonly, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(readonly, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)setCustomDarkThemeValues;
- (void)setCustomLightThemeValues;
- (id)initWithThemeType:(long long)arg1;
- (id)init;

@end

@interface TWTRVerifiedView : UIImageView
{
}

- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)intrinsicContentSize;
- (id)init;

@end

@interface TWTRTweetContentView : UIView
{
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
    UIColor *_linkTextColor;
    id <TWTRTweetContentViewLayout> _layout;
    NSLayoutConstraint *_imageTopConstraint;
    NSLayoutConstraint *_imageBottomConstraint;
    TWTRTweetMediaView *_mediaView;
    TWTRProfileHeaderView *_profileHeaderView;
    TWTRTweetLabel *_tweetLabel;
}

@property(readonly, nonatomic) TWTRTweetLabel *tweetLabel; // @synthesize tweetLabel=_tweetLabel;
@property(readonly, nonatomic) TWTRProfileHeaderView *profileHeaderView; // @synthesize profileHeaderView=_profileHeaderView;
@property(readonly, nonatomic) TWTRTweetMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(readonly, nonatomic) NSLayoutConstraint *imageBottomConstraint; // @synthesize imageBottomConstraint=_imageBottomConstraint;
@property(readonly, nonatomic) NSLayoutConstraint *imageTopConstraint; // @synthesize imageTopConstraint=_imageTopConstraint;
@property(readonly, nonatomic) id <TWTRTweetContentViewLayout> layout; // @synthesize layout=_layout;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(retain, nonatomic) UIColor *secondaryTextColor; // @synthesize secondaryTextColor=_secondaryTextColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
- (void).cxx_destruct;
- (void)updateMediaWithTweet:(id)arg1 aspectRatio:(double)arg2;
- (void)updateProfileHeaderWithTweet:(id)arg1;
- (void)updateTweetTextWithTweet:(id)arg1;
- (void)setupSubviews;
- (_Bool)didGestureRecognizerInteractWithEntity:(id)arg1;
- (id)imageForMediaEntity:(id)arg1;
@property(retain, nonatomic) UIViewController *presenterViewController;
- (id)alignmentLayoutGuide;
- (void)updateForComputedBackgroundColor:(id)arg1;
@property(nonatomic) __weak id <TWTRAttributedLabelDelegate> tweetLabelDelegate;
@property(nonatomic) __weak id <TWTRProfileHeaderViewDelegate> profileHeaderDelegate;
@property(nonatomic) __weak id <TWTRTweetMediaViewDelegate> mediaViewDelegate;
- (void)setBackgroundColor:(id)arg1;
- (id)initWithLayout:(id)arg1;

@end

@interface TWTRVideoCTAView : UIView
{
    id <TWTRVideoCTAViewDelegate> _delegate;
    UIButton *_CTAButton;
    TWTRVideoDeeplinkConfiguration *_deeplinkConfiguration;
}

+ (id)borderImage;
@property(readonly, nonatomic) TWTRVideoDeeplinkConfiguration *deeplinkConfiguration; // @synthesize deeplinkConfiguration=_deeplinkConfiguration;
@property(readonly, nonatomic) UIButton *CTAButton; // @synthesize CTAButton=_CTAButton;
@property(nonatomic) __weak id <TWTRVideoCTAViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)fireMetricsCallForMetricsURL:(id)arg1;
- (void)handleDeeplinkButton;
- (struct CGSize)intrinsicContentSize;
- (id)makeButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 deeplinkConfiguration:(id)arg2;

@end

@interface TWTRAPIClient : NSObject
{
    NSString *_userID;
    TwitterNetworking *_networkingClient;
    TWTRAuthConfig *_authConfig;
    id <TWTRSessionStore_Private> _sessionStore;
}

+ (id)perspectivalTweets:(id)arg1 userID:(id)arg2;
+ (id)baseTweetQueryParametersByAppendingParameters:(id)arg1;
+ (id)queryParametersForIncludingCards;
+ (id)defaultServiceConfig;
+ (id)URLSession;
+ (id)networkingPipeline;
+ (id)clientWithCurrentUser;
+ (void)registerSharedSessionStore:(id)arg1;
@property(readonly, nonatomic) id <TWTRSessionStore_Private> sessionStore; // @synthesize sessionStore=_sessionStore;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
@property(readonly, nonatomic) TwitterNetworking *networkingClient; // @synthesize networkingClient=_networkingClient;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
- (void)loadAPIConfigurationWithCompletion:(CDUnknownBlockType)arg1;
- (void)createCardWithCardConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createTweetWithText:(id)arg1 card:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadTweetsForListID:(id)arg1 listSlug:(id)arg2 listOwnerScreenName:(id)arg3 parameters:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)callGenericResponseBlock:(CDUnknownBlockType)arg1 withObject:(id)arg2 error:(id)arg3;
- (id)sendTwitterRequest:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)sendTwitterRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performHTTPMethod:(id)arg1 onAPIPath:(id)arg2 expectedType:(Class)arg3 parameters:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)postToAPIPath:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadJSONArrayFromAPIPath:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadJSONDictionaryFromAPIPath:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)URLRequestWithMethod:(id)arg1 withURL:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (_Bool)isLoggedIn;
- (id)URLRequestWithMethod:(id)arg1 URL:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)mediaIDFromResponseData:(id)arg1 error:(id *)arg2;
- (id)multipartFormDocumentForMedia:(id)arg1 contentType:(id)arg2;
- (id)partialURLRequestForUploadingMediaWithContentType:(id)arg1;
- (void)uploadMedia:(id)arg1 contentType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestEmailForCurrentUser:(CDUnknownBlockType)arg1;
- (void)postToAPIPath:(id)arg1 withTweetID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unretweetTweetWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retweetTweetWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unlikeTweetWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)likeTweetWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifySessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)loadTweetsForListSlug:(id)arg1 listOwnerScreenName:(id)arg2 parameters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)loadTweetsForListID:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadTweetsForUserTimeline:(id)arg1 userID:(id)arg2 parameters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)loadTweetsForSearchQuery:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadTweetsForCollectionID:(id)arg1 parameters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadTweetsWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadTweetWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadUserWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSessionStore:(id)arg1 userID:(id)arg2;
- (id)initWithUserID:(id)arg1;
- (id)init;

@end

@interface TWTRUser : NSObject <NSCoding, NSCopying, TWTRJSONConvertible>
{
    _Bool _isVerified;
    _Bool _isProtected;
    NSString *_userID;
    NSString *_name;
    NSString *_screenName;
    NSString *_profileImageURL;
    NSDictionary *_validatedDictionary;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, copy, nonatomic) NSString *profileImageURL; // @synthesize profileImageURL=_profileImageURL;
@property(readonly, nonatomic) _Bool isProtected; // @synthesize isProtected=_isProtected;
@property(readonly, nonatomic) _Bool isVerified; // @synthesize isVerified=_isVerified;
@property(readonly, copy, nonatomic) NSString *screenName; // @synthesize screenName=_screenName;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSURL *profileURL;
@property(readonly, copy, nonatomic) NSString *profileImageLargeURL;
@property(readonly, copy, nonatomic) NSString *profileImageMiniURL;
@property(readonly, copy, nonatomic) NSString *formattedScreenName;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly) Class superclass;

@end

@interface TWTRWebAuthenticationViewController : UIViewController
{
    CDUnknownBlockType _completion;
    NSString *_authenticationToken;
    TwitterUserAPIClient *_APIClient;
    id <TWTRAPIServiceConfig> _APIServiceConfig;
    NSURL *_authURL;
    TWTRLoginUtils *_loginUtils;
}

@property(readonly, nonatomic) TWTRLoginUtils *loginUtils; // @synthesize loginUtils=_loginUtils;
@property(readonly, nonatomic) NSURL *authURL; // @synthesize authURL=_authURL;
@property(readonly, nonatomic) id <TWTRAPIServiceConfig> APIServiceConfig; // @synthesize APIServiceConfig=_APIServiceConfig;
@property(readonly, nonatomic) TwitterUserAPIClient *APIClient; // @synthesize APIClient=_APIClient;
@property(readonly, copy, nonatomic) NSString *authenticationToken; // @synthesize authenticationToken=_authenticationToken;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;
- (void)failWithError:(id)arg1;
- (void)succeedWithSession:(id)arg1;
- (void)handleCancelButton;
- (void)requestAccessTokenWithVerifier:(id)arg1;
- (void)handleAuthResponseWithURL:(id)arg1;
- (void)handleTwitterRedirectRequest:(id)arg1;
- (void)embedViewController:(id)arg1;
- (id)webViewController;
- (id)safariViewController;
- (id)webController;
- (void)viewDidLoad;
- (id)initWithAuthenticationToken:(id)arg1 authConfig:(id)arg2 APIServiceConfig:(id)arg3 forceLogin:(_Bool)arg4;

@end

@interface TWTRStringUtil : NSObject
{
}

+ (id)previewTextFromFullText:(id)arg1 previewLength:(long long)arg2;
+ (id)displayStringFromTimeInterval:(double)arg1;
+ (long long)hexIntegerValueWithString:(id)arg1;
+ (_Bool)stringContainsOnlyHexNumbers:(id)arg1;
+ (_Bool)stringContainsOnlyNumbers:(id)arg1;
+ (id)stringByReplacingLastOccurrenceOfString:(id)arg1 withString:(id)arg2 inStringIgnoringExtension:(id)arg3;

@end

@interface TWTRTweetContentViewLayoutCompact : NSObject <TWTRTweetContentViewLayout>
{
    TWTRTweetViewMetrics *_metrics;
    NSLayoutConstraint *_imageTopConstraint;
}

@property(readonly, nonatomic) NSLayoutConstraint *imageTopConstraint; // @synthesize imageTopConstraint=_imageTopConstraint;
@property(readonly, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
- (void).cxx_destruct;
- (void)setShowingMedia:(_Bool)arg1;
- (void)applyConstraintsForContentView:(id)arg1;
- (_Bool)allowsMediaCornerRounding;
- (id)fontForTweetLabel;
- (unsigned long long)tweetViewStyle;
- (id)initWithMetrics:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetContentViewLayoutRegular : NSObject <TWTRTweetContentViewLayout>
{
    TWTRTweetViewMetrics *_metrics;
    NSLayoutConstraint *_imageBottomConstraint;
}

@property(readonly, nonatomic) NSLayoutConstraint *imageBottomConstraint; // @synthesize imageBottomConstraint=_imageBottomConstraint;
@property(readonly, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
- (void).cxx_destruct;
- (void)setShowingMedia:(_Bool)arg1;
- (void)applyConstraintsForContentView:(id)arg1;
- (_Bool)allowsMediaCornerRounding;
- (id)fontForTweetLabel;
- (unsigned long long)tweetViewStyle;
- (id)initWithMetrics:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetContentViewLayoutQuote : NSObject <TWTRTweetContentViewLayout>
{
    TWTRTweetViewMetrics *_metrics;
}

@property(readonly, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
- (void).cxx_destruct;
- (void)setShowingMedia:(_Bool)arg1;
- (void)applyConstraintsForContentView:(id)arg1;
- (_Bool)allowsMediaCornerRounding;
- (id)fontForTweetLabel;
- (unsigned long long)tweetViewStyle;
- (id)initWithMetrics:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetContentViewLayoutFactory : NSObject
{
}

+ (id)quoteTweetViewLayoutWithMetrics:(id)arg1;
+ (id)regularTweetViewLayoutWithMetrics:(id)arg1;
+ (id)compactTweetViewLayoutWithMetrics:(id)arg1;

@end

@interface TWTRTweetMediaEntity : TWTRTweetEntity <TWTRJSONConvertible>
{
    NSString *_mediaUrl;
    NSString *_displayURL;
    NSString *_tweetTextURL;
    NSDictionary *_sizes;
    NSString *_mediaID;
    unsigned long long _mediaType;
    TWTRVideoMetaData *_videoMetaData;
}

@property(readonly, nonatomic) TWTRVideoMetaData *videoMetaData; // @synthesize videoMetaData=_videoMetaData;
@property(readonly, nonatomic) unsigned long long mediaType; // @synthesize mediaType=_mediaType;
@property(readonly, copy, nonatomic) NSString *mediaID; // @synthesize mediaID=_mediaID;
@property(readonly, copy, nonatomic) NSDictionary *sizes; // @synthesize sizes=_sizes;
@property(readonly, copy, nonatomic) NSString *tweetTextURL; // @synthesize tweetTextURL=_tweetTextURL;
@property(readonly, copy, nonatomic) NSString *displayURL; // @synthesize displayURL=_displayURL;
@property(readonly, copy, nonatomic) NSString *mediaUrl; // @synthesize mediaUrl=_mediaUrl;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToMediaEntity:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromDict:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRShareButton : UIButton <TWTRScribableView>
{
    unsigned long long _scribeViewName;
    UIViewController *_presenterViewController;
    UIPopoverController *_popover;
    TWTRTweet *_tweet;
    long long _shareButtonSize;
}

@property(nonatomic) long long shareButtonSize; // @synthesize shareButtonSize=_shareButtonSize;
@property(retain, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
@property(retain, nonatomic) UIPopoverController *popover; // @synthesize popover=_popover;
@property(nonatomic) __weak UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
@property(nonatomic) unsigned long long scribeViewName; // @synthesize scribeViewName=_scribeViewName;
- (void).cxx_destruct;
- (_Bool)shouldPresentShareSheetUsingPopover;
- (void)presentActivityViewController:(id)arg1;
- (void)shareButtonTapped;
- (void)configureWithTweet:(id)arg1;
- (void)shareButtonCommonInit;
- (id)initWithFrame:(struct CGRect)arg1 shareButtonSize:(long long)arg2;
- (id)initWithShareButtonSize:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRComposerViewController : UIViewController <UIViewControllerTransitioningDelegate, UIScrollViewDelegate>
{
    _Bool _textFieldHasBecomeFirstResponder;
    id <TWTRComposerViewControllerDelegate> _delegate;
    TWTRComposerTheme *_theme;
    NSArray *_hashtags;
    TWTRComposerPresenter *_presenter;
    TWTRAPIClient *_APIClient;
    TWTRUser *_user;
    TWTRCardConfiguration *_cardConfig;
    TWTRComposerTopBar *_topBar;
    TWTRComposerActionBar *_actionBar;
    TWTRComposerContentView *_contentView;
    UIView *_bottomSeparatorLine;
    UIView *_topSeparatorLine;
    NSLayoutConstraint *_topBarHeightConstraint;
    UITraitCollection *_targetTraitCollection;
}

@property(retain, nonatomic) UITraitCollection *targetTraitCollection; // @synthesize targetTraitCollection=_targetTraitCollection;
@property(readonly, nonatomic) NSLayoutConstraint *topBarHeightConstraint; // @synthesize topBarHeightConstraint=_topBarHeightConstraint;
@property(readonly, nonatomic) UIView *topSeparatorLine; // @synthesize topSeparatorLine=_topSeparatorLine;
@property(readonly, nonatomic) UIView *bottomSeparatorLine; // @synthesize bottomSeparatorLine=_bottomSeparatorLine;
@property(readonly, nonatomic) TWTRComposerContentView *contentView; // @synthesize contentView=_contentView;
@property(readonly, nonatomic) TWTRComposerActionBar *actionBar; // @synthesize actionBar=_actionBar;
@property(readonly, nonatomic) TWTRComposerTopBar *topBar; // @synthesize topBar=_topBar;
@property(readonly, nonatomic) TWTRCardConfiguration *cardConfig; // @synthesize cardConfig=_cardConfig;
@property(retain, nonatomic) TWTRUser *user; // @synthesize user=_user;
@property(readonly, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
@property(retain, nonatomic) TWTRComposerPresenter *presenter; // @synthesize presenter=_presenter;
@property(copy, nonatomic) NSArray *hashtags; // @synthesize hashtags=_hashtags;
@property(retain, nonatomic) TWTRComposerTheme *theme; // @synthesize theme=_theme;
@property(nonatomic) __weak id <TWTRComposerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)notifyDelegateTweetOperationFinishedWithTweet:(id)arg1 error:(id)arg2;
- (void)sendTweet;
- (void)handleCloseButton;
- (void)fetchUserObject:(CDUnknownBlockType)arg1;
- (void)updateProfileImageViewWithUser:(id)arg1;
- (void)updateProfileImageView;
- (void)updateCharacterCountLabelColor:(long long)arg1;
- (void)updateCharacterCountLabelWithRemainingCount:(long long)arg1;
- (id)makeSeparatorLine;
- (id)makeComposerContentView;
- (id)makeActionBar;
- (id)makeTopBar;
- (void)updateThemedViews;
- (void)setupSubviews;
- (_Bool)isCompactHorizontalSizeClass;
- (_Bool)shouldShowCompressedBarsForSize:(struct CGSize)arg1 interfaceOrientation:(long long)arg2;
- (double)topBarHeightForSize:(struct CGSize)arg1 interfaceOrientation:(long long)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)populateTextfieldWithHashtags;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithUserID:(id)arg1 cardConfiguration:(id)arg2;
- (id)initWithUserID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetDetailFrameViewController : UINavigationController
{
}

- (_Bool)accessibilityPerformEscape;
- (void)dismissDetailViewController;
- (id)initWithTweetDetailViewController:(id)arg1;

@end

@interface TWTRTweetViewMetrics : NSObject
{
    double _actionsHeight;
    double _actionsBottomMargin;
    double _defaultMargin;
    double _defaultWidth;
    double _fullnameMarginBottom;
    double _imageMarginBottom;
    double _imageMarginTop;
    double _marginBottom;
    double _marginTop;
    double _profileImageSize;
    double _profileMarginLeft;
    double _profileMarginRight;
    double _profileMarginTop;
    double _regularMargin;
    double _retweetMargin;
}

@property(readonly, nonatomic) double retweetMargin; // @synthesize retweetMargin=_retweetMargin;
@property(readonly, nonatomic) double regularMargin; // @synthesize regularMargin=_regularMargin;
@property(readonly, nonatomic) double profileMarginTop; // @synthesize profileMarginTop=_profileMarginTop;
@property(readonly, nonatomic) double profileMarginRight; // @synthesize profileMarginRight=_profileMarginRight;
@property(readonly, nonatomic) double profileMarginLeft; // @synthesize profileMarginLeft=_profileMarginLeft;
@property(readonly, nonatomic) double profileImageSize; // @synthesize profileImageSize=_profileImageSize;
@property(readonly, nonatomic) double marginTop; // @synthesize marginTop=_marginTop;
@property(readonly, nonatomic) double marginBottom; // @synthesize marginBottom=_marginBottom;
@property(readonly, nonatomic) double imageMarginTop; // @synthesize imageMarginTop=_imageMarginTop;
@property(readonly, nonatomic) double imageMarginBottom; // @synthesize imageMarginBottom=_imageMarginBottom;
@property(readonly, nonatomic) double fullnameMarginBottom; // @synthesize fullnameMarginBottom=_fullnameMarginBottom;
@property(readonly, nonatomic) double defaultWidth; // @synthesize defaultWidth=_defaultWidth;
@property(readonly, nonatomic) double defaultMargin; // @synthesize defaultMargin=_defaultMargin;
@property(readonly, nonatomic) double actionsBottomMargin; // @synthesize actionsBottomMargin=_actionsBottomMargin;
@property(readonly, nonatomic) double actionsHeight; // @synthesize actionsHeight=_actionsHeight;
@property(readonly, nonatomic) NSDictionary *metricsDictionary;
- (id)init;

@end

@interface TWTRNSCodingUtil : NSObject
{
}

+ (void)encodeLongLong:(long long)arg1 forKey:(id)arg2 encoder:(id)arg3;
+ (long long)decodeLongLongForKey:(id)arg1 decoder:(id)arg2;

@end

@interface TWTRVideoDeeplinkConfiguration : NSObject
{
    NSString *_displayText;
    NSURL *_targetURL;
    NSURL *_metricsURL;
}

@property(readonly, nonatomic) NSURL *metricsURL; // @synthesize metricsURL=_metricsURL;
@property(readonly, nonatomic) NSURL *targetURL; // @synthesize targetURL=_targetURL;
@property(readonly, copy, nonatomic) NSString *displayText; // @synthesize displayText=_displayText;
- (void).cxx_destruct;
- (_Bool)isEqualToDeeplinkConfiguration:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDisplayText:(id)arg1 targetURL:(id)arg2 metricsURL:(id)arg3;

@end

@interface TWTRTweetUserMentionEntity : TWTRTweetEntity <NSCoding, TWTRJSONConvertible>
{
    NSString *_userID;
    NSString *_name;
    NSString *_screenName;
}

@property(readonly, copy, nonatomic) NSString *screenName; // @synthesize screenName=_screenName;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
- (id)accessibilityValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTweetLabel : TWTRAttributedLabel
{
    UIColor *_linkColor;
    long long _entityDisplayTypes;
    NSArray *_entityRanges;
}

@property(readonly, nonatomic) NSArray *entityRanges; // @synthesize entityRanges=_entityRanges;
@property(nonatomic) long long entityDisplayTypes; // @synthesize entityDisplayTypes=_entityDisplayTypes;
@property(retain, nonatomic) UIColor *linkColor; // @synthesize linkColor=_linkColor;
- (void).cxx_destruct;
- (_Bool)entityExistsAtPoint:(struct CGPoint)arg1;
- (void)updateTextAlignment:(id)arg1;
- (void)setTextFromTweet:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface TWTRImageLoaderNilCache : NSObject <TWTRImageLoaderCache>
{
}

- (void)removeAllImages;
- (id)removeImageForKey:(id)arg1;
- (id)fetchImageForKey:(id)arg1;
- (void)setImageData:(id)arg1 forKey:(id)arg2;
- (void)setImage:(id)arg1 forKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImageLoaderDiskCache : NSObject <TWTRImageLoaderCache>
{
    TWTRPersistentStore *_persistentStore;
}

@property(readonly, nonatomic) TWTRPersistentStore *persistentStore; // @synthesize persistentStore=_persistentStore;
- (void).cxx_destruct;
- (void)removeAllImages;
- (id)removeImageForKey:(id)arg1;
- (id)fetchImageForKey:(id)arg1;
- (void)setImageData:(id)arg1 forKey:(id)arg2;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (id)initWithPath:(id)arg1 maxSize:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRProfileView : UIImageView
{
    TWTRTweetViewMetrics *_metrics;
}

@property(retain, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
- (void).cxx_destruct;
- (id)init;

@end

@interface TWTRRetweetView : UIView
{
    UILabel *_textLabel;
    UIImageView *_imageView;
}

@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)setupConstraints;
- (id)init;

@end

@interface TWTRMediaPresentationController : UIPresentationController
{
    UIView *_dimmingView;
}

@property(retain, nonatomic) UIView *dimmingView; // @synthesize dimmingView=_dimmingView;
- (void).cxx_destruct;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

@end

@interface TWTRMediaAnimatedTransitioningPresenter : NSObject <UIViewControllerAnimatedTransitioning>
{
    UIView *_transitionView;
    CDUnknownBlockType _completionBlock;
    struct CGRect _initialTransitionFrame;
    struct CGRect _targetFrame;
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) struct CGRect targetFrame; // @synthesize targetFrame=_targetFrame;
@property(nonatomic) struct CGRect initialTransitionFrame; // @synthesize initialTransitionFrame=_initialTransitionFrame;
@property(retain, nonatomic) UIView *transitionView; // @synthesize transitionView=_transitionView;
- (void).cxx_destruct;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)initWithTransitioningView:(id)arg1 initialFrame:(struct CGRect)arg2 targetFrame:(struct CGRect)arg3 completion:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTableViewProxy : NSProxy
{
    _Bool _enabled;
    _Bool _isEnabled;
    UITableView *_tableView;
    NSArray *_selectorsToProxy;
}

@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, copy, nonatomic) NSArray *selectorsToProxy; // @synthesize selectorsToProxy=_selectorsToProxy;
@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)initWithTableView:(id)arg1 selectorsToProxy:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;

@end

@interface TWTRJSONSerialization : NSObject
{
}

+ (id)collectionFromData:(id)arg1 error:(id *)arg2 validationHandler:(CDUnknownBlockType)arg3;
+ (id)dictionaryFromData:(id)arg1 error:(id *)arg2;
+ (id)arrayFromData:(id)arg1 error:(id *)arg2;

@end

@interface TWTRSystemAccountSerializer : NSObject
{
}

+ (void)saveToSystemAccountCredentials:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface TWTRMoPubAdConfiguration : NSObject
{
    NSString *_adUnitID;
    NSString *_keywords;
    MPNativeAdRequestTargeting *_adRequestTargeting;
    MPStaticNativeAdRendererSettings *_adRendererSettings;
}

+ (void)initialize;
@property(readonly, nonatomic) MPStaticNativeAdRendererSettings *adRendererSettings; // @synthesize adRendererSettings=_adRendererSettings;
@property(readonly, nonatomic) MPNativeAdRequestTargeting *adRequestTargeting; // @synthesize adRequestTargeting=_adRequestTargeting;
@property(readonly, copy, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (_Bool)isEqualToConfig:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)keywordsWithAttribution;
- (id)adRendererConfiguration;
- (void)setupMoPubClassesIfPossible;
- (id)initWithAdUnitID:(id)arg1 keywords:(id)arg2;

@end

@interface TWTRTweetTableViewCell : UITableViewCell
{
    TWTRTweetView *_tweetView;
}

+ (double)heightForTweet:(id)arg1 style:(unsigned long long)arg2 width:(double)arg3 showingActions:(_Bool)arg4;
@property(readonly, nonatomic) TWTRTweetView *tweetView; // @synthesize tweetView=_tweetView;
- (void).cxx_destruct;
- (id)accessibilityLabel;
- (void)configureWithTweet:(id)arg1;
- (void)commonInit;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRMultiImageViewController : UIPageViewController <UIPageViewControllerDataSource, UIPageViewControllerDelegate, TWTRMediaContainerPresentable>
{
    NSArray *_contexts;
    long long _initialImageViewControllerIndex;
    NSArray *_imageViewControllers;
}

+ (id)imageViewControllerForContext:(id)arg1;
+ (id)imageViewControllersForContexts:(id)arg1;
@property(readonly, nonatomic) NSArray *imageViewControllers; // @synthesize imageViewControllers=_imageViewControllers;
@property(readonly, nonatomic) long long initialImageViewControllerIndex; // @synthesize initialImageViewControllerIndex=_initialImageViewControllerIndex;
@property(readonly, copy, nonatomic) NSArray *contexts; // @synthesize contexts=_contexts;
- (void).cxx_destruct;
- (void)transitionDidComplete;
- (void)transitionWillBegin;
- (struct CGRect)transitionImageTargetFrame;
- (id)transitionImage;
- (void)didDismissInMediaContainer;
- (void)willShowInMediaContainer;
- (id)initialImageViewController;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (long long)indexOfViewController:(id)arg1;
- (void)viewDidLoad;
- (id)initWithImagePresentationContexts:(id)arg1 initialContextIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImagePresentationContext : NSObject
{
    UIImage *_image;
    TWTRTweetMediaEntity *_mediaEntity;
    NSString *_parentTweetID;
}

+ (id)contextWithImage:(id)arg1 mediaEntity:(id)arg2 parentTweetID:(id)arg3;
@property(readonly, copy, nonatomic) NSString *parentTweetID; // @synthesize parentTweetID=_parentTweetID;
@property(readonly, nonatomic) TWTRTweetMediaEntity *mediaEntity; // @synthesize mediaEntity=_mediaEntity;
@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)initWithImage:(id)arg1 mediaEntity:(id)arg2 parentTweetID:(id)arg3;

@end

@interface TWTRLoginUtils : NSObject
{
    NSString *_twitterKitURLScheme;
}

@property(copy, nonatomic) NSString *twitterKitURLScheme; // @synthesize twitterKitURLScheme=_twitterKitURLScheme;
- (void).cxx_destruct;
- (id)appSpecificURLScheme;
- (_Bool)isTwitterKitURLScheme:(id)arg1;
- (_Bool)shouldUseSafariViewController;
- (_Bool)isTwitterKitRedirectURL:(id)arg1;
- (id)authRedirectScheme;
- (id)initWithConsumerKey:(id)arg1;

@end

@interface TWTRHTMLEntityUtil : NSObject
{
}

+ (id)unescapedHTMLEntitiesStringWithString:(id)arg1;

@end

@interface TWTRMediaContainerViewController : UIViewController <UIViewControllerTransitioningDelegate>
{
    _Bool _hideStatusBar;
    UIViewController<TWTRMediaContainerPresentable> *_mediaViewController;
    UINavigationBar *_topBarContainer;
    UIButton *_closeButton;
    struct CGRect _initialViewPosition;
}

@property(readonly, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(readonly, nonatomic) UINavigationBar *topBarContainer; // @synthesize topBarContainer=_topBarContainer;
@property(nonatomic) _Bool hideStatusBar; // @synthesize hideStatusBar=_hideStatusBar;
@property(nonatomic) struct CGRect initialViewPosition; // @synthesize initialViewPosition=_initialViewPosition;
@property(readonly, nonatomic) UIViewController<TWTRMediaContainerPresentable> *mediaViewController; // @synthesize mediaViewController=_mediaViewController;
- (void).cxx_destruct;
- (id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)showFromView:(id)arg1 inViewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleCloseButton;
- (id)makeCloseButton;
- (void)setChromeVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)prepareTopBar;
- (void)embedMediaViewController;
- (void)viewDidLoad;
- (_Bool)prefersStatusBarHidden;
- (id)initWithMediaViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImages : NSObject
{
}

+ (id)resourcesImageNamed:(id)arg1;
+ (id)resourcePathForImageName:(id)arg1;
+ (id)buttonImageWithCornerRadius:(double)arg1 backgroundColor:(id)arg2 borderColor:(id)arg3;
+ (id)buttonImageWithCornerRadius:(double)arg1 backgroundColor:(id)arg2;
+ (id)closeButtonTemplateImage;
+ (id)vineBadgeImage;
+ (id)mediaScrubberThumb;
+ (id)mediaReplayTemplateImage;
+ (id)mediaPlayTemplateImage;
+ (id)mediaPauseTemplateImage;
+ (id)playIcon;
+ (id)verifiedIcon;
+ (id)darkRetweet;
+ (id)lightRetweet;
+ (id)retweetImageForBackgroundColor:(id)arg1;
+ (id)shareImageLarge;
+ (id)shareImage;
+ (id)retweetImage;
+ (id)likeImageSheetLarge;
+ (id)likeOffLarge;
+ (id)likeOnLarge;
+ (id)likeImageSheet;
+ (id)likeOff;
+ (id)likeOn;

@end

@interface TWTRLikeButton : UIButton <TWTRScribableView>
{
    _Bool _isLiked;
    unsigned long long _scribeViewName;
    UIViewController *_presenterViewController;
    UIImageView *_localImageView;
    TWTRTweet *_tweet;
    TWTRAPIClient *_apiClient;
    long long _likeButtonSize;
}

@property(nonatomic) long long likeButtonSize; // @synthesize likeButtonSize=_likeButtonSize;
@property(retain, nonatomic) TWTRAPIClient *apiClient; // @synthesize apiClient=_apiClient;
@property(retain, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
@property(retain, nonatomic) UIImageView *localImageView; // @synthesize localImageView=_localImageView;
@property(nonatomic) _Bool isLiked; // @synthesize isLiked=_isLiked;
@property(nonatomic) __weak UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
@property(nonatomic) unsigned long long scribeViewName; // @synthesize scribeViewName=_scribeViewName;
- (void).cxx_destruct;
- (void)createImageViewIfNil;
- (void)updateToLikedStateWithAnimation;
- (void)updateToUnlikedState;
- (void)updateToLikedState;
- (void)APIClientFromTwitterWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isAlreadyLikedError:(id)arg1;
- (void)likeTapped;
- (id)imageView;
- (void)updateImageToLiked:(_Bool)arg1 animated:(_Bool)arg2;
- (void)configureWithTweet:(id)arg1;
- (void)likeButtonCommonInit;
- (id)initWithFrame:(struct CGRect)arg1 likeButtonSize:(long long)arg2;
- (id)initWithLikeButtonSize:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRServerDateValueTransfomer : NSValueTransformer
{
}

+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface TWTRMyRetweetIDValueTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRNSURLValueTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRAspectRatioArrayTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRJSONConvertibleTransformer : NSValueTransformer
{
    Class _targetClass;
}

+ (id)transformerWithTargetClass:(Class)arg1;
@property(retain, nonatomic) Class targetClass; // @synthesize targetClass=_targetClass;
- (void).cxx_destruct;
- (id)transformedArray:(id)arg1;
- (id)transformedValue:(id)arg1;
- (id)initWithTargetClass:(Class)arg1;

@end

@interface TWTRCardEntityJSONValueTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRCookieStorageUtil : NSObject
{
}

+ (void)clearCookiesWithDomainSuffix:(id)arg1;
+ (id)cookiesWithDomainSuffix:(id)arg1;

@end

@interface TWTRTweetCache : NSObject <TWTRTweetCache>
{
    TWTRPersistentStore *_store;
}

@property(retain, nonatomic) TWTRPersistentStore *store; // @synthesize store=_store;
- (void).cxx_destruct;
- (_Bool)removeTweetWithID:(id)arg1 perspective:(id)arg2;
- (_Bool)storeTweet:(id)arg1 perspective:(id)arg2;
- (id)tweetWithID:(id)arg1 perspective:(id)arg2;
- (id)initWithPath:(id)arg1 maxSize:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRButtonAnimator : NSObject
{
}

+ (void)_performImageSequenceOnButton:(id)arg1 forImageSequenceConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)_abortInFlightAnimation:(id)arg1;
+ (_Bool)performAnimationType:(unsigned long long)arg1 onButton:(id)arg2 completion:(CDUnknownBlockType)arg3;

@end

@interface TWTRRuntime : NSObject
{
}

+ (_Bool)isRunningUnitTests;

@end

@interface TWTRComposerActionBar : TWTRComposerThemedView
{
    UIButton *_tweetButton;
    UILabel *_countLabel;
}

@property(readonly, nonatomic) UILabel *countLabel; // @synthesize countLabel=_countLabel;
@property(readonly, nonatomic) UIButton *tweetButton; // @synthesize tweetButton=_tweetButton;
- (void).cxx_destruct;
- (void)updateThemedViews;
- (id)tweetButtonTitleText;
- (id)makeCountLabel;
- (id)makeTweetButton;
- (void)applyConstraintsToSubviews;
- (void)createActionBarSubviews;
- (void)actionBarCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TWTRSubscription : NSObject
{
    id <TWTRSubscriber> _subscriber;
    NSString *_className;
    NSString *_key;
}

@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(readonly, copy, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, nonatomic) __weak id <TWTRSubscriber> subscriber; // @synthesize subscriber=_subscriber;
- (void).cxx_destruct;
- (id)initWithSubscriber:(id)arg1 className:(id)arg2 key:(id)arg3;

@end

@interface TWTRTweet : NSObject <TWTRVersionedCacheable, NSCoding, TWTRJSONConvertible>
{
    _Bool _isLiked;
    _Bool _isRetweeted;
    NSURL *_permalink;
    NSString *_tweetID;
    NSDate *_createdAt;
    NSString *_text;
    TWTRUser *_author;
    NSString *_perspectivalUserID;
    long long _likeCount;
    long long _retweetCount;
    NSString *_languageCode;
    NSString *_inReplyToTweetID;
    NSString *_inReplyToUserID;
    NSString *_inReplyToScreenName;
    NSString *_retweetID;
    TWTRTweet *_retweetedTweet;
    TWTRTweet *_quotedTweet;
    NSDictionary *_validatedDictionary;
    TWTRTweetRepository *_tweetRepo;
    NSArray *_hashtags;
    NSArray *_cashtags;
    NSArray *_media;
    NSArray *_urls;
    NSArray *_userMentions;
    TWTRCardEntity *_cardEntity;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
+ (id)versionedCacheKeyWithID:(id)arg1 perspective:(id)arg2;
+ (long long)version;
+ (id)tweetsWithJSONArray:(id)arg1;
@property(readonly, nonatomic) TWTRCardEntity *cardEntity; // @synthesize cardEntity=_cardEntity;
@property(readonly, copy, nonatomic) NSArray *userMentions; // @synthesize userMentions=_userMentions;
@property(readonly, copy, nonatomic) NSArray *urls; // @synthesize urls=_urls;
@property(readonly, copy, nonatomic) NSArray *media; // @synthesize media=_media;
@property(readonly, copy, nonatomic) NSArray *cashtags; // @synthesize cashtags=_cashtags;
@property(readonly, copy, nonatomic) NSArray *hashtags; // @synthesize hashtags=_hashtags;
@property(readonly, nonatomic) TWTRTweetRepository *tweetRepo; // @synthesize tweetRepo=_tweetRepo;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, nonatomic) TWTRTweet *quotedTweet; // @synthesize quotedTweet=_quotedTweet;
@property(readonly, nonatomic) TWTRTweet *retweetedTweet; // @synthesize retweetedTweet=_retweetedTweet;
@property(readonly, copy, nonatomic) NSString *retweetID; // @synthesize retweetID=_retweetID;
@property(readonly, nonatomic) _Bool isRetweeted; // @synthesize isRetweeted=_isRetweeted;
@property(readonly, nonatomic) _Bool isLiked; // @synthesize isLiked=_isLiked;
@property(readonly, copy, nonatomic) NSString *inReplyToScreenName; // @synthesize inReplyToScreenName=_inReplyToScreenName;
@property(readonly, copy, nonatomic) NSString *inReplyToUserID; // @synthesize inReplyToUserID=_inReplyToUserID;
@property(readonly, copy, nonatomic) NSString *inReplyToTweetID; // @synthesize inReplyToTweetID=_inReplyToTweetID;
@property(readonly, copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(readonly, nonatomic) long long retweetCount; // @synthesize retweetCount=_retweetCount;
@property(readonly, nonatomic) long long likeCount; // @synthesize likeCount=_likeCount;
@property(readonly, nonatomic) NSString *perspectivalUserID; // @synthesize perspectivalUserID=_perspectivalUserID;
@property(readonly, nonatomic) TWTRUser *author; // @synthesize author=_author;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, copy, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(readonly, copy, nonatomic) NSString *tweetID; // @synthesize tweetID=_tweetID;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy, nonatomic) NSURL *permalink; // @synthesize permalink=_permalink;
@property(readonly, nonatomic) TWTRVideoMetaData *videoMetaData;
- (_Bool)hasVineCard;
- (_Bool)hasPlayableVideo;
- (_Bool)hasMedia;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) _Bool isQuoteTweet;
@property(readonly, nonatomic) _Bool isRetweet;
- (id)tweetTextFromDictionary:(id)arg1;
- (void)setPropertiesFromValidatedDictiontary:(id)arg1;
- (id)tweetWithPerspectivalUserID:(id)arg1;
- (id)tweetWithLikeToggled;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly) Class superclass;

@end

@interface TWTRMoPubVersionChecker : NSObject
{
}

+ (long long)integerVersion;
+ (_Bool)isValidVersion;

@end

@interface TWTRWebViewController : UIViewController <UIWebViewDelegate>
{
    _Bool _showCancelButton;
    NSURLRequest *_request;
    CDUnknownBlockType _shouldStartLoadWithRequest;
    CDUnknownBlockType _errorHandler;
    UIWebView *_webView;
    CDUnknownBlockType _cancelCompletion;
}

@property(copy, nonatomic) CDUnknownBlockType cancelCompletion; // @synthesize cancelCompletion=_cancelCompletion;
@property(nonatomic) _Bool showCancelButton; // @synthesize showCancelButton=_showCancelButton;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType shouldStartLoadWithRequest; // @synthesize shouldStartLoadWithRequest=_shouldStartLoadWithRequest;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)enableCancelButtonWithCancelCompletion:(CDUnknownBlockType)arg1;
- (void)cancel;
- (_Bool)whitelistedDomain:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadView;
- (void)load;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRURLUtility : NSObject
{
}

+ (id)deepLinkURLForTweet:(id)arg1;
+ (id)permalinkURLForTweet:(id)arg1;

@end

@interface TWTRMoPubNativeAdContainerView : UIView <MPNativeAdRendering, UIAppearanceContainer>
{
    _Bool _doneInitializing;
    unsigned long long _theme;
    UIColor *_backgroundColor;
    UIColor *_adBackgroundColor;
    UIColor *_primaryTextColor;
    UIColor *_buttonBackgroundColor;
    TWTRMoPubNativeAdView *_adView;
    TWTRMoPubAdDisclaimerView *_disclaimerView;
}

+ (id)callToActionTextColorFromBackgroundColor:(id)arg1;
+ (id)borderColorForTheme:(unsigned long long)arg1;
+ (id)defaultButtonBackgroundColor;
+ (id)primaryTextColorForTheme:(unsigned long long)arg1;
+ (id)adBackgroundColorForTheme:(unsigned long long)arg1;
+ (id)backgroundColorForTheme:(unsigned long long)arg1;
+ (void)initialize;
@property(nonatomic) _Bool doneInitializing; // @synthesize doneInitializing=_doneInitializing;
@property(readonly, nonatomic) TWTRMoPubAdDisclaimerView *disclaimerView; // @synthesize disclaimerView=_disclaimerView;
@property(readonly, nonatomic) TWTRMoPubNativeAdView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) UIColor *buttonBackgroundColor; // @synthesize buttonBackgroundColor=_buttonBackgroundColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(retain, nonatomic) UIColor *adBackgroundColor; // @synthesize adBackgroundColor=_adBackgroundColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) unsigned long long theme; // @synthesize theme=_theme;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setNeedsUpdateComputedColors;
- (id)nativePrivacyInformationIconImageView;
- (id)nativeMainImageView;
- (id)nativeIconImageView;
- (id)nativeCallToActionTextLabel;
- (id)nativeTitleTextLabel;
- (id)nativeMainTextLabel;
- (void)setUpAccessibility;
- (void)prepareLayout;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRPersistentStoreObject : NSObject
{
    NSString *_key;
    unsigned long long _size;
    NSDate *_accessDate;
}

@property(retain, nonatomic) NSDate *accessDate; // @synthesize accessDate=_accessDate;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;

@end

@interface TWTRPersistentStore : NSObject
{
    unsigned long long _totalSize;
    NSString *_path;
    NSMutableArray *_items;
    unsigned long long _maxSize;
}

@property(nonatomic) unsigned long long maxSize; // @synthesize maxSize=_maxSize;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(nonatomic) unsigned long long totalSize; // @synthesize totalSize=_totalSize;
- (void).cxx_destruct;
- (unsigned long long)indexOfObjectForKey:(id)arg1;
- (void)pruneStoredObjects;
- (_Bool)isValidPath:(id)arg1;
- (_Bool)isValidData:(id)arg1;
- (_Bool)isValidValue:(id)arg1;
- (id)pathForKey:(id)arg1;
- (void)parseStoredObjects;
- (_Bool)createStoreStructure;
- (void)removeAllObjects;
- (_Bool)removeObjectForKey:(id)arg1;
- (void)cleanCorruptItemAtPath:(id)arg1 withIndex:(unsigned long long)arg2 usingFileManager:(id)arg3;
- (id)objectForKey:(id)arg1;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (id)initWithPath:(id)arg1 maxSize:(unsigned long long)arg2;

@end

@interface TWTRAssetURLSessionConfig : NSObject
{
}

+ (id)defaultAdditionalHeaders;
+ (id)defaultConfiguration;

@end

@interface TWTRTweetDetailViewController : UIViewController <TWTRAttributedLabelDelegate, TWTRProfileHeaderViewDelegate>
{
    TWTRTweet *_tweet;
    id <TWTRTweetDetailViewControllerDelegate> _delegate;
    UIScrollView *_scrollView;
    UIColor *_backgroundColor;
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
    UIColor *_linkTextColor;
    double _actionBarInset;
    TWTRTweetLabel *_tweetLabel;
    TWTRProfileHeaderView *_headerView;
    TWTRTweetDetailViewActionBar *_actionBar;
    TWTRTweetMediaView *_mediaView;
    UIView *_attachmentContainer;
    TWTRTweetContentView *_quoteTweetView;
    NSLayoutConstraint *_actionBarBottomConstraint;
}

@property(readonly, nonatomic) NSLayoutConstraint *actionBarBottomConstraint; // @synthesize actionBarBottomConstraint=_actionBarBottomConstraint;
@property(readonly, nonatomic) TWTRTweetContentView *quoteTweetView; // @synthesize quoteTweetView=_quoteTweetView;
@property(readonly, nonatomic) UIView *attachmentContainer; // @synthesize attachmentContainer=_attachmentContainer;
@property(readonly, nonatomic) TWTRTweetMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(readonly, nonatomic) TWTRTweetDetailViewActionBar *actionBar; // @synthesize actionBar=_actionBar;
@property(readonly, nonatomic) TWTRProfileHeaderView *headerView; // @synthesize headerView=_headerView;
@property(readonly, nonatomic) TWTRTweetLabel *tweetLabel; // @synthesize tweetLabel=_tweetLabel;
@property(nonatomic) double actionBarInset; // @synthesize actionBarInset=_actionBarInset;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(retain, nonatomic) UIColor *secondaryTextColor; // @synthesize secondaryTextColor=_secondaryTextColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) __weak id <TWTRTweetDetailViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
- (void).cxx_destruct;
- (void)profileHeaderView:(id)arg1 didTapProfileForUser:(id)arg2;
- (void)attributedLabel:(id)arg1 didTapTweetUserMentionEntity:(id)arg2;
- (void)attributedLabel:(id)arg1 didTapTweetCashtagEntity:(id)arg2;
- (void)attributedLabel:(id)arg1 didTapTweetHashtagEntity:(id)arg2;
- (void)attributedLabel:(id)arg1 didTapTweetURLEntity:(id)arg2;
- (void)updateLinkColorComponents;
- (void)updateSecondaryTextColorComponents;
- (void)updatePrimaryTextColorComponents;
- (void)updateAttachmentContainerBorderColor;
- (void)updateBackgroundColorComponents;
- (id)tweetToDisplay;
- (void)updateViewsWithTweet:(id)arg1;
- (void)prepareSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithTweet:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRCardConfiguration : NSObject <NSCopying>
{
    unsigned long long _cardType;
    NSString *_cardTitle;
    NSString *_cardDescription;
    UIImage *_image;
    NSMutableDictionary *_metadataFields;
    NSString *_mediaID;
}

+ (id)deviceID;
+ (id)appCardConfigurationWithPromoImage:(id)arg1 mediaID:(id)arg2 iPhoneAppID:(id)arg3 iPadAppID:(id)arg4 googlePlayAppID:(id)arg5;
+ (id)appCardConfigurationWithPromoImage:(id)arg1 iPhoneAppID:(id)arg2 iPadAppID:(id)arg3 googlePlayAppID:(id)arg4;
@property(copy, nonatomic) NSString *mediaID; // @synthesize mediaID=_mediaID;
@property(copy, nonatomic) NSMutableDictionary *metadataFields; // @synthesize metadataFields=_metadataFields;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(readonly, copy, nonatomic) NSString *cardDescription; // @synthesize cardDescription=_cardDescription;
@property(readonly, copy, nonatomic) NSString *cardTitle; // @synthesize cardTitle=_cardTitle;
@property(readonly, nonatomic) unsigned long long cardType; // @synthesize cardType=_cardType;
- (void).cxx_destruct;
- (id)JSONStringRepresentation;
- (id)dictionaryRepresentation;
- (void)setPropertiesFromMetadataFields:(id)arg1;
- (id)cardConfigurationByAppendingMediaID:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)allMetadataFields;
- (id)initWithMetadataFields:(id)arg1;

@end

@interface Twitter : NSObject <FABKit, TWTRUserSessionVerifierDelegate>
{
    _Bool _initialized;
    TWTRSessionStore *_sessionStore;
    TWTRAuthConfig *_authConfig;
    TWTRWebAuthenticationFlow *_webAuthenticationFlow;
    NSDictionary *_kitInfo;
    TWTRScribeSink *_scribeSink;
    TWTRScribeService *_scribeService;
    TWTRUserSessionVerifier *_userSessionVerifier;
    TWTRImageLoader *_imageLoader;
}

+ (void)assertValidTwitterCoreVersion;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)resetSharedInstance;
+ (id)sharedInstance;
+ (void)initializeIfNeeded;
+ (id)bundleIdentifier;
+ (id)kitDisplayVersion;
@property(readonly, nonatomic) TWTRImageLoader *imageLoader; // @synthesize imageLoader=_imageLoader;
@property(readonly, nonatomic, getter=isInitialized) _Bool initialized; // @synthesize initialized=_initialized;
@property(readonly, nonatomic) TWTRUserSessionVerifier *userSessionVerifier; // @synthesize userSessionVerifier=_userSessionVerifier;
@property(readonly, nonatomic) TWTRScribeService *scribeService; // @synthesize scribeService=_scribeService;
@property(retain, nonatomic) TWTRScribeSink *scribeSink; // @synthesize scribeSink=_scribeSink;
@property(retain, nonatomic) NSDictionary *kitInfo; // @synthesize kitInfo=_kitInfo;
@property(retain, nonatomic) TWTRWebAuthenticationFlow *webAuthenticationFlow; // @synthesize webAuthenticationFlow=_webAuthenticationFlow;
@property(retain, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (void)performWithScribeSink:(id)arg1 action:(CDUnknownBlockType)arg2;
- (void)removeScribeDocumentFromDocumentsDirectory;
- (id)scribeStoreURL;
- (id)applicationSupportDirectory;
- (id)applicationDocumentsDirectory;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (_Bool)shouldShowWebBasedLogin:(id)arg1;
- (void)performWebBasedLogin:(id)arg1 forcingLogin:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)logInWithViewController:(id)arg1 methods:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)logInWithViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)logInWithMethods:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)logInWithCompletion:(CDUnknownBlockType)arg1;
- (void)populateScribeService;
- (void)setupImageLoaderWithCacheDir:(id)arg1;
- (void)setupNetworkingSessionStackWithAccessGroup:(id)arg1;
- (void)setupScribeSink;
- (void)setupAPIServiceConfigs;
- (void)assertTwitterKitInitialized;
- (void)pingVerifySessionForAuthSession:(id)arg1;
- (void)userSessionVerifierNeedsSessionVerification:(id)arg1;
- (void)kitDidFinishStarting;
@property(readonly, nonatomic) TWTRSessionStore *sessionStore; // @synthesize sessionStore=_sessionStore;
- (void)ensureResourcesBundleExists;
- (void)initializeDigitsKitWithConsumerKey:(id)arg1 consumerSecret:(id)arg2;
- (void)dealloc;
- (void)startWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 accessGroup:(id)arg3;
- (void)startWithConsumerKey:(id)arg1 consumerSecret:(id)arg2;
- (void)start;
- (id)bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *version;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRMultiPhotoLayout : NSObject
{
}

+ (void)addQuadrupleViewConstraints:(id)arg1;
+ (void)addTripleViewConstraints:(id)arg1;
+ (void)addDoubleViewConstraints:(id)arg1;
+ (void)addSingleViewConstraints:(id)arg1;
+ (void)layoutViews:(id)arg1;

@end

@interface TWTRTweetView : UIView <TWTRAttributedLabelDelegate, TWTRProfileHeaderViewDelegate, TWTRTweetMediaViewDelegate, UIGestureRecognizerDelegate, UITextViewDelegate, TWTRSubscriber, UIAppearanceContainer>
{
    _Bool _showBorder;
    _Bool _showActionButtons;
    _Bool _calculationOnly;
    _Bool _doneInitializing;
    TWTRTweet *_tweet;
    UIColor *_backgroundColor;
    UIColor *_primaryTextColor;
    UIColor *_linkTextColor;
    unsigned long long _theme;
    unsigned long long _style;
    id <TWTRTweetViewDelegate> _delegate;
    UIViewController *_presenterViewController;
    UIView *_attachmentContainer;
    TWTRTweetContentView *_attachmentContentView;
    NSLayoutConstraint *_attachmentTopMarginConstraint;
    NSLayoutConstraint *_attachmentBottomMarginConstraint;
    UIView *_actionContainer;
    TWTRLikeButton *_likeButton;
    TWTRShareButton *_shareButton;
    TWTRTweetPresenter *_tweetPresenter;
    TWTRTweetContentView *_contentView;
    TWTRTweetViewMetrics *_metrics;
    TWTRUser *_profileUserToDisplay;
    NSLayoutConstraint *_imageTopConstraint;
    NSLayoutConstraint *_imageBottomConstraint;
    NSLayoutConstraint *_actionsHeightConstraint;
    NSLayoutConstraint *_actionsBottomConstraint;
}

+ (id)borderColorForTheme:(unsigned long long)arg1;
+ (id)linkTextColorForTheme:(unsigned long long)arg1;
+ (id)primaryTextColorForTheme:(unsigned long long)arg1;
+ (id)backgroundColorForTheme:(unsigned long long)arg1;
+ (id)layoutForTweetViewStyle:(unsigned long long)arg1 metrics:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) NSLayoutConstraint *actionsBottomConstraint; // @synthesize actionsBottomConstraint=_actionsBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *actionsHeightConstraint; // @synthesize actionsHeightConstraint=_actionsHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *imageBottomConstraint; // @synthesize imageBottomConstraint=_imageBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *imageTopConstraint; // @synthesize imageTopConstraint=_imageTopConstraint;
@property(retain, nonatomic) TWTRUser *profileUserToDisplay; // @synthesize profileUserToDisplay=_profileUserToDisplay;
@property(retain, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
@property(nonatomic) _Bool doneInitializing; // @synthesize doneInitializing=_doneInitializing;
@property(nonatomic) _Bool calculationOnly; // @synthesize calculationOnly=_calculationOnly;
@property(readonly, nonatomic) TWTRTweetContentView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) TWTRTweetPresenter *tweetPresenter; // @synthesize tweetPresenter=_tweetPresenter;
@property(retain, nonatomic) TWTRShareButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) TWTRLikeButton *likeButton; // @synthesize likeButton=_likeButton;
@property(readonly, nonatomic) UIView *actionContainer; // @synthesize actionContainer=_actionContainer;
@property(readonly, nonatomic) NSLayoutConstraint *attachmentBottomMarginConstraint; // @synthesize attachmentBottomMarginConstraint=_attachmentBottomMarginConstraint;
@property(readonly, nonatomic) NSLayoutConstraint *attachmentTopMarginConstraint; // @synthesize attachmentTopMarginConstraint=_attachmentTopMarginConstraint;
@property(retain, nonatomic) TWTRTweetContentView *attachmentContentView; // @synthesize attachmentContentView=_attachmentContentView;
@property(readonly, nonatomic) UIView *attachmentContainer; // @synthesize attachmentContainer=_attachmentContainer;
@property(nonatomic) __weak UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
@property(nonatomic) __weak id <TWTRTweetViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(nonatomic) unsigned long long theme; // @synthesize theme=_theme;
@property(nonatomic) _Bool showActionButtons; // @synthesize showActionButtons=_showActionButtons;
@property(nonatomic) _Bool showBorder; // @synthesize showBorder=_showBorder;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)viewControllerToPresentFromTweetMediaView:(id)arg1;
- (void)allowDelegateToHandlePresentationOfVideo:(id)arg1;
- (_Bool)shouldAllowDelegateToHandlePresentationOfVideo;
- (void)allowDelegateToHandlePresentationOfImageMediaEntity:(id)arg1;
- (_Bool)shouldAllowDelegateToHandlePresentationOfImageMediaEntity;
- (_Bool)tweetMediaView:(id)arg1 shouldPresentVideoForConfiguration:(id)arg2;
- (_Bool)tweetMediaView:(id)arg1 shouldPresentImageForMediaEntity:(id)arg2;
- (void)profileTapped;
- (void)attributedLabel:(id)arg1 didTapTweetURLEntity:(id)arg2;
- (id)videoMetaData;
- (void)profileHeaderView:(id)arg1 didTapProfileForUser:(id)arg2;
- (void)handleTappingTweet:(id)arg1;
- (void)quoteTweetTapped;
- (void)backgroundTapped;
- (id)tweetDetailViewControllerForPresentingTweet:(id)arg1;
- (void)displayTweetDetailViewControllerForTweet:(id)arg1;
- (void)updateConstraintConstants;
- (void)updateConstraints;
- (void)setupActionBarConstraints;
- (void)setupContainerViewConstraints;
- (void)setupConstraints;
- (void)updateAttachmentViewWithTweet:(id)arg1;
- (void)configureWithTweet:(id)arg1;
- (id)tweetToDisplay;
- (void)objectUpdated:(id)arg1;
- (void)updateComputedColorsForContentView:(id)arg1;
- (void)setNeedsComputedColorsUpdate;
- (void)updateBorder;
- (void)setupGestureRecognizers;
@property(readonly, copy) NSString *debugDescription;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithTweet:(id)arg1 style:(unsigned long long)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithTweet:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRCardPreviewView : TWTRComposerThemedView
{
    UIImageView *_userContentImageView;
    UILabel *_applicationLabel;
    UILabel *_appStoreLabel;
    UIImageView *_installButtonImageView;
}

@property(readonly, nonatomic) UIImageView *installButtonImageView; // @synthesize installButtonImageView=_installButtonImageView;
@property(readonly, nonatomic) UILabel *appStoreLabel; // @synthesize appStoreLabel=_appStoreLabel;
@property(readonly, nonatomic) UILabel *applicationLabel; // @synthesize applicationLabel=_applicationLabel;
@property(readonly, nonatomic) UIImageView *userContentImageView; // @synthesize userContentImageView=_userContentImageView;
- (void).cxx_destruct;
- (void)updateThemedViews;
- (struct CGSize)intrinsicContentSize;
- (id)installButtonImage;
- (id)labelWithText:(id)arg1;
- (id)imageViewWithImage:(id)arg1;
- (void)setupViewHierarchy;
- (id)initWithApplicationName:(id)arg1 image:(id)arg2;

@end

@interface TWTRTweetImageView : UIImageView
{
    unsigned long long _style;
    TWTRMediaEntityDisplayConfiguration *_mediaConfiguration;
    TWTRTweetImageViewPill *_pillView;
}

@property(readonly, nonatomic) TWTRTweetImageViewPill *pillView; // @synthesize pillView=_pillView;
@property(readonly, nonatomic) TWTRMediaEntityDisplayConfiguration *mediaConfiguration; // @synthesize mediaConfiguration=_mediaConfiguration;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)loadImageWithShouldUpdateImageViewCallback:(CDUnknownBlockType)arg1;
- (void)updatePillViewWithMediaEntityConfiguration:(id)arg1;
- (void)configureWithMediaEntityConfiguration:(id)arg1 style:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface TWTRVideoPlaybackConfiguration : NSObject
{
    NSURL *_videoURL;
    double _aspectRatio;
    double _duration;
    unsigned long long _mediaType;
    NSString *_mediaID;
    TWTRVideoDeeplinkConfiguration *_deeplinkConfiguration;
}

+ (id)expandedURLFromEntities:(id)arg1 matchingURL:(id)arg2;
+ (id)playbackConfigurationForCardEntity:(id)arg1 URLEntities:(id)arg2;
+ (id)lowestBitrateVariant:(id)arg1;
+ (id)bestVariantFromMetaData:(id)arg1;
+ (id)playbackConfigurationForTweetMediaEntity:(id)arg1;
@property(readonly, nonatomic) TWTRVideoDeeplinkConfiguration *deeplinkConfiguration; // @synthesize deeplinkConfiguration=_deeplinkConfiguration;
@property(readonly, copy, nonatomic) NSString *mediaID; // @synthesize mediaID=_mediaID;
@property(readonly, nonatomic) unsigned long long mediaType; // @synthesize mediaType=_mediaType;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(readonly, nonatomic) NSURL *videoURL; // @synthesize videoURL=_videoURL;
- (void).cxx_destruct;
- (id)initWithVideoURL:(id)arg1 aspectRatio:(double)arg2 duration:(double)arg3 mediaType:(unsigned long long)arg4 mediaID:(id)arg5 deeplinkConfiguration:(id)arg6;

@end

@interface TWTRTweetMediaView : UIView
{
    _Bool _allowsCornerRadiusRounding;
    double _aspectRatio;
    unsigned long long _style;
    UIViewController *_presenterViewController;
    id <TWTRTweetMediaViewDelegate> _delegate;
    UITapGestureRecognizer *_tapGestureRecognizer;
    TWTRTweet *_tweet;
    NSMutableArray *_imageViews;
    TWTRVideoPlayerView *_videoPlayerView;
    NSLayoutConstraint *_aspectRatioConstraint;
}

@property(readonly, nonatomic) NSLayoutConstraint *aspectRatioConstraint; // @synthesize aspectRatioConstraint=_aspectRatioConstraint;
@property(readonly, nonatomic) TWTRVideoPlayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(retain, nonatomic) NSMutableArray *imageViews; // @synthesize imageViews=_imageViews;
@property(readonly, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
@property(readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(nonatomic) _Bool allowsCornerRadiusRounding; // @synthesize allowsCornerRadiusRounding=_allowsCornerRadiusRounding;
@property(nonatomic) __weak id <TWTRTweetMediaViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
@property(nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
- (void).cxx_destruct;
- (id)accessibilityLabel;
- (id)viewControllerForPresenting;
- (_Bool)shouldPresentVideo:(id)arg1;
- (_Bool)shouldPresentMediaEntity:(id)arg1;
- (void)updateBackgroundWithComputedColor:(id)arg1;
- (id)videoPlaybackConfiguration;
- (void)presentMediaViewController:(id)arg1 fromView:(id)arg2 presentingViewController:(id)arg3;
- (void)presentVideo:(id)arg1 fromViewController:(id)arg2;
- (void)presentMediaEntity:(id)arg1 forImageAtIndex:(long long)arg2;
- (_Bool)presentDetailedImageViewWithMediaEntityAtIndex:(long long)arg1;
- (_Bool)presentDetailedVideoView;
- (id)imageAtIndex:(long long)arg1;
- (id)imageForMediaEntity:(id)arg1;
- (long long)indexOfMediaEntityForTapPoint:(struct CGPoint)arg1;
- (void)presentDetailedMediaForGesture:(id)arg1;
- (_Bool)presentDetailedViewForMediaEntityAtIndex:(long long)arg1;
- (_Bool)presentDetailedMediaViewForMediaEntity:(id)arg1;
- (_Bool)isShowingMedia;
- (_Bool)isShowingVideoThumbnail;
- (void)roundCornersIfNeeded;
- (void)addPlayIconIfNeeded;
- (void)configureWithTweet:(id)arg1 style:(unsigned long long)arg2;
- (id)firstMediaEntity;
- (id)videoThumbnail;
- (void)setAspectRatioConstraintNeedsUpdate;
- (void)updateConstraints;
- (void)addAspectRatioConstraint;
- (double)desiredWidth;
- (id)mediaDisplayConfigurations;
- (void)prepareImageViewsForTweet:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TWTRViewUtil : NSObject
{
}

+ (void)setConstraints:(id)arg1 active:(_Bool)arg2;
+ (void)addVisualConstraints:(id)arg1 options:(unsigned long long)arg2 metrics:(id)arg3 views:(id)arg4;
+ (void)addVisualConstraints:(id)arg1 options:(unsigned long long)arg2 views:(id)arg3;
+ (void)addVisualConstraints:(id)arg1 metrics:(id)arg2 views:(id)arg3;
+ (void)addVisualConstraints:(id)arg1 views:(id)arg2;
+ (void)equateAttribute:(long long)arg1 onView:(id)arg2 toView:(id)arg3 constant:(double)arg4;
+ (void)equateAttribute:(long long)arg1 onView:(id)arg2 toView:(id)arg3;
+ (id)constraintsWithFormat:(id)arg1 metrics:(id)arg2 views:(id)arg3;
+ (void)centerViewVerticallyInSuperview:(id)arg1;
+ (void)centerViewVertically:(id)arg1 inView:(id)arg2;
+ (void)centerViewHorizontallyInSuperview:(id)arg1;
+ (void)centerViewHorizontally:(id)arg1 inView:(id)arg2;
+ (void)centerViewInSuperview:(id)arg1;
+ (void)centerView:(id)arg1 inView:(id)arg2;
+ (id)marginConstraintBetweenTopView:(id)arg1 bottomView:(id)arg2;
+ (id)constraintForAspectRatio:(double)arg1 onView:(id)arg2;
+ (id)constraintToBottomOfSuperview:(id)arg1 constant:(double)arg2;
+ (id)constraintToBottomOfSuperview:(id)arg1;
+ (id)constraintToTopOfSuperview:(id)arg1 constant:(double)arg2;
+ (id)constraintToTopOfSuperview:(id)arg1;
+ (id)constraintForAttribute:(long long)arg1 onView:(id)arg2 value:(double)arg3;
+ (_Bool)aspectRatioIsLandscape:(double)arg1;
+ (double)aspectRatioForWidth:(double)arg1 height:(double)arg2;
+ (double)aspectRatioForSize:(struct CGSize)arg1;
+ (double)averageAspectRatioForMediaEntity:(id)arg1;
+ (id)bestMatchSizeFromMediaEntity:(id)arg1 fittingWidth:(double)arg2;

@end

@interface TWTRImageScrollView : UIScrollView <UIScrollViewDelegate>
{
    UIImageView *_imageView;
}

@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)doubleTapped:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)layoutSubviews;
- (struct CGRect)targetBoundsForImage:(id)arg1;
- (double)initialZoomScale;
- (double)initialZoomScaleForImage:(id)arg1 constrainedToBounds:(struct CGRect)arg2;
- (void)resetZoomScale;
- (void)displayImage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRImageLoaderTaskManager : NSObject <TWTRImageLoaderTaskManager>
{
    NSMutableDictionary *_currentTasks;
}

@property(retain, nonatomic) NSMutableDictionary *currentTasks; // @synthesize currentTasks=_currentTasks;
- (void).cxx_destruct;
- (id)removeTaskWithRequestID:(id)arg1;
- (void)addTask:(id)arg1 withRequestID:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTwitterAPIConfiguration : NSObject
{
    unsigned long long _DMTextCharacterLimit;
    unsigned long long _charactersReservedPerMedia;
    unsigned long long _maxMediaPerUpload;
    NSArray *_nonUsernamePaths;
    unsigned long long _photoSizeLimit;
    NSArray *_photoSizes;
    unsigned long long _shortURLLength;
    unsigned long long _shortURLLengthHTTPS;
}

@property(readonly, nonatomic) unsigned long long shortURLLengthHTTPS; // @synthesize shortURLLengthHTTPS=_shortURLLengthHTTPS;
@property(readonly, nonatomic) unsigned long long shortURLLength; // @synthesize shortURLLength=_shortURLLength;
@property(readonly, copy, nonatomic) NSArray *photoSizes; // @synthesize photoSizes=_photoSizes;
@property(readonly, nonatomic) unsigned long long photoSizeLimit; // @synthesize photoSizeLimit=_photoSizeLimit;
@property(readonly, copy, nonatomic) NSArray *nonUsernamePaths; // @synthesize nonUsernamePaths=_nonUsernamePaths;
@property(readonly, nonatomic) unsigned long long maxMediaPerUpload; // @synthesize maxMediaPerUpload=_maxMediaPerUpload;
@property(readonly, nonatomic) unsigned long long charactersReservedPerMedia; // @synthesize charactersReservedPerMedia=_charactersReservedPerMedia;
@property(readonly, nonatomic) unsigned long long DMTextCharacterLimit; // @synthesize DMTextCharacterLimit=_DMTextCharacterLimit;
- (void).cxx_destruct;
- (void)setPropertiesFromDict:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

@end

@interface TWTRComposer : NSObject
{
    _Bool _didShowAlready;
    SLComposeViewController *_systemComposeViewController;
}

@property(nonatomic) _Bool didShowAlready; // @synthesize didShowAlready=_didShowAlready;
@property(retain, nonatomic) SLComposeViewController *systemComposeViewController; // @synthesize systemComposeViewController=_systemComposeViewController;
- (void).cxx_destruct;
- (void)showFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)setURL:(id)arg1;
- (_Bool)setImage:(id)arg1;
- (_Bool)setText:(id)arg1;
- (id)init;

@end

@interface TWTRUserTimelineDataSource : NSObject <TWTRTimelineDataSource>
{
    _Bool _includeReplies;
    _Bool _includeRetweets;
    TWTRAPIClient *_APIClient;
    NSString *_screenName;
    NSString *_userID;
    unsigned long long _maxTweetsPerRequest;
}

@property(readonly, nonatomic) _Bool includeRetweets; // @synthesize includeRetweets=_includeRetweets;
@property(readonly, nonatomic) _Bool includeReplies; // @synthesize includeReplies=_includeReplies;
@property(readonly, nonatomic) unsigned long long maxTweetsPerRequest; // @synthesize maxTweetsPerRequest=_maxTweetsPerRequest;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, copy, nonatomic) NSString *screenName; // @synthesize screenName=_screenName;
@property(retain, nonatomic) TWTRAPIClient *APIClient; // @synthesize APIClient=_APIClient;
- (void).cxx_destruct;
- (id)queryParametersWithMaxPosition:(id)arg1;
@property(readonly, nonatomic) unsigned long long timelineType;
- (void)loadPreviousTweetsBeforePosition:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithScreenName:(id)arg1 userID:(id)arg2 APIClient:(id)arg3 maxTweetsPerRequest:(unsigned long long)arg4 includeReplies:(_Bool)arg5 includeRetweets:(_Bool)arg6;
- (id)initWithScreenName:(id)arg1 APIClient:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRCardEntity : NSObject <NSCoding, NSCopying>
{
    NSString *_URL;
}

+ (id)cardEntityClasses;
+ (void)unregisterClass:(Class)arg1;
+ (void)registerClass:(Class)arg1;
+ (_Bool)canInitWithJSONDictionary:(id)arg1;
+ (id)cardEntityFromJSONDictionary:(id)arg1;
+ (void)initialize;
@property(readonly, copy, nonatomic) NSString *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface TWTRCardEntityImageValue : NSObject <NSCoding, NSCopying>
{
    NSString *_imageURL;
    struct CGSize _imageSize;
}

@property(readonly, nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, copy, nonatomic) NSString *imageURL; // @synthesize imageURL=_imageURL;
- (void).cxx_destruct;
- (_Bool)isEqualToCardEntityImageValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithURL:(id)arg1 height:(double)arg2 width:(double)arg3;

@end

@interface TWTRCardSiteValueToUserIDStringTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRCardEntityBindingValueStringTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRCardEntityBindingValueImageTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TWTRTwitterTextEntity : NSObject
{
    unsigned long long _type;
    struct _NSRange _range;
}

+ (id)entityWithType:(unsigned long long)arg1 range:(struct _NSRange)arg2;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (id)description;
- (long long)compare:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 range:(struct _NSRange)arg2;

@end

@interface TWTRTimelineParser : NSObject
{
}

+ (id)orderedTweetIDsFromCollectionOrderingResponse:(id)arg1;
+ (id)minPositionFromCollectionAPIResponseDictionary:(id)arg1;
+ (id)tweetsFromSearchAPIResponseDictionary:(id)arg1;
+ (id)lastTweetIDFromTweets:(id)arg1;
+ (id)tweetsByID:(id)arg1;
+ (id)orderTweets:(id)arg1 accordingToIDs:(id)arg2;
+ (void)hydrateSubTweetWithKey:(id)arg1 forTweet:(id)arg2 withUsers:(id)arg3;
+ (id)hyrdrateTweet:(id)arg1 withUserFromUsers:(id)arg2;
+ (id)tweetsFromCollectionAPIResponseDictionary:(id)arg1;

@end

@interface TWTROSVersionInfo : NSObject
{
}

+ (long long)majorVersion;

@end

@interface TWTRComposerThemedView : UIView
{
    TWTRComposerTheme *_theme;
}

@property(retain, nonatomic) TWTRComposerTheme *theme; // @synthesize theme=_theme;
- (void).cxx_destruct;
- (void)updateThemedViews;
@property(readonly, nonatomic) struct UIEdgeInsets contentEdgeInsets;

@end

@interface TWTRComposerPresenter : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _didRegisterForKeyboardNotifications;
    _Bool _presenting;
    CDUnknownBlockType _becomeResponderBlock;
    UIView *_chrome;
    UIView *_keyboardMarkerView;
    NSLayoutConstraint *_keyboardMarkerHeightConstraint;
}

@property(readonly, nonatomic) NSLayoutConstraint *keyboardMarkerHeightConstraint; // @synthesize keyboardMarkerHeightConstraint=_keyboardMarkerHeightConstraint;
@property(readonly, nonatomic) UIView *keyboardMarkerView; // @synthesize keyboardMarkerView=_keyboardMarkerView;
@property(readonly, nonatomic) UIView *chrome; // @synthesize chrome=_chrome;
@property(copy, nonatomic) CDUnknownBlockType becomeResponderBlock; // @synthesize becomeResponderBlock=_becomeResponderBlock;
@property(nonatomic, getter=isPresenting) _Bool presenting; // @synthesize presenting=_presenting;
- (void).cxx_destruct;
- (void)keyboardWillChange:(id)arg1;
- (void)registerForKeyboardNotifications;
- (void)animateDismissal:(id)arg1;
- (void)addKeyboardMarkerViewWithContainer:(id)arg1;
- (void)addChromeWithContainer:(id)arg1;
- (struct CGAffineTransform)offscreenTransformWithContext:(id)arg1;
- (_Bool)shouldShowAsFullScreen:(id)arg1;
- (void)constrainViewControllerView:(id)arg1 inContainer:(id)arg2 fullScreen:(_Bool)arg3;
- (void)presentCardController:(id)arg1;
- (void)animatePresentation:(id)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTRTableViewAdPlacer : NSObject
{
    id _adPlacer;
    TWTRMoPubAdConfiguration *_adConfig;
}

+ (void)initialize;
@property(readonly, nonatomic) TWTRMoPubAdConfiguration *adConfig; // @synthesize adConfig=_adConfig;
@property(readonly, nonatomic) id adPlacer; // @synthesize adPlacer=_adPlacer;
- (void).cxx_destruct;
- (void)loadAdUnitIfConfigured;
- (id)initWithTableView:(id)arg1 viewController:(id)arg2 adConfiguration:(id)arg3;

@end

@interface TWTRImageLoader : NSObject <TWTRImageLoader>
{
    NSURLSession *_URLSession;
    id <TWTRImageLoaderCache> _cache;
    id <TWTRImageLoaderTaskManager> _taskManager;
    NSObject<OS_dispatch_queue> *_privateConcurrentQueue;
}

+ (id)generateRequestID;
+ (id)localizedErrorFromResponse:(id)arg1 networkError:(id)arg2;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *privateConcurrentQueue; // @synthesize privateConcurrentQueue=_privateConcurrentQueue;
@property(readonly, nonatomic) id <TWTRImageLoaderTaskManager> taskManager; // @synthesize taskManager=_taskManager;
@property(readonly, nonatomic) id <TWTRImageLoaderCache> cache; // @synthesize cache=_cache;
@property(readonly, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
- (void).cxx_destruct;
- (CDUnknownBlockType)backfillCacheOnFetchCompletionWithImageKey:(id)arg1 postBackfillCompletion:(CDUnknownBlockType)arg2;
- (void)fetchImageWithImageURL:(id)arg1 requestID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchCachedImageWithImageKey:(id)arg1 cacheHitCompletion:(CDUnknownBlockType)arg2 cacheMissCompletion:(CDUnknownBlockType)arg3;
- (void)cancelImageWithRequestID:(id)arg1;
- (id)fetchImageWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSession:(id)arg1 cache:(id)arg2 taskManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTROAuthSigning : NSObject <TWTRCoreOAuthSigning>
{
    TWTRAuthConfig *_authConfig;
    TWTRSession *_authSession;
}

@property(readonly, nonatomic) TWTRSession *authSession; // @synthesize authSession=_authSession;
@property(readonly, nonatomic) TWTRAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
- (void).cxx_destruct;
- (id)OAuthEchoHeadersToVerifyCredentials;
- (id)OAuthEchoHeadersForRequestMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)APIServiceConfig;
- (id)initWithAuthConfig:(id)arg1 authSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TWTREntityCollection : NSObject <NSCoding, NSCopying, TWTRJSONConvertible>
{
    NSArray *_hashtags;
    NSArray *_cashtags;
    NSArray *_media;
    NSArray *_urls;
    NSArray *_userMentions;
    NSDictionary *_validatedDictionary;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, copy, nonatomic) NSArray *userMentions; // @synthesize userMentions=_userMentions;
@property(readonly, copy, nonatomic) NSArray *urls; // @synthesize urls=_urls;
@property(readonly, copy, nonatomic) NSArray *media; // @synthesize media=_media;
@property(readonly, copy, nonatomic) NSArray *cashtags; // @synthesize cashtags=_cashtags;
@property(readonly, copy, nonatomic) NSArray *hashtags; // @synthesize hashtags=_hashtags;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRPlayerCardEntityBindingValues : NSObject <TWTRJSONConvertible, NSCoding, NSCopying>
{
    NSString *_appName;
    NSString *_playerStreamURL;
    NSString *_playerURL;
    NSString *_playerImageURL;
    NSString *_cardDescription;
    NSString *_IDString;
    NSDictionary *_validatedDictionary;
    struct CGSize _playerImageSize;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, nonatomic) NSString *IDString; // @synthesize IDString=_IDString;
@property(readonly, copy, nonatomic) NSString *cardDescription; // @synthesize cardDescription=_cardDescription;
@property(readonly, nonatomic) struct CGSize playerImageSize; // @synthesize playerImageSize=_playerImageSize;
@property(readonly, copy, nonatomic) NSString *playerImageURL; // @synthesize playerImageURL=_playerImageURL;
@property(readonly, copy, nonatomic) NSString *playerURL; // @synthesize playerURL=_playerURL;
@property(readonly, copy, nonatomic) NSString *playerStreamURL; // @synthesize playerStreamURL=_playerStreamURL;
@property(readonly, copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
- (void).cxx_destruct;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (_Bool)isEqualToPlayerCardEntityBindingValues:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRPlayerCardEntity : TWTRCardEntity <TWTRJSONConvertible, NSCoding, NSCopying>
{
    long long _playerCardType;
    TWTRPlayerCardEntityBindingValues *_bindingValues;
    NSDictionary *_validatedDictionary;
}

+ (id)validateJSONDictionary:(id)arg1;
+ (id)JSONValidator;
+ (_Bool)canInitWithJSONDictionary:(id)arg1;
@property(copy, nonatomic) NSDictionary *validatedDictionary; // @synthesize validatedDictionary=_validatedDictionary;
@property(readonly, nonatomic) TWTRPlayerCardEntityBindingValues *bindingValues; // @synthesize bindingValues=_bindingValues;
@property(readonly, nonatomic) long long playerCardType; // @synthesize playerCardType=_playerCardType;
- (void).cxx_destruct;
- (_Bool)isEqualToPlayerCardEntity:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPropertiesFromValidatedDictionary:(id)arg1;
- (id)initWithValidatedDictionary:(id)arg1;
- (id)initWithJSONDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TWTRBezierPaths : NSObject
{
}

+ (id)twitterLogo;

@end

@interface TWTRProfileHeaderView : UIView
{
    _Bool _calculationOnly;
    _Bool _showsTimestamp;
    _Bool _showsTwitterLogo;
    _Bool _showProfileThumbnail;
    id <TWTRProfileHeaderViewDelegate> _delegate;
    TWTRProfileView *_profileThumbnail;
    UILabel *_fullname;
    UILabel *_userName;
    TWTRTimestampLabel *_timestamp;
    TWTRBirdView *_twitterLogo;
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
    UIColor *_backgroundColor;
    TWTRTweet *_tweet;
    TWTRTweet *_tweetToDisplay;
    TWTRUser *_user;
    unsigned long long _style;
    TWTRTweetViewMetrics *_metrics;
    TWTRTweetPresenter *_tweetPresenter;
    TWTRRetweetView *_retweetView;
    TWTRVerifiedView *_verified;
    NSLayoutConstraint *_retweetHeightConstraint;
    NSLayoutConstraint *_retweetBottomConstraint;
    NSLayoutConstraint *_displayThumbnailEdgeConstraint;
    NSLayoutConstraint *_hideThumbnailEdgeConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *hideThumbnailEdgeConstraint; // @synthesize hideThumbnailEdgeConstraint=_hideThumbnailEdgeConstraint;
@property(retain, nonatomic) NSLayoutConstraint *displayThumbnailEdgeConstraint; // @synthesize displayThumbnailEdgeConstraint=_displayThumbnailEdgeConstraint;
@property(retain, nonatomic) NSLayoutConstraint *retweetBottomConstraint; // @synthesize retweetBottomConstraint=_retweetBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *retweetHeightConstraint; // @synthesize retweetHeightConstraint=_retweetHeightConstraint;
@property(retain, nonatomic) TWTRVerifiedView *verified; // @synthesize verified=_verified;
@property(retain, nonatomic) TWTRRetweetView *retweetView; // @synthesize retweetView=_retweetView;
@property(retain, nonatomic) TWTRTweetPresenter *tweetPresenter; // @synthesize tweetPresenter=_tweetPresenter;
@property(retain, nonatomic) TWTRTweetViewMetrics *metrics; // @synthesize metrics=_metrics;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(retain, nonatomic) TWTRUser *user; // @synthesize user=_user;
@property(retain, nonatomic) TWTRTweet *tweetToDisplay; // @synthesize tweetToDisplay=_tweetToDisplay;
@property(retain, nonatomic) TWTRTweet *tweet; // @synthesize tweet=_tweet;
@property(nonatomic) _Bool showProfileThumbnail; // @synthesize showProfileThumbnail=_showProfileThumbnail;
@property(nonatomic) _Bool showsTwitterLogo; // @synthesize showsTwitterLogo=_showsTwitterLogo;
@property(nonatomic) _Bool showsTimestamp; // @synthesize showsTimestamp=_showsTimestamp;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIColor *secondaryTextColor; // @synthesize secondaryTextColor=_secondaryTextColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(retain, nonatomic) TWTRBirdView *twitterLogo; // @synthesize twitterLogo=_twitterLogo;
@property(readonly, nonatomic) TWTRTimestampLabel *timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) UILabel *userName; // @synthesize userName=_userName;
@property(readonly, nonatomic) UILabel *fullname; // @synthesize fullname=_fullname;
@property(readonly, nonatomic) TWTRProfileView *profileThumbnail; // @synthesize profileThumbnail=_profileThumbnail;
@property(nonatomic) __weak id <TWTRProfileHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool calculationOnly; // @synthesize calculationOnly=_calculationOnly;
- (void).cxx_destruct;
- (void)profileTapped;
- (void)loadProfileThumbnail;
- (void)prepareForReuse;
- (void)updateConstraintConstants;
- (void)setupRegularConstraints;
- (void)setupCompactConstraints;
- (void)setupConstraints;
- (id)autoLayoutViews;
- (_Bool)shouldDisplayVerifiedBadge;
- (void)configureWithTweet:(id)arg1;
- (void)setupGestureRecognizers;
- (id)initWithStyle:(unsigned long long)arg1;

@end

@interface FABSettingsOnboardingManager : NSObject <FABDownloadAndSaveSettingsOperationDelegate, FABOnboardingOperationDelegate>
{
    _Bool _hasAttemptedAppConfigure;
    FABApplicationIdentiferModel *_appIdentifierModel;
    FABSettings *_settingsModel;
    FABOnboardingOperation *_onboardingOperation;
    NSFileManager *_fileManager;
    NSDictionary *_configuration;
    NSDictionary *_defaultConfiguration;
    NSString *_APIKey;
    NSDictionary *_kitVersionsByKitBundleIdentifier;
    FABNetworkClient *_networkClient;
}

+ (id)settingsDirectoryPath;
@property(readonly, nonatomic) FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(copy, nonatomic) NSDictionary *kitVersionsByKitBundleIdentifier; // @synthesize kitVersionsByKitBundleIdentifier=_kitVersionsByKitBundleIdentifier;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(retain, nonatomic) NSDictionary *defaultConfiguration; // @synthesize defaultConfiguration=_defaultConfiguration;
@property(retain, nonatomic) NSDictionary *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) _Bool hasAttemptedAppConfigure; // @synthesize hasAttemptedAppConfigure=_hasAttemptedAppConfigure;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) FABOnboardingOperation *onboardingOperation; // @synthesize onboardingOperation=_onboardingOperation;
@property(retain, nonatomic) FABSettings *settingsModel; // @synthesize settingsModel=_settingsModel;
@property(retain, nonatomic) FABApplicationIdentiferModel *appIdentifierModel; // @synthesize appIdentifierModel=_appIdentifierModel;
- (void).cxx_destruct;
- (void)postSettingsDownloadCompletedNotification;
- (id)settingsPath;
- (id)settingsURL;
- (void)operation:(id)arg1 didDownloadAndSaveSettingsWithError:(id)arg2;
- (void)onboardingOperation:(id)arg1 didCompleteAppUpdateWithError:(id)arg2;
- (void)onboardingOperation:(id)arg1 didCompleteAppCreationWithError:(id)arg2;
- (id)appIconHash;
- (id)valueForConfigurationKey:(id)arg1;
- (void)finishNetworkingSession;
- (id)advertisingToken;
- (void)beginOnboarding:(_Bool)arg1 endpointString:(id)arg2;
- (void)beginSettingsDownload;
- (void)beginSettingsAndOnboardingOperationsWithAPIKey:(id)arg1 kitVersionsByKitBundleIdentifier:(id)arg2;
- (id)initWithApplicationIdentifierModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FABIcon : NSObject
{
    _Bool _prerendered;
    NSData *_data;
    NSString *_dataHash;
    struct CGSize _size;
}

+ (_Bool)isWithinMaxSurfaceAreaWithImage:(id)arg1;
@property(nonatomic) _Bool prerendered; // @synthesize prerendered=_prerendered;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *dataHash; // @synthesize dataHash=_dataHash;
@property(copy, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (_Bool)largerThanSize:(struct CGSize)arg1;
@property(readonly, nonatomic) _Bool isWithinMaxSurfaceArea;
@property(readonly, nonatomic) double surfaceArea;
- (id)initWithPNGImageAtPath:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 dataHash:(id)arg2 size:(struct CGSize)arg3 prerendered:(_Bool)arg4;

@end

@interface Fabric : NSObject
{
    _Bool _debug;
    _Bool _isFirstInstall;
    NSArray *_kitClasses;
    NSDictionary *_fabricConfig;
    FABSettingsOnboardingManager *_settingsAndOnboardingManager;
    FABApplicationIdentiferModel *_applicationIdentifierModel;
    NSString *_APIKey;
    NSString *_installID;
    NSString *_executionIdentifier;
    NSString *_advertisingToken;
}

+ (id)configurationDictionaryForKitClass:(Class)arg1;
+ (void)initializeKit:(Class)arg1;
+ (id)kitClassesByEnsuringAppseeIsFirst:(id)arg1;
+ (id)kitClassesByAddingAnswersIfFound:(id)arg1;
+ (id)kitClassesByAddingDigitsIfFound:(id)arg1;
+ (void)validateFABKitConformance:(id)arg1;
+ (id)convertToKitClassesIfNeeded:(id)arg1;
+ (id)with:(id)arg1;
+ (id)sharedSDK;
@property(copy, nonatomic) NSString *advertisingToken; // @synthesize advertisingToken=_advertisingToken;
@property(readonly, copy, nonatomic) NSString *executionIdentifier; // @synthesize executionIdentifier=_executionIdentifier;
@property(readonly, nonatomic) _Bool isFirstInstall; // @synthesize isFirstInstall=_isFirstInstall;
@property(readonly, copy, nonatomic) NSString *installID; // @synthesize installID=_installID;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(readonly, nonatomic) FABApplicationIdentiferModel *applicationIdentifierModel; // @synthesize applicationIdentifierModel=_applicationIdentifierModel;
@property(retain, nonatomic) FABSettingsOnboardingManager *settingsAndOnboardingManager; // @synthesize settingsAndOnboardingManager=_settingsAndOnboardingManager;
@property(copy, nonatomic) NSDictionary *fabricConfig; // @synthesize fabricConfig=_fabricConfig;
@property(copy, nonatomic) NSArray *kitClasses; // @synthesize kitClasses=_kitClasses;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *instanceIdentifier;
@property(readonly, nonatomic) NSDictionary *settings;
- (id)configurationDictionaryForKit:(id)arg1;
- (id)validFabricConfigFromInfoPlist:(id)arg1;
- (id)generateInstallationUUID;
- (id)readInstallationUUID;
- (id)kitVersionsByKitBundleIdentifier;
- (void)onboardAppAndDownloadSettings;
- (id)init;

@end

@interface FABNetworkOperation : FABAsyncOperation
{
    NSString *_APIKey;
}

@property(readonly, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (id)localeIdentifier;
- (id)userAgentString;
- (id)mutableRequestWithDefaultHTTPHeadersForURL:(id)arg1 timeout:(double)arg2;
- (id)mutableRequestWithDefaultHTTPHeaderFieldsAndTimeoutForURL:(id)arg1;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABURLBuilder : NSObject
{
    NSMutableString *_URLString;
    unsigned long long _queryParams;
}

+ (id)URLWithBase:(id)arg1;
@property(nonatomic) unsigned long long queryParams; // @synthesize queryParams=_queryParams;
@property(retain, nonatomic) NSMutableString *URLString; // @synthesize URLString=_URLString;
- (void).cxx_destruct;
- (id)URL;
- (void)appendValue:(id)arg1 forQueryParam:(id)arg2;
- (void)escapeAndAppendComponent:(id)arg1;
- (void)appendComponent:(id)arg1;
- (id)escapeString:(id)arg1;
- (id)init;

@end

@interface FABCertificatePinner : NSObject
{
    NSArray *_certificates;
}

+ (struct __SecCertificate *)createCertificationWithData:(const void *)arg1 length:(unsigned long long)arg2;
@property(readonly, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
- (void).cxx_destruct;
- (_Bool)handleChallenge:(id)arg1 fromURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (short)evaluateTrust:(struct __SecTrust *)arg1 result:(unsigned int *)arg2;
- (id)initWithCertificates:(id)arg1;

@end

@interface FABAppIconUtility : NSObject
{
    FABIcon *_applicationIcon;
}

+ (id)iconNameSetWithAlternateNamesAddedToIconNameSet:(id)arg1;
+ (void)addIconNameWithModifier:(id)arg1 forIconWithName:(id)arg2 toSetOfIconNames:(id)arg3;
+ (_Bool)isIconImageFileNameExtensionPresentInName:(id)arg1;
+ (struct CGSize)sizeForImage:(id)arg1;
@property(retain, nonatomic) FABIcon *applicationIcon; // @synthesize applicationIcon=_applicationIcon;
- (void).cxx_destruct;
- (id)fetchApplicationIcon;
- (id)iconByFallingBackOnDefaultIconNamingConvention;
- (id)iconFromCFBundleIconFile;
- (id)iconFromCFBundleIconFiles;
- (id)iconFromIOS7StyleCFBundleIconsInFieldWithKey:(id)arg1;
- (id)largestIconInIconNames:(id)arg1 prerendered:(_Bool)arg2;
- (id)iconRootPath;
@property(readonly, nonatomic) NSDictionary *appInfoDictionary;

@end

@interface FABMultipartMimeStreamEncoder : NSObject <NSStreamDelegate>
{
    unsigned long long _length;
    NSString *_boundary;
    NSOutputStream *_outputStream;
}

+ (id)generateBoundary;
+ (id)encoderWithStream:(id)arg1 andBoundary:(id)arg2;
+ (id)contentTypeHTTPHeaderValueWithBoundary:(id)arg1;
+ (void)populateRequest:(id)arg1 withDataFromEncoder:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long length; // @synthesize length=_length;
- (void).cxx_destruct;
- (void)writeData:(id)arg1;
- (_Bool)writeBytes:(const void *)arg1 ofLength:(unsigned long long)arg2;
- (void)addFile:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 fieldName:(id)arg4;
- (void)addValue:(id)arg1 fieldName:(id)arg2;
- (void)addFileData:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 fieldName:(id)arg4;
@property(readonly, copy, nonatomic) NSData *footerData;
@property(readonly, copy, nonatomic) NSData *headerData;
- (void)endEncoding;
- (void)beginEncoding;
@property(readonly, copy, nonatomic) NSString *contentLengthHTTPHeaderValue;
@property(readonly, copy, nonatomic) NSString *contentTypeHTTPHeaderValue;
- (void)encode:(CDUnknownBlockType)arg1;
- (id)initWithStream:(id)arg1 andBoundary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FABSettings : NSObject
{
    _Bool _reportingEnabled;
    _Bool _errorReportingEnabled;
    NSNumber *_logBufferSize;
    NSNumber *_maxErrors;
    NSNumber *_maxCustomKeys;
    NSDictionary *_settingsDictionary;
    NSString *_settingsPath;
    NSFileManager *_fileManager;
}

@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) NSString *settingsPath; // @synthesize settingsPath=_settingsPath;
@property(retain, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
@property(readonly, nonatomic) NSNumber *maxCustomKeys; // @synthesize maxCustomKeys=_maxCustomKeys;
@property(readonly, nonatomic) NSNumber *maxErrors; // @synthesize maxErrors=_maxErrors;
@property(readonly, nonatomic) NSNumber *logBufferSize; // @synthesize logBufferSize=_logBufferSize;
@property(readonly, nonatomic) _Bool errorReportingEnabled; // @synthesize errorReportingEnabled=_errorReportingEnabled;
@property(readonly, nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (id)settingsURLForEndpoint:(id)arg1 appInstanceIdentifer:(id)arg2 appIconHash:(id)arg3;
- (void)clearSettingsDictionary;
- (id)appStatus;
- (id)appSettings;
- (id)appSource;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appPlatform;
- (id)appBundleIdentifier;
@property(readonly, nonatomic) _Bool appNeedsOnboarding;
@property(readonly, nonatomic) _Bool appUpdateRequired;
- (id)initWithSettingsPath:(id)arg1 fileManager:(id)arg2;

@end

@interface FABApplicationIdentiferModel : NSObject
{
    NSDictionary *_architectureUUIDMap;
    NSString *_installID;
    FABIcon *_icon;
    NSString *_bundleIdentifier;
    NSString *_instanceIdentifier;
    CDStruct_e24ffa00 _builtSDK;
    CDStruct_e24ffa00 _minimumSDK;
}

@property(readonly, nonatomic) CDStruct_e24ffa00 minimumSDK; // @synthesize minimumSDK=_minimumSDK;
@property(readonly, nonatomic) CDStruct_e24ffa00 builtSDK; // @synthesize builtSDK=_builtSDK;
@property(copy, nonatomic) NSString *instanceIdentifier; // @synthesize instanceIdentifier=_instanceIdentifier;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) FABIcon *icon; // @synthesize icon=_icon;
@property(readonly, nonatomic) NSString *installID; // @synthesize installID=_installID;
@property(copy, nonatomic) NSDictionary *architectureUUIDMap; // @synthesize architectureUUIDMap=_architectureUUIDMap;
- (void).cxx_destruct;
- (_Bool)computeInstanceIdentifier;
- (_Bool)computeExecutableInfo;
@property(readonly, nonatomic) NSString *minimumSDKString;
@property(readonly, nonatomic) NSString *builtSDKString;
- (id)initWithInstallID:(id)arg1;

@end

@interface FABDownloadAndSaveSettingsOperation : FABNetworkOperation
{
    id <FABDownloadAndSaveSettingsOperationDelegate> _delegate;
    NSError *_error;
    NSURL *_settingsURL;
    NSFileManager *_fileManager;
    NSString *_settingsDirectoryPath;
    NSString *_settingsFilePath;
    NSString *_installIdentifier;
    NSString *_advertisingToken;
    FABNetworkClient *_networkClient;
}

@property(readonly, nonatomic) __weak FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) NSString *advertisingToken; // @synthesize advertisingToken=_advertisingToken;
@property(readonly, nonatomic) NSString *installIdentifier; // @synthesize installIdentifier=_installIdentifier;
@property(readonly, nonatomic) NSString *settingsFilePath; // @synthesize settingsFilePath=_settingsFilePath;
@property(readonly, nonatomic) NSString *settingsDirectoryPath; // @synthesize settingsDirectoryPath=_settingsDirectoryPath;
@property(readonly, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) NSURL *settingsURL; // @synthesize settingsURL=_settingsURL;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) id <FABDownloadAndSaveSettingsOperationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)main;
- (id)mutableRequestWithDefaultHTTPHeaderFieldsAndTimeoutForURL:(id)arg1;
- (id)initWithAPIKey:(id)arg1 delegate:(id)arg2 settingsURL:(id)arg3 settingsDirectoryPath:(id)arg4 settingsFilePath:(id)arg5 fileManager:(id)arg6 installIdentifier:(id)arg7 advertisingToken:(id)arg8 networkClient:(id)arg9;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABNetworkResponseHandler : NSObject
{
}

+ (void)handleCompletedResponse:(id)arg1 forOriginalRequest:(id)arg2 error:(id)arg3 block:(CDUnknownBlockType)arg4;
+ (void)clientResponseType:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)errorForResponse:(id)arg1 ofType:(long long)arg2 status:(long long)arg3;
+ (id)errorForCode:(long long)arg1 userInfo:(id)arg2;
+ (_Bool)contentTypeForResponse:(id)arg1 matchesRequest:(id)arg2;
+ (id)requestIdForResponse:(id)arg1;
+ (double)retryValueForResponse:(id)arg1;
+ (id)headerForResponse:(id)arg1 withKey:(id)arg2;

@end

@interface FABOnboardingOperation : FABNetworkOperation
{
    _Bool _shouldCreate;
    NSError *_error;
    FABApplicationIdentiferModel *_appIdentifierModel;
    NSString *_appEndpoint;
    id <FABOnboardingOperationDelegate> _delegate;
    FABNetworkClient *_networkClient;
    NSDictionary *_kitVersionsByKitBundleIdentifier;
}

@property(readonly, copy, nonatomic) NSDictionary *kitVersionsByKitBundleIdentifier; // @synthesize kitVersionsByKitBundleIdentifier=_kitVersionsByKitBundleIdentifier;
@property(readonly, nonatomic) __weak FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) id <FABOnboardingOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *appEndpoint; // @synthesize appEndpoint=_appEndpoint;
@property(readonly, nonatomic) FABApplicationIdentiferModel *appIdentifierModel; // @synthesize appIdentifierModel=_appIdentifierModel;
@property(nonatomic) _Bool shouldCreate; // @synthesize shouldCreate=_shouldCreate;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)onboardingRequestForAppCreate:(_Bool)arg1;
- (id)appUpdateURL;
- (id)appCreateURL;
- (id)errorForCode:(unsigned long long)arg1 userInfo:(id)arg2;
- (id)appInstallSource;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appName;
- (id)appPlatform;
- (id)appBundleIdentifier;
- (void)beginAppConfigure;
- (void)main;
- (id)initWithDelegate:(id)arg1 shouldCreate:(_Bool)arg2 APIKey:(id)arg3 kitVersionsByKitBundleIdentifier:(id)arg4 appIdentifierModel:(id)arg5 endpointString:(id)arg6 networkClient:(id)arg7;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABNetworkClient : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate>
{
    FABCertificatePinner *_certPinner;
    NSURLSession *_session;
}

@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)invalidateAndCancel;
- (void)startDownloadTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDownloadTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startDownloadTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 tries:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)startDataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDataTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startDataTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 tries:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)runAfterRetryValueFromResponse:(id)arg1 attempts:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)runAfterRetryValueFromResponse:(id)arg1 attempts:(unsigned long long)arg2 onQueue:(id)arg3 block:(CDUnknownBlockType)arg4;
- (double)computeDelayForResponse:(id)arg1 withRetryCount:(unsigned long long)arg2;
- (double)generateRandomJitter;
- (double)randomDoubleWithMin:(double)arg1 max:(double)arg2;
- (void)dealloc;
- (id)initWithSessionConfiguration:(id)arg1 queue:(id)arg2 pinnedCertificates:(id)arg3;
- (id)initWithQueue:(id)arg1 pinnedCertificates:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSdSYM : NSObject
{
    CLSMachOBinary *_binary;
    NSBundle *_bundle;
}

+ (id)dSYMWithURL:(id)arg1;
@property(readonly, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(readonly, nonatomic) CLSMachOBinary *binary; // @synthesize binary=_binary;
- (void).cxx_destruct;
- (void)enumerateUUIDs:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *shortBundleVersion;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSString *executablePath;
@property(readonly, copy, nonatomic) NSURL *executableURL;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier;
- (id)initWithURL:(id)arg1;

@end

@interface CLSCodeMapping : NSObject
{
    int _source;
    NSURL *_URL;
    NSString *_sourceName;
}

+ (id)mappingWithURL:(id)arg1;
@property(readonly, copy, nonatomic) NSString *sourceName; // @synthesize sourceName=_sourceName;
@property(nonatomic) int source; // @synthesize source=_source;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1;

@end

@interface CLSMachOBinary : NSObject
{
    NSURL *_url;
    struct CLSMachOFile _file;
    NSMutableArray *_slices;
    NSString *_instanceIdentifier;
}

+ (id)hashNSString:(id)arg1;
+ (id)MachOBinaryWithPath:(id)arg1;
@property(readonly, nonatomic) NSArray *slices; // @synthesize slices=_slices;
- (void).cxx_destruct;
- (id)sliceForArchitecture:(id)arg1;
- (void)enumerateUUIDs:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *instanceIdentifier;
@property(readonly, copy, nonatomic) NSString *path;
@property(readonly, copy, nonatomic) NSURL *URL;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface CLSMachOSlice : NSObject
{
    struct CLSMachOSlice _slice;
    NSString *_uuidString;
    NSArray *_linkedDylibs;
    CDStruct_e24ffa00 _minimumOSVersion;
    CDStruct_e24ffa00 _linkedSDKVersion;
}

+ (id)runningSlice;
@property(readonly, nonatomic) CDStruct_e24ffa00 linkedSDKVersion; // @synthesize linkedSDKVersion=_linkedSDKVersion;
@property(readonly, nonatomic) CDStruct_e24ffa00 minimumOSVersion; // @synthesize minimumOSVersion=_minimumOSVersion;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *linkedDylibs;
@property(readonly, copy, nonatomic) NSString *uuid;
@property(readonly, copy, nonatomic) NSString *architectureName;
- (id)initWithSlice:(struct CLSMachOSlice *)arg1;

@end

@interface CLSURLSessionDownloadTask : CLSURLSessionDataTask <NSStreamDelegate>
{
    CDUnknownBlockType _downloadCompletionHandler;
    NSOutputStream *_outputStream;
    NSURL *_targetURL;
}

@property(copy, nonatomic) CDUnknownBlockType downloadCompletionHandler; // @synthesize downloadCompletionHandler=_downloadCompletionHandler;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)completeForError;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)writeDataToStream:(id)arg1;
- (void)complete;
- (void)cleanup;
- (id)temporaryFileURL;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSessionTask : NSObject
{
    id <CLSURLSessionTaskDelegate> _delegate;
    NSURLRequest *_originalRequest;
    NSURLRequest *_currentRequest;
    NSURLResponse *_response;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _invokesDelegate;
}

+ (id)task;
@property(nonatomic) id <CLSURLSessionTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool invokesDelegate; // @synthesize invokesDelegate=_invokesDelegate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(copy, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
@property(copy, nonatomic) NSURLRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
- (void).cxx_destruct;
- (void)cleanup;
- (void)resume;
- (void)cancel;
- (void)start;
- (id)init;

@end

@interface CLSURLSessionDataTask : CLSURLSessionTask <NSURLConnectionDelegate>
{
    CDUnknownBlockType _completionHandler;
    NSURLConnection *_connection;
    NSMutableData *_data;
    NSString *_taskDescription;
}

@property(copy, nonatomic) NSString *taskDescription; // @synthesize taskDescription=_taskDescription;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)cancel;
- (void)complete;
- (void)resume;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSession : NSObject <CLSURLSessionDownloadDelegate>
{
    id <NSURLSessionDelegate> _delegate;
    NSOperationQueue *_delegateQueue;
    NSURLSessionConfiguration *_configuration;
    NSMutableSet *_taskSet;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_sessionDescription;
}

+ (id)newDefaultDelegateQueue;
+ (id)sessionWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
+ (id)sessionWithConfiguration:(id)arg1;
+ (_Bool)NSURLSessionShouldBeUsed;
@property(copy, nonatomic) NSString *sessionDescription; // @synthesize sessionDescription=_sessionDescription;
@property(copy, nonatomic) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSOperationQueue *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(retain, nonatomic) id <NSURLSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)downloadTask:(id)arg1 didFinishDownloadingToURL:(id)arg2;
- (void)task:(id)arg1 didReceiveData:(id)arg2;
- (void)task:(id)arg1 didReceiveResponse:(id)arg2;
- (void)task:(id)arg1 didCompleteWithError:(id)arg2;
- (id)task:(id)arg1 willPerformHTTPRedirection:(id)arg2 newRequest:(id)arg3;
- (id)downloadTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)dataTaskWithRequest:(id)arg1;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)downloadTaskWithURL:(id)arg1;
- (id)downloadTaskWithRequest:(id)arg1;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2;
- (_Bool)shouldInvokeDelegateSelector:(SEL)arg1 forTask:(id)arg2;
- (void)configureTask:(id)arg1 withRequest:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeTaskFromSet:(id)arg1;
- (void)getTasksWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishTasksAndInvalidate;
- (void)invalidateAndCancel;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSessionConfiguration : NSObject <NSCopying>
{
    NSDictionary *_additionalHeaders;
    NSURLCache *_URLCache;
    unsigned long long _cookiePolicy;
}

+ (id)backgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)backgroundSessionConfiguration:(id)arg1;
+ (id)ephemeralSessionConfiguration;
+ (id)defaultSessionConfiguration;
@property(nonatomic) unsigned long long HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_cookiePolicy;
@property(copy, nonatomic) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_additionalHeaders;
@property(retain, nonatomic) NSURLCache *URLCache; // @synthesize URLCache=_URLCache;
- (void).cxx_destruct;
@property(nonatomic) _Bool sessionSendsLaunchEvents;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface CLSURLSessionUploadTask : CLSURLSessionDataTask
{
}

@end

@interface CLSUserDefaults : NSObject
{
    NSURL *_directoryURL;
    NSURL *_fileURL;
    NSMutableDictionary *_dataDictionary;
    NSObject<OS_dispatch_queue> *_serialDictionaryQueue;
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
}

+ (id)standardUserDefaults;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue; // @synthesize synchronizationQueue=_synchronizationQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialDictionaryQueue; // @synthesize serialDictionaryQueue=_serialDictionaryQueue;
@property(readonly, copy, nonatomic) NSMutableDictionary *dataDictionary; // @synthesize dataDictionary=_dataDictionary;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, copy, nonatomic) NSURL *directoryURL; // @synthesize directoryURL=_directoryURL;
- (void).cxx_destruct;
- (id)objectForKeyByMigratingFromNSUserDefaults:(id)arg1;
- (void)migrateFromNSUserDefaults:(id)arg1;
- (id)loadDefaults;
- (void)synchronize;
- (id)dictionaryRepresentation;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)boolForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)getEscapedAppBundleIdentifier;
- (id)generateDirectoryURLForBaseURL:(id)arg1 hostAppBundleIdentifier:(id)arg2;
- (id)generateDirectoryURL;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FABAsyncOperation : NSOperation
{
    _Bool _internalExecuting;
    _Bool _internalFinished;
    CDUnknownBlockType _asyncCompletion;
    NSRecursiveLock *_lock;
}

@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(copy, nonatomic) CDUnknownBlockType asyncCompletion; // @synthesize asyncCompletion=_asyncCompletion;
- (void).cxx_destruct;
- (void)finishWithError:(id)arg1;
- (void)markDone;
- (void)markStarted;
- (void)unlockedMarkComplete;
- (void)unlockedMarkStarted;
- (void)unlockedMarkFinished;
- (_Bool)checkForCancellation;
- (void)lock:(CDUnknownBlockType)arg1;
- (void)changeValueForKey:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)start;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (_Bool)isConcurrent;
- (id)init;

@end

@interface FABCompoundOperation : FABAsyncOperation
{
    NSArray *_operations;
    NSOperationQueue *_compoundQueue;
    unsigned long long _completedOperations;
    NSMutableArray *_errors;
    NSObject<OS_dispatch_queue> *_countingQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *countingQueue; // @synthesize countingQueue=_countingQueue;
@property(retain, nonatomic) NSMutableArray *errors; // @synthesize errors=_errors;
@property(nonatomic) unsigned long long completedOperations; // @synthesize completedOperations=_completedOperations;
@property(retain, nonatomic) NSOperationQueue *compoundQueue; // @synthesize compoundQueue=_compoundQueue;
@property(copy, nonatomic) NSArray *operations; // @synthesize operations=_operations;
- (void).cxx_destruct;
- (void)attemptCompoundCompletion;
- (void)updateCompletionCountsWithError:(id)arg1;
- (void)injectCompoundSyncCompletionInOperation:(id)arg1;
- (void)injectCompoundAsyncCompletionInOperation:(id)arg1;
- (void)cancel;
- (void)main;
- (id)init;

@end

@interface CLSInternalReport : NSObject
{
    NSString *_identifier;
    NSString *_path;
    NSArray *_metadataSections;
}

+ (id)readMetadataAtPath:(id)arg1;
+ (id)reportWithPath:(id)arg1;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
@property(readonly, copy, nonatomic) NSDate *dateCreated;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *APIKey;
- (id)metadataSections;
- (void)enumerateSymbolicatableFilesInContent:(CDUnknownBlockType)arg1;
- (_Bool)checkExistenceOfAtLeastOnceFileInArray:(id)arg1;
@property(readonly, nonatomic) _Bool isCrash;
- (id)crashFilenames;
@property(readonly, nonatomic) _Bool needsToBeSubmitted;
@property(readonly, copy, nonatomic) NSString *binaryImagePath;
@property(readonly, copy, nonatomic) NSString *metadataPath;
- (id)pathForContentFile:(id)arg1;
@property(readonly, copy, nonatomic) NSString *directoryName;
- (id)initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1 executionIdentifier:(id)arg2;

@end

@interface Crashlytics : NSObject <FABKit, CLSCrashReportingControllerDelegate, CLSBetaControllerDelegate, WKScriptMessageHandler>
{
    id <CrashlyticsDelegate> _delegate;
    CLSCrashReportingController *_crashReportingController;
    CLSBetaController *_betaController;
}

+ (void)logEvent:(id)arg1 attributes:(id)arg2;
+ (void)logEvent:(id)arg1;
+ (void)setDevelopmentPlatformVersion:(id)arg1;
+ (void)setDevelopmentPlatformName:(id)arg1;
+ (void)setFloatValue:(float)arg1 forKey:(id)arg2;
+ (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
+ (void)setIntValue:(int)arg1 forKey:(id)arg2;
+ (void)setObjectValue:(id)arg1 forKey:(id)arg2;
+ (void)setUserEmail:(id)arg1;
+ (void)setUserName:(id)arg1;
+ (void)setUserIdentifier:(id)arg1;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2 afterDelay:(double)arg3;
+ (id)startWithAPIKey:(id)arg1 afterDelay:(double)arg2;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2;
+ (id)startWithAPIKey:(id)arg1;
+ (void)initializeIfNeeded;
+ (id)kitBuildVersion;
+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (id)sharedInstance;
@property(readonly, nonatomic) CLSBetaController *betaController; // @synthesize betaController=_betaController;
- (void).cxx_destruct;
- (void)logEvent:(id)arg1 attributes:(id)arg2;
- (void)logEvent:(id)arg1;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (id)settingsForBetaController:(id)arg1;
- (id)APIKeyForBetaController:(id)arg1;
- (id)settingsForCrashReportingController:(id)arg1;
- (_Bool)isFirstInstallForCrashReportingController:(id)arg1;
- (id)installIDForCrashReportingController:(id)arg1;
- (id)APIKeyForCrashReportingController:(id)arg1;
- (_Bool)reportingController:(id)arg1 ensureDeliveryOfUnixSignal:(int)arg2;
- (void)reportingController:(id)arg1 internalDidDetectReportForLastExecution:(id)arg2;
- (void)reportingController:(id)arg1 didDetectReportForLastExecution:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)reportingControllerMustInformDelegateOfReports:(id)arg1;
- (_Bool)reportingControllerCanUseBackgroundSessions:(id)arg1;
- (void)detectedCrash;
- (_Bool)shouldInstallCrashCallback;
- (void)warnDelegateAboutMethods;
- (_Bool)delegateRespondsToLegacyMethods;
- (void)monitorErrorsForWKWebViewConfiguration:(id)arg1;
- (_Bool)handleWebView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)monitorErrorsForUIWebView:(id)arg1;
- (void)recordCustomExceptionName:(id)arg1 reason:(id)arg2 frameArray:(id)arg3;
- (void)recordError:(id)arg1 withAdditionalUserInfo:(id)arg2;
- (void)recordError:(id)arg1;
- (void)setDevelopmentPlatformVersion:(id)arg1;
- (id)developmentPlatformVersion;
- (void)setDevelopmentPlatformName:(id)arg1;
- (id)developmentPlatformName;
- (void)setFloatValue:(float)arg1 forKey:(id)arg2;
- (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
- (void)setIntValue:(int)arg1 forKey:(id)arg2;
- (void)setObjectValue:(id)arg1 forKey:(id)arg2;
- (void)setUserEmail:(id)arg1;
- (void)setUserName:(id)arg1;
- (void)setUserIdentifier:(id)arg1;
- (void)throwException;
- (void)crash;
@property(nonatomic) id <CrashlyticsDelegate> delegate;
@property(nonatomic) _Bool debugMode;
- (_Bool)isCrashlyticsStarted;
- (id)settingsDictionary;
- (_Bool)isFirstInstall;
- (id)installID;
@property(readonly, copy, nonatomic) NSString *APIKey;
- (void)setKitInfo:(id)arg1;
- (id)kitInfo;
- (id)bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *version;
- (void)start;
- (id)initWithSuper;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSFileManager : NSObject
{
    NSString *_rootPath;
    NSFileManager *_underlyingFileManager;
}

@property(readonly, copy, nonatomic) NSString *rootPath; // @synthesize rootPath=_rootPath;
@property(readonly, nonatomic) NSFileManager *underlyingFileManager; // @synthesize underlyingFileManager=_underlyingFileManager;
- (void).cxx_destruct;
- (_Bool)removeContentsOfAllPaths;
- (_Bool)removeContentsOfPendingPath;
- (_Bool)removeContentsOfProcessingPath;
- (_Bool)movePendingToProcessing;
- (_Bool)moveProcessingContentsToPrepared;
- (void)enumerateFilesInPreparedDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFilesInActiveDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateReportsInProcessingDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeLegacyDirectories;
- (id)setupNewPathForExecutionIdentifier:(id)arg1;
- (_Bool)prepareForNewLaunch;
@property(readonly, nonatomic) NSArray *processingPathContents;
@property(readonly, nonatomic) NSArray *preparedPathContents;
@property(readonly, nonatomic) NSArray *activePathContents;
@property(readonly, copy, nonatomic) NSString *preparedPath;
@property(readonly, copy, nonatomic) NSString *processingPath;
@property(readonly, copy, nonatomic) NSString *pendingPath;
@property(readonly, copy, nonatomic) NSString *activePath;
@property(readonly, copy, nonatomic) NSString *structurePath;
- (id)pathNamespace;
- (id)contentsOfDirectory:(id)arg1;
- (id)fileSizeAtPath:(id)arg1;
- (_Bool)moveItemsFromDirectory:(id)arg1 toDirectory:(id)arg2;
- (void)enumerateFilesInDirectory:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)moveItemAtPath:(id)arg1 toDirectory:(id)arg2;
- (_Bool)removeContentsOfDirectoryAtPath:(id)arg1;
- (_Bool)removeItemAtPath:(id)arg1;
- (_Bool)createDirectoryAtPath:(id)arg1;
- (id)init;

@end

@interface CLSAlert : NSObject
{
}

+ (id)alertWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitle:(id)arg5;

@end

@interface CLSDemangleOperation : CLSThreadArrayOperation
{
}

+ (id)demangleSwiftSymbol:(const char *)arg1;
+ (id)demangleCppSymbol:(const char *)arg1;
+ (id)demangleBlockInvokeCppSymbol:(const char *)arg1;
+ (id)demangleSymbol:(const char *)arg1;
- (void)main;
- (id)demangleSymbol:(const char *)arg1;

@end

@interface CLSPackageReportOperation : NSOperation
{
    CLSInternalReport *_report;
    CLSFileManager *_fileManager;
    NSString *_finalPath;
}

@property(copy, nonatomic) NSString *finalPath; // @synthesize finalPath=_finalPath;
@property(readonly, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) CLSInternalReport *report; // @synthesize report=_report;
- (void).cxx_destruct;
- (void)encode:(id)arg1 data:(id)arg2 fromPath:(id)arg3;
- (void)main;
- (id)packagedPathWithName:(id)arg1;
- (id)destinationDirectory;
- (id)reportPath;
- (_Bool)writeBytes:(const void *)arg1 length:(unsigned long long)arg2 toGZFile:(void *)arg3;
- (_Bool)compressData:(id)arg1 toPath:(id)arg2;
- (id)initWithReport:(id)arg1 fileManager:(id)arg2;

@end

@interface CLSSerializeSymbolicatedFramesOperation : CLSThreadArrayOperation
{
    NSString *_outputPath;
}

@property(copy, nonatomic) NSString *outputPath; // @synthesize outputPath=_outputPath;
- (void).cxx_destruct;
- (void)main;

@end

@interface CLSProcessReportOperation : NSOperation
{
    CLSSymbolResolver *_symbolResolver;
    CLSInternalReport *_report;
}

@property(readonly, nonatomic) CLSInternalReport *report; // @synthesize report=_report;
@property(readonly, nonatomic) CLSSymbolResolver *symbolResolver; // @synthesize symbolResolver=_symbolResolver;
- (void).cxx_destruct;
- (void)main;
- (_Bool)symbolicateFile:(id)arg1 withResolver:(id)arg2;
- (id)threadArrayFromFile:(id)arg1;
- (id)binaryImagePath;
- (id)initWithReport:(id)arg1 resolver:(id)arg2;

@end

@interface CLSSettings : NSObject
{
    NSDictionary *_settingsDictionary;
}

@property(readonly, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *interactivePromptAlwaysSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptCancelTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptMessage;
@property(readonly, copy, nonatomic) NSString *interactivePromptTitle;
- (id)promptValueForSettingsKey:(id)arg1 withLocalizedKey:(id)arg2 defaultValue:(id)arg3;
@property(readonly, nonatomic) unsigned int maxCustomKeys;
@property(readonly, nonatomic) unsigned int maxCustomExceptions;
@property(readonly, nonatomic) unsigned int logBufferSize;
@property(readonly, nonatomic) unsigned int errorLogBufferSize;
@property(readonly, nonatomic) _Bool userPromptEnabled;
@property(readonly, nonatomic) _Bool crashReportingEnabled;
@property(readonly, nonatomic) _Bool customExceptionsEnabled;
@property(readonly, nonatomic) _Bool errorReportingEnabled;
@property(readonly, nonatomic) _Bool canProcessUrgentReports;
@property(readonly, nonatomic) _Bool shouldSubmitReports;
@property(readonly, nonatomic) _Bool shouldPackageReports;
@property(readonly, copy, nonatomic) NSString *reportsEndpoint;
@property(readonly, copy, nonatomic) NSNumber *betaSuspendDuration;
@property(readonly, copy, nonatomic) NSString *betaEndpoint;
- (id)valueForConfigurationKey:(id)arg1;
- (id)defaultConfiguration;
- (id)configuration;
- (id)initWithDictionary:(id)arg1;

@end

@interface CLSBetaController : NSObject <NSURLSessionDelegate>
{
    NSString *_betaToken;
    _Bool _checksSuspended;
    _Bool _retrying;
    id <CLSBetaControllerDelegate> _delegate;
    FABNetworkClient *_networkClient;
    CLSBetaUpdate *_activeUpdate;
    NSTimer *_checkSuspensionTimer;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)pinnnedCertificates;
+ (_Bool)isBetaSupported;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool retrying; // @synthesize retrying=_retrying;
@property(nonatomic) _Bool checksSuspended; // @synthesize checksSuspended=_checksSuspended;
@property(retain, nonatomic) NSTimer *checkSuspensionTimer; // @synthesize checkSuspensionTimer=_checkSuspensionTimer;
@property(retain, nonatomic) CLSBetaUpdate *activeUpdate; // @synthesize activeUpdate=_activeUpdate;
@property(readonly, nonatomic) FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(nonatomic) __weak id <CLSBetaControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)fabricSettingsDownloaded:(id)arg1;
- (void)showBetaAlertForUpdate:(id)arg1;
- (void)didGetUpdate:(id)arg1;
- (_Bool)shouldGetUpdates;
- (void)applicationWillEnterForeground;
- (void)allowChecks;
- (void)temporarilySuspendChecks;
- (id)updateWithData:(id)arg1 error:(id *)arg2;
- (void)handledCompletedBetaRequestWithData:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadUpdateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)maybeGetUpdate:(CDUnknownBlockType)arg1;
- (void)checkForUpdate;
- (id)betaUpdateURL;
- (id)APIKey;
- (id)appInstallationSource;
- (id)appInstanceIdentifier;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appBundleIdentifier;
- (id)betaEndpoint;
- (id)betaUpdateSuspendDurationSecs;
- (id)settings;
@property(readonly, copy, nonatomic) NSString *betaToken;
- (void)dealloc;
- (_Bool)start;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSSymbolResolver : NSObject
{
    NSMutableArray *_binaryImages;
}

- (void).cxx_destruct;
- (_Bool)updateStackFrame:(id)arg1;
- (id)frameForAddress:(unsigned long long)arg1;
- (_Bool)fillInImageDetails:(CDStruct_fad71a87 *)arg1 forUUID:(id)arg2;
- (id)loadedBinaryImageForPC:(unsigned long long)arg1;
- (_Bool)loadBinaryImagesFromFile:(id)arg1;
- (id)init;

@end

@interface CLSCrashReportingController : NSObject <CLSNetworkClientDelegate, CLSReportsControllerDelegate>
{
    CLSFileManager *_fileMananger;
    CLSNetworkClient *_networkClient;
    CLSReportsController *_reportsController;
    NSOperationQueue *_operationQueue;
    CLSSettings *_settings;
    long long _alwaysSendButtonIndex;
    UIAlertView *_crashReportSubmissionAlert;
    CLSInternalReport *_promptedReport;
    long long _promptChoice;
    id <CLSCrashReportingControllerDelegate> _delegate;
    CLSFileManager *_fileManager;
}

@property(retain, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) CLSNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSCrashReportingControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reportsControllerDidCompleteAllSubmissions:(id)arg1;
- (void)reportsController:(id)arg1 didCompletePackageSubmission:(id)arg2 error:(id)arg3;
- (id)bundleIdentifierForReportsController:(id)arg1;
- (id)APIKeyForReportsController:(id)arg1;
- (id)settingsForReportsController:(id)arg1;
- (void)networkClient:(id)arg1 didFinishUploadWithPath:(id)arg2 error:(id)arg3;
- (_Bool)networkClientCanUseBackgroundSessions:(id)arg1;
- (void)didChangeUIOrientation:(id)arg1;
- (void)didChangeOrientation:(id)arg1;
- (void)didBecomeInactive:(id)arg1;
- (void)willBecomeActive:(id)arg1;
- (void)captureInitialNotificationStates;
- (void)setupStateNotifications;
- (_Bool)checkForAndCreateLaunchMarker;
- (_Bool)removeLaunchFailureMarker;
- (_Bool)launchFailureMarkerPresent;
- (_Bool)createLaunchFailureMarker;
- (id)launchFailureMarkerPath;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)handlePromptCompleteForReport:(id)arg1 shouldSubmit:(_Bool)arg2 shouldMarkAlwaysSubmit:(_Bool)arg3;
- (void)setupAndDisplayAlertWithTitle:(id)arg1 message:(id)arg2 cancel:(id)arg3 send:(id)arg4 alwaysSend:(id)arg5 report:(id)arg6;
- (void)displayPermissionAlertForReport:(id)arg1;
- (void)retryUploadForReportAtPath:(id)arg1;
- (void)uploadPreexistingFiles:(id)arg1;
- (void)handleExistingFilesInPrepared;
- (void)handleExistingFilesInProcessing;
- (void)handleContentsInOtherReportingDirectories;
- (void)removeReport:(id)arg1;
- (void)handleDelegateCompletionForReport:(id)arg1 submit:(_Bool)arg2;
- (void)processExistingActiveReportPath:(id)arg1 asUrgent:(_Bool)arg2;
- (void)processExistingReportPaths:(id)arg1 asUrgent:(_Bool)arg2;
- (id)setupCurrentReport;
- (_Bool)installCrashReportingHandlers:(CDStruct_1e2a2a70 *)arg1;
- (_Bool)prepareForNewLaunch;
- (id)bundleIdentifier;
- (_Bool)needsToPrompt;
- (_Bool)canProcessUrgentReports;
- (_Bool)delegateNeedsToBeInformedOfReports;
- (_Bool)packagingEnabled;
- (void)checkForUserPromptSetting;
- (_Bool)potentiallySubmittableCrashOccurred;
- (_Bool)attemptCurrentReportSubmission;
- (void)deliverCrashDelegateCallback;
- (unsigned int)machExceptionMask;
- (id)settings;
- (id)APIKey;
- (id)installIdentifier;
- (_Bool)firstInstall;
@property(readonly, nonatomic) CLSReportsController *reportsController;
- (_Bool)checkPreconditions;
- (void)crashReportingSetupCompleted:(unsigned long long)arg1;
- (_Bool)startCrashReporterWithAPIKey:(id)arg1 betaToken:(id)arg2 profilingMark:(unsigned long long)arg3 report:(id)arg4;
- (_Bool)startWithProfilingMark:(unsigned long long)arg1 betaToken:(id)arg2;
- (id)clientWithOperationQueue:(id)arg1;
- (id)initWithFileManager:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSStackFrame : NSObject
{
    unsigned int _lineNumber;
    NSString *_symbol;
    NSString *_rawSymbol;
    NSString *_library;
    NSString *_fileName;
    unsigned long long _offset;
    unsigned long long _address;
}

+ (id)stackFrameWithSymbol:(id)arg1;
+ (id)stackFrameWithAddress:(unsigned long long)arg1;
+ (id)stackFrame;
@property(nonatomic) unsigned long long address; // @synthesize address=_address;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned int lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSString *library; // @synthesize library=_library;
@property(copy, nonatomic) NSString *rawSymbol; // @synthesize rawSymbol=_rawSymbol;
@property(copy, nonatomic) NSString *symbol; // @synthesize symbol=_symbol;
- (void).cxx_destruct;
- (id)description;

@end

@interface CLSSymbolicationOperation : CLSThreadArrayOperation
{
    CLSSymbolResolver *_symbolResolver;
}

@property(retain, nonatomic) CLSSymbolResolver *symbolResolver; // @synthesize symbolResolver=_symbolResolver;
- (void).cxx_destruct;
- (void)main;

@end

@interface CLSReportsController : NSObject
{
    id <CLSReportsControllerDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    CLSNetworkClient *_networkClient;
    CLSFileManager *_fileManager;
}

@property(readonly, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) CLSNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSReportsControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reportUploadAtPath:(id)arg1 completedWithError:(id)arg2;
- (_Bool)cleanUpSubmittedReportAtPath:(id)arg1;
- (_Bool)uploadPackagedReportAtPath:(id)arg1 asUrgent:(_Bool)arg2;
- (_Bool)submitPackageMultipartMimeAtPath:(id)arg1 synchronously:(_Bool)arg2;
- (_Bool)prepareAndSubmitReport:(id)arg1 asUrgent:(_Bool)arg2 withProcessing:(_Bool)arg3;
- (_Bool)fillInRequest:(id)arg1 forMultipartMimeDataAtPath:(id)arg2;
- (id)mutableRequestWithURL:(id)arg1 timeout:(double)arg2;
- (id)APIKey;
- (id)localeIdentifier;
- (_Bool)packagingEnabled;
- (_Bool)submissionEnabled;
- (id)reportURL;
- (id)reportEndpoint;
- (id)appBundleIdentifier;
- (id)settings;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2 client:(id)arg3 fileManager:(id)arg4;

@end

@interface CLSReport : NSObject <CLSCrashReport>
{
    CLSInternalReport *_internalReport;
    unsigned int _internalKVCounter;
    unsigned int _userKVCounter;
    NSString *_internalCompactedKVFile;
    NSString *_internalIncrementalKVFile;
    NSString *_userCompactedKVFile;
    NSString *_userIncrementalKVFile;
}

@property(readonly, nonatomic) CLSInternalReport *internalReport; // @synthesize internalReport=_internalReport;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *userEmail;
@property(copy, nonatomic) NSString *userName;
@property(copy, nonatomic) NSString *userIdentifier;
- (void)setObjectValue:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) _Bool isCrash;
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
@property(readonly, copy, nonatomic) NSDate *crashedOnDate;
@property(readonly, copy, nonatomic) NSDate *dateCreated;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *identifier;
- (void)recordValue:(id)arg1 forUserKey:(id)arg2;
- (void)recordValue:(id)arg1 forInternalKey:(id)arg2;
- (CDStruct_4355734a)userKVStorage;
- (CDStruct_4355734a)internalKVStorage;
- (id)initWithInternalReport:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSThreadArrayOperation : NSOperation
{
    NSArray *_threadArray;
}

@property(retain, nonatomic) NSArray *threadArray; // @synthesize threadArray=_threadArray;
- (void).cxx_destruct;
- (void)enumerateFramesWithBlock:(CDUnknownBlockType)arg1;

@end

@interface CLSBetaUpdate : NSObject
{
    NSURL *_url;
    NSString *_version;
}

+ (id)betaUpdateWithDictionary:(id)arg1 error:(id *)arg2;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *installLabel;
@property(readonly, copy, nonatomic) NSString *cancelLabel;
@property(readonly, copy, nonatomic) NSString *promptMessage;
@property(readonly, copy, nonatomic) NSString *promptTitle;
- (id)initWithDictionary:(id)arg1;

@end

@interface CLSNetworkClient : NSObject <NSURLSessionDelegate>
{
    NSURLSession *_session;
    _Bool _canUseBackgroundSession;
    id <CLSNetworkClientDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    FABCertificatePinner *_certPinner;
    CDUnknownBlockType _backgroundCompletionHandler;
    CLSFileManager *_fileManager;
}

+ (id)pinner;
@property(retain, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(nonatomic) _Bool canUseBackgroundSession; // @synthesize canUseBackgroundSession=_canUseBackgroundSession;
@property(copy, nonatomic) CDUnknownBlockType backgroundCompletionHandler; // @synthesize backgroundCompletionHandler=_backgroundCompletionHandler;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSNetworkClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)handleTaskDescription:(id)arg1 completedWithError:(id)arg2;
- (void)handleTask:(id)arg1 completedWithError:(id)arg2;
- (void)restartTask:(id)arg1;
- (void)runAfterRetryValueFromResponse:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)checkForExistingTaskMatchingDescription:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)checkSession:(id)arg1 forTasksMatchingDescription:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)taskArray:(id)arg1 hasTaskMatchingDescription:(id)arg2;
- (id)relativeTaskPathForAbsolutePath:(id)arg1;
- (id)absolutePathForRelativeTaskPath:(id)arg1;
- (id)rootPath;
- (void)startNewUploadRequest:(id)arg1 filePath:(id)arg2;
- (void)startImmediateUploadRequest:(id)arg1 filePath:(id)arg2;
- (void)startUploadRequest:(id)arg1 filePath:(id)arg2 immediately:(_Bool)arg3;
- (void)attemptToReconnectBackgroundSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsBackgroundRequests;
- (_Bool)NSURLSessionAvailable;
@property(readonly, nonatomic) NSURLSession *session;
- (id)initWithQueue:(id)arg1 fileManager:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Answers : NSObject <FABKit>
{
    ANSAnswersController *_answersController;
}

+ (void)initializeIfNeeded;
+ (id)kitBuildVersion;
+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (void)logCustomEventWithName:(id)arg1 customAttributes:(id)arg2;
+ (void)logSearchWithQuery:(id)arg1 customAttributes:(id)arg2;
+ (void)logContentViewWithName:(id)arg1 contentType:(id)arg2 contentId:(id)arg3 customAttributes:(id)arg4;
+ (void)logRating:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (void)logStartCheckoutWithPrice:(id)arg1 currency:(id)arg2 itemCount:(id)arg3 customAttributes:(id)arg4;
+ (void)logAddToCartWithPrice:(id)arg1 currency:(id)arg2 itemName:(id)arg3 itemType:(id)arg4 itemId:(id)arg5 customAttributes:(id)arg6;
+ (void)logLevelEnd:(id)arg1 score:(id)arg2 success:(id)arg3 customAttributes:(id)arg4;
+ (void)logLevelStart:(id)arg1 customAttributes:(id)arg2;
+ (void)logPurchaseWithPrice:(id)arg1 currency:(id)arg2 success:(id)arg3 itemName:(id)arg4 itemType:(id)arg5 itemId:(id)arg6 customAttributes:(id)arg7;
+ (void)logShareWithMethod:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (void)logLoginWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (void)logSignUpWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (void)logInviteWithMethod:(id)arg1 customAttributes:(id)arg2;
+ (void)logPreviousSessionCrashedOnDate:(id)arg1;
+ (void)startWithBetaToken:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) ANSAnswersController *answersController; // @synthesize answersController=_answersController;
- (void).cxx_destruct;
- (void)startWithBetaToken:(id)arg1;
- (void)configureLogging;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSPredefinedEvent : ANSEvent
{
    NSString *_predefinedEventName;
    ANSAttributeDictionary *_customAttributes;
    ANSAttributeDictionary *_predefinedAttributes;
}

+ (id)searchEventWithQuery:(id)arg1 customAttributes:(id)arg2;
+ (id)contentViewEventWithName:(id)arg1 contentType:(id)arg2 contentId:(id)arg3 customAttributes:(id)arg4;
+ (id)ratingEventWithRating:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (id)startCheckoutEventWithPrice:(id)arg1 currency:(id)arg2 itemCount:(id)arg3 customAttributes:(id)arg4;
+ (id)addToCartEventWithPrice:(id)arg1 currency:(id)arg2 itemName:(id)arg3 itemType:(id)arg4 itemId:(id)arg5 customAttributes:(id)arg6;
+ (id)levelEndEventWithLevelName:(id)arg1 score:(id)arg2 success:(id)arg3 customAttributes:(id)arg4;
+ (id)levelStartEventWithLevelName:(id)arg1 customAttributes:(id)arg2;
+ (id)purchaseEventWithPrice:(id)arg1 currency:(id)arg2 success:(id)arg3 itemName:(id)arg4 itemType:(id)arg5 itemId:(id)arg6 customAttributes:(id)arg7;
+ (id)inviteEventWithMethod:(id)arg1 customAttributes:(id)arg2;
+ (id)shareEventWithMethod:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (id)loginEventWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (id)signUpEventWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
@property(retain, nonatomic) ANSAttributeDictionary *predefinedAttributes; // @synthesize predefinedAttributes=_predefinedAttributes;
@property(retain, nonatomic) ANSAttributeDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(retain, nonatomic) NSString *predefinedEventName; // @synthesize predefinedEventName=_predefinedEventName;
- (void).cxx_destruct;
- (id)description;
- (id)dictionaryRepresentation;
- (id)name;

@end

@interface ANSCrashMetadata : NSObject <ANSMetadataSerializable>
{
    NSDictionary *_rawMetadataDictionary;
}

+ (_Bool)writeSerializedDictionary:(id)arg1 toURL:(id)arg2;
+ (id)readSerializedDictionaryFromURL:(id)arg1;
@property(readonly, nonatomic) NSDictionary *rawMetadataDictionary; // @synthesize rawMetadataDictionary=_rawMetadataDictionary;
- (void).cxx_destruct;
- (id)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (id)eventName;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSPackageLogOperation : NSOperation
{
    NSURL *_compressedLogURL;
    NSString *_multipartMimeBoundary;
    NSURL *_packagedLogURL;
}

@property(retain, nonatomic) NSURL *packagedLogURL; // @synthesize packagedLogURL=_packagedLogURL;
@property(retain, nonatomic) NSString *multipartMimeBoundary; // @synthesize multipartMimeBoundary=_multipartMimeBoundary;
@property(retain, nonatomic) NSURL *compressedLogURL; // @synthesize compressedLogURL=_compressedLogURL;
- (void).cxx_destruct;
- (id)multipartURLForCompressedURL:(id)arg1 withBoundary:(id)arg2;
- (void)main;
- (id)initWithCompressedLogURL:(id)arg1 packagedLogURL:(id)arg2 multipartMimeBoundary:(id)arg3;

@end

@interface ANSLifecycleEvent : ANSEvent
{
    NSString *_name;
}

+ (id)nameFromNotification:(id)arg1;
+ (id)notificationNameMap;
+ (id)appLaunchedEvent;
+ (id)installEvent;
+ (id)eventWithNotification:(id)arg1;
- (void).cxx_destruct;
- (_Bool)triggersFlush;
- (id)dictionaryRepresentation;
- (id)name;
- (id)initWithName:(id)arg1;
- (id)initWithNotification:(id)arg1;

@end

@interface ANSRotateCrashMetadataOperation : NSOperation
{
    NSURL *_crashMetadataURL;
    ANSMetadata *_currentMetadata;
    ANSCrashMetadata *_crashMetadata;
    NSDictionary *_currentMetadataDictionary;
}

@property(retain, nonatomic) NSDictionary *currentMetadataDictionary; // @synthesize currentMetadataDictionary=_currentMetadataDictionary;
@property(retain, nonatomic) ANSCrashMetadata *crashMetadata; // @synthesize crashMetadata=_crashMetadata;
@property(retain, nonatomic) ANSMetadata *currentMetadata; // @synthesize currentMetadata=_currentMetadata;
@property(retain, nonatomic) NSURL *crashMetadataURL; // @synthesize crashMetadataURL=_crashMetadataURL;
- (void).cxx_destruct;
- (void)main;
- (id)initWithCrashMetadataURL:(id)arg1 currentMetadata:(id)arg2;

@end

@interface ANSCleanupFilesOperation : NSOperation
{
    CDUnknownBlockType _successBlock;
    NSURL *_directoryUrl;
    long long _maximumPendingMultipartFiles;
}

@property(readonly, nonatomic) long long maximumPendingMultipartFiles; // @synthesize maximumPendingMultipartFiles=_maximumPendingMultipartFiles;
@property(readonly, nonatomic) NSURL *directoryUrl; // @synthesize directoryUrl=_directoryUrl;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
- (void).cxx_destruct;
- (id)URLsByRemovingOldFiles:(id)arg1 withMaximumFileCount:(long long)arg2;
- (void)main;
- (id)initWithDirectoryURL:(id)arg1 maximumPendingMulitpartFiles:(long long)arg2;

@end

@interface ANSAttributeDictionary : NSObject
{
    NSMutableDictionary *_rawDictionary;
}

@property(retain, nonatomic) NSMutableDictionary *rawDictionary; // @synthesize rawDictionary=_rawDictionary;
- (void).cxx_destruct;
- (id)serializeNSNumberAsInteger:(id)arg1;
- (id)serializePriceToMicros:(id)arg1;
- (id)serializeSuccess:(id)arg1;
- (id)truncateAttribute:(id)arg1;
- (_Bool)validAttributeValue:(id)arg1;
- (void)addPriceAttribute:(id)arg1 forKey:(id)arg2;
- (void)addBooleanAttribute:(id)arg1 forKey:(id)arg2;
- (void)addAttribute:(id)arg1 forKey:(id)arg2;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface ANSSettings : NSObject
{
    NSDictionary *_settingsDictionary;
}

@property(readonly, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
- (void).cxx_destruct;
@property(readonly, nonatomic) double lowPowerUploadTimeout;
@property(readonly, nonatomic) double defaultUploadTimeout;
@property(readonly, nonatomic) long long samplingRate;
@property(readonly, nonatomic) double flushInterval;
@property(readonly, nonatomic) long long maxPendingSendFiles;
@property(readonly, nonatomic) long long maximumPayloadSize;
@property(readonly, nonatomic) _Bool shouldCollectPredefinedEvents;
@property(readonly, nonatomic) _Bool shouldCollectCustomEvents;
@property(readonly, nonatomic) _Bool shouldCollectAnalytics;
@property(readonly, nonatomic) NSURL *answersURL;
@property(readonly, nonatomic) _Bool valid;
- (id)initWithDictionary:(id)arg1;

@end

@interface ANSMetadata : NSObject <ANSMetadataSerializable>
{
    _Bool _isJailbroken;
    unsigned int _numberOfCores;
    NSString *_APIKey;
    NSString *_betaToken;
    NSString *_buildVersion;
    NSString *_bundleIdentifier;
    NSString *_displayVersion;
    NSString *_executionIdentifier;
    NSString *_hostModel;
    NSString *_installationId;
    NSString *_instanceIdentifier;
    NSString *_locale;
    NSString *_OSBuildVersion;
    NSString *_OSDisplayVersion;
    NSString *_platform;
}

+ (id)identifierForAdvertisingWithManager:(id)arg1;
+ (id)identifierForAdvertising;
+ (_Bool)trackingForAdvertisingEnabled;
+ (_Bool)advertisingSupportFrameworkLinked;
+ (id)ASManager;
@property(readonly, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *OSDisplayVersion; // @synthesize OSDisplayVersion=_OSDisplayVersion;
@property(readonly, nonatomic) NSString *OSBuildVersion; // @synthesize OSBuildVersion=_OSBuildVersion;
@property(readonly, nonatomic) unsigned int numberOfCores; // @synthesize numberOfCores=_numberOfCores;
@property(readonly, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(readonly, nonatomic) _Bool isJailbroken; // @synthesize isJailbroken=_isJailbroken;
@property(readonly, nonatomic) NSString *instanceIdentifier; // @synthesize instanceIdentifier=_instanceIdentifier;
@property(readonly, nonatomic) NSString *installationId; // @synthesize installationId=_installationId;
@property(readonly, nonatomic) NSString *hostModel; // @synthesize hostModel=_hostModel;
@property(readonly, nonatomic) NSString *executionIdentifier; // @synthesize executionIdentifier=_executionIdentifier;
@property(readonly, nonatomic) NSString *displayVersion; // @synthesize displayVersion=_displayVersion;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(readonly, nonatomic) NSString *betaToken; // @synthesize betaToken=_betaToken;
@property(readonly, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (id)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toObject:(id)arg3;
- (id)eventName;
- (_Bool)computeIsJailbroken;
@property(readonly, nonatomic) unsigned int platformCode;
- (id)unwrapBetaToken:(id)arg1;
- (id)initWithFabric:(id)arg1 betaToken:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSEvent : NSObject
{
    NSDate *_timestamp;
    NSString *_identifier;
}

@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool triggersFlush;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) NSString *name;
- (id)init;

@end

@interface ANSFileUtils : NSObject
{
}

+ (id)fileCreatedDateAtURL:(id)arg1 withDefault:(id)arg2;
+ (id)fileSizeAtURL:(id)arg1;
+ (id)filesWithExtension:(id)arg1 inDirectory:(id)arg2;
+ (id)allFilesInDirectory:(id)arg1;

@end

@interface ANSBackoffTimer : NSObject
{
    unsigned long long _retryCount;
    double _initialValue;
    double _jitterCoefficient;
}

+ (_Bool)jitterCoefficientIsValid:(double)arg1;
@property(readonly, nonatomic) double jitterCoefficient; // @synthesize jitterCoefficient=_jitterCoefficient;
@property(nonatomic) double initialValue; // @synthesize initialValue=_initialValue;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
- (double)computeDelayForInitialValue:(double)arg1 retryCount:(unsigned long long)arg2;
- (double)generateRandomJitter;
- (double)randomDoubleWithMin:(double)arg1 max:(double)arg2;
- (void)executeBlockAfterNextInterval:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithInitialValue:(double)arg1 jitterCoefficient:(double)arg2;
- (id)initWithInitialValue:(double)arg1;

@end

@interface ANSNetworkRetryHandler : NSObject
{
    FABCertificatePinner *_certPinner;
    NSMutableDictionary *_retryTimerMap;
}

@property(readonly, nonatomic) NSMutableDictionary *retryTimerMap; // @synthesize retryTimerMap=_retryTimerMap;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
- (void).cxx_destruct;
- (id)timerForIdentifier:(id)arg1 initialRetryValue:(double)arg2;
- (void)handleCompletedRequest:(id)arg1 withResponse:(id)arg2 forIdentifier:(id)arg3 maxRetries:(unsigned long long)arg4 error:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)handleCompletedRequest:(id)arg1 withResponse:(id)arg2 forIdentifier:(id)arg3 error:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)errorWithCode:(long long)arg1 forIdentifier:(id)arg2 request:(id)arg3 handlerError:(id)arg4;
- (double)retryValueForResponse:(id)arg1;
- (void)handleChallenge:(id)arg1 fromURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)sharedFabricSDK;
- (id)init;

@end

@interface ANSWriteEventOperation : NSOperation
{
    _Bool _success;
    ANSEvent *_event;
    id <ANSMetadataSerializable> _metadata;
    NSURL *_logFileUrl;
    NSString *_formattedEvent;
    NSString *_formattedMetadata;
}

@property(retain, nonatomic) NSString *formattedMetadata; // @synthesize formattedMetadata=_formattedMetadata;
@property(retain, nonatomic) NSString *formattedEvent; // @synthesize formattedEvent=_formattedEvent;
@property(nonatomic) _Bool success; // @synthesize success=_success;
@property(retain, nonatomic) NSURL *logFileUrl; // @synthesize logFileUrl=_logFileUrl;
@property(readonly, nonatomic) id <ANSMetadataSerializable> metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) ANSEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)logLineWithTimestamp:(id)arg1 eventName:(id)arg2 payloadDictionary:(id)arg3;
- (id)generateFormattedLogLineWithMetdata:(id)arg1 timestamp:(id)arg2;
- (id)generateFormattedLogLineWithEvent:(id)arg1;
- (_Bool)appendLogLine:(id)arg1 toFileDescriptor:(int)arg2;
- (_Bool)writeDataToDescriptor:(int)arg1 withPreexistingFile:(_Bool)arg2;
- (void)main;
- (id)initWithEvent:(id)arg1 metadata:(id)arg2 logFileUrl:(id)arg3;

@end

@interface ANSTimer : NSObject
{
    NSString *_timerIdentifier;
    double _timeInterval;
    CDUnknownBlockType _timerBlock;
    NSOperationQueue *_queue;
    NSObject<OS_dispatch_source> *_timerSource;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType timerBlock; // @synthesize timerBlock=_timerBlock;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
@property(readonly, nonatomic) NSString *timerIdentifier; // @synthesize timerIdentifier=_timerIdentifier;
- (void).cxx_destruct;
- (void)scheduleDispatchTimer;
- (void)executeBlock;
@property(readonly, nonatomic) double tolerance;
- (void)scheduleTimer;
- (void)dealloc;
- (id)initWithTimeInterval:(double)arg1 onQueue:(id)arg2 timerIdentifier:(id)arg3 block:(CDUnknownBlockType)arg4;

@end

@interface ANSActivityOperation : NSOperation
{
    ANSActivity *_activity;
}

+ (id)operationByStartingActivityName:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, nonatomic) ANSActivity *activity; // @synthesize activity=_activity;
- (void).cxx_destruct;
- (void)main;
- (void)startActivityWithName:(id)arg1 options:(unsigned long long)arg2;

@end

@interface ANSCompressLogOperation : NSOperation
{
    NSURL *_uncompressedLogURL;
    NSURL *_compressedLogURL;
}

@property(retain, nonatomic) NSURL *compressedLogURL; // @synthesize compressedLogURL=_compressedLogURL;
@property(retain, nonatomic) NSURL *uncompressedLogURL; // @synthesize uncompressedLogURL=_uncompressedLogURL;
- (void).cxx_destruct;
- (id)compressedURLForUncompressedURL:(id)arg1;
- (void)main;
- (id)initWithUncompressedLogURL:(id)arg1 compressedLogURL:(id)arg2;

@end

@interface ANSUploader : NSObject <NSURLSessionDelegate>
{
    NSURLSession *_session;
    id <ANSUploaderDelegate> _delegate;
    double _defaultUploadTimeout;
    double _lowPowerUploadTimeout;
    NSOperationQueue *_operationQueue;
}

@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) double lowPowerUploadTimeout; // @synthesize lowPowerUploadTimeout=_lowPowerUploadTimeout;
@property(nonatomic) double defaultUploadTimeout; // @synthesize defaultUploadTimeout=_defaultUploadTimeout;
@property(nonatomic) __weak id <ANSUploaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)handleTaskDescription:(id)arg1 completedWithError:(id)arg2;
- (void)handleTask:(id)arg1 completedWithError:(id)arg2;
- (void)restartTask:(id)arg1;
- (void)checkForExistingTaskMatchingDescription:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)checkSession:(id)arg1 forTasksMatchingDescription:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)taskArray:(id)arg1 hasTaskMatchingDescription:(id)arg2;
- (void)startNewUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3;
- (id)errorUserInfoWithFilePath:(id)arg1 uniqueName:(id)arg2;
- (id)errorWithCode:(long long)arg1 userInfo:(id)arg2;
- (void)startUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3;
- (id)session;
- (id)createBackgroundSessionConfiguration;
- (Class)urlSessionConfigurationClass;
- (Class)urlSessionClass;
- (void)attemptToReconnectBackgroundSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsBackgroundRequests;
- (_Bool)shouldUseBackgroundRequests;
@property(readonly, nonatomic) _Bool lowPowerMode;
- (_Bool)supportsPowerStateNotifications;
- (void)powerStageChanged:(id)arg1;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSLogger : NSObject
{
    _Bool _debugMode;
}

+ (id)sharedLogger;
@property(nonatomic) _Bool debugMode; // @synthesize debugMode=_debugMode;
- (void)internalLog:(id)arg1 args:(char *)arg2;
- (void)logWithLabel:(id)arg1 format:(id)arg2;
- (void)log:(id)arg1;

@end

@interface ANSApplication : NSObject
{
    NSDictionary *_infoPlistDict;
}

+ (id)hostApplication;
@property(readonly, nonatomic) NSDictionary *infoPlistDict; // @synthesize infoPlistDict=_infoPlistDict;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIApplication *appSharedInstance;
@property(readonly, nonatomic) _Bool isExtension;
@property(readonly, nonatomic) NSString *extensionPointIdentifier;
@property(readonly, nonatomic) NSDictionary *extensionDefinitionDictionary;
@property(readonly, nonatomic) NSString *shortVersionString;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, nonatomic) NSString *bundleIdentifier;
- (id)initWithInfoPlistDictionary:(id)arg1;

@end

@interface ANSCrashEvent : ANSEvent
{
    NSDate *_crashTimestamp;
    unsigned long long _crashState;
}

@property(nonatomic) unsigned long long crashState; // @synthesize crashState=_crashState;
@property(retain, nonatomic) NSDate *crashTimestamp; // @synthesize crashTimestamp=_crashTimestamp;
- (void).cxx_destruct;
- (id)payloadStringForCrashState:(unsigned long long)arg1;
- (id)dictionaryRepresentation;
- (id)timestamp;
- (id)name;
- (id)initWithTimestamp:(id)arg1 crashState:(unsigned long long)arg2;

@end

@interface ANSCustomEvent : ANSEvent
{
    NSString *_customEventName;
    ANSAttributeDictionary *_customAttributes;
}

@property(retain, nonatomic) ANSAttributeDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(readonly, nonatomic) NSString *customEventName; // @synthesize customEventName=_customEventName;
- (void).cxx_destruct;
- (id)description;
- (id)dictionaryRepresentation;
- (id)name;
- (id)initWithCustomEventName:(id)arg1 customAttributes:(id)arg2;

@end

@interface ANSActivity : NSObject
{
    id <NSObject> _processInfoToken;
    unsigned long long _options;
    NSString *_reason;
    unsigned long long _backgroundTaskIdentifier;
}

+ (_Bool)supportsBackgroundTasks;
+ (id)sharedAppInstance;
+ (unsigned long long)beginBackgroundTaskWithName:(id)arg1 expirationHandler:(CDUnknownBlockType)arg2;
+ (id)beginActivityIfAvailable:(id)arg1 options:(unsigned long long)arg2;
+ (void)performActivity:(id)arg1 options:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)beginActivity:(id)arg1 withOptions:(unsigned long long)arg2;
+ (id)beginActivity:(id)arg1 withOptions:(unsigned long long)arg2 expirationHandler:(CDUnknownBlockType)arg3;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(readonly, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(retain, nonatomic) id <NSObject> processInfoToken; // @synthesize processInfoToken=_processInfoToken;
- (void).cxx_destruct;
- (void)endAndInvalidateInternalActivity;
- (void)endAndInvalidateBackgroundTask;
- (void)end;
- (void)dealloc;
- (id)initWithProcessToken:(id)arg1 options:(unsigned long long)arg2 reason:(id)arg3 backgroundTaskIdentifier:(unsigned long long)arg4;

@end

@interface ANSAnswersController : NSObject <ANSUploaderDelegate>
{
    NSOperationQueue *_eventQueue;
    NSString *_rootEventDirectory;
    ANSMetadata *_metadata;
    ANSCrashMetadata *_previousExecutionMetadata;
    ANSUploader *_uploader;
    ANSNetworkRetryHandler *_networkRetryHandler;
    NSURL *_currentLogURL;
    ANSEventFilter *_eventFilter;
    ANSSettings *_settings;
    ANSTimer *_flushTimer;
}

+ (id)rootDirectory;
@property(readonly, nonatomic) ANSTimer *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(readonly, nonatomic) ANSSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) ANSEventFilter *eventFilter; // @synthesize eventFilter=_eventFilter;
@property(readonly, nonatomic) NSURL *currentLogURL; // @synthesize currentLogURL=_currentLogURL;
@property(readonly, nonatomic) ANSNetworkRetryHandler *networkRetryHandler; // @synthesize networkRetryHandler=_networkRetryHandler;
@property(readonly, nonatomic) ANSUploader *uploader; // @synthesize uploader=_uploader;
@property(readonly, nonatomic) ANSCrashMetadata *previousExecutionMetadata; // @synthesize previousExecutionMetadata=_previousExecutionMetadata;
@property(readonly, nonatomic) ANSMetadata *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) NSString *rootEventDirectory; // @synthesize rootEventDirectory=_rootEventDirectory;
@property(readonly, nonatomic) NSOperationQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
- (void).cxx_destruct;
- (void)uploader:(id)arg1 completedRequest:(id)arg2 withResponse:(id)arg3 uniqueName:(id)arg4 error:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)uploader:(id)arg1 session:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)uploader:(id)arg1 didFinishUploadWithUniqueName:(id)arg2 error:(id)arg3;
- (id)uploader:(id)arg1 filePathForUniqueName:(id)arg2;
- (id)multipartMimeURLWithBoundary:(id)arg1;
- (id)boundaryFromURL:(id)arg1;
- (void)uploadMultipartFiles:(id)arg1;
- (void)uploadAllMultipartFiles;
- (void)cleanupAndProcessExistingFiles;
- (id)uploadOperationForFileAtURL:(id)arg1 withBoundary:(id)arg2;
- (id)operationsForCompressedLog:(id)arg1;
- (id)operationsForUncompressedLog:(id)arg1;
- (void)rotateAndSubmitCurrentLog;
- (_Bool)shouldSubmitLogAtURL:(id)arg1;
- (void)enqueueEvent:(id)arg1;
- (void)logCrashEvent:(id)arg1;
- (_Bool)shouldLogEvent;
- (void)logEvent:(id)arg1;
- (id)replacePreviousExecutionMetadataWithCurrentMetadata:(id)arg1 inRootDirectory:(id)arg2;
- (void)removeAllLogs;
- (void)flushTimerFired;
- (void)setupFlushTimer;
- (void)initializeSettingsIfNeededWithFabricSettings:(id)arg1;
- (void)fabricSettingsDidBecomeAvailable:(id)arg1;
- (id)generateNewLogPath;
- (void)applicationLifecycleEvent:(id)arg1;
- (void)registerForApplicationLifecycleEvents;
- (id)uploaderWithQueue:(id)arg1 delegate:(id)arg2;
- (id)sharedFabricSDK;
- (id)crashMetadataPathForRootDirectory:(id)arg1;
- (id)eventDirectoryForRootDirectory:(id)arg1;
- (id)initWithBetaToken:(id)arg1 rootDirectory:(id)arg2;
- (id)initWithBetaToken:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSUploadOperation : NSOperation
{
    ANSUploader *_uploader;
    NSURL *_answersURL;
    NSString *_apiKey;
    NSURL *_multipartURL;
    NSString *_multipartMimeBoundary;
}

@property(readonly, nonatomic) NSString *multipartMimeBoundary; // @synthesize multipartMimeBoundary=_multipartMimeBoundary;
@property(readonly, nonatomic) NSURL *multipartURL; // @synthesize multipartURL=_multipartURL;
@property(readonly, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(readonly, nonatomic) NSURL *answersURL; // @synthesize answersURL=_answersURL;
@property(readonly, nonatomic) ANSUploader *uploader; // @synthesize uploader=_uploader;
- (void).cxx_destruct;
- (id)currentTimestampString;
- (void)main;
- (id)initWithUploader:(id)arg1 answersURL:(id)arg2 apiKey:(id)arg3 multipartURL:(id)arg4 multipartMimeBoundary:(id)arg5;

@end

@interface ANSEventFilter : NSObject
{
}

+ (int)javaHashCodeForString:(id)arg1;
- (_Bool)shouldDiscardEventWithInstallationID:(id)arg1 forSamplingFactor:(long long)arg2;
- (_Bool)samplingEnabledForEventType:(id)arg1;
- (_Bool)shouldDiscardEvent:(id)arg1 betaToken:(id)arg2 installationID:(id)arg3 withFactor:(long long)arg4;

@end

@interface NSMutableDictionary (MPInternalUtils)
- (void)mp_safeSetObject:(id)arg1 forKey:(id)arg2 withDefault:(id)arg3;
- (void)mp_safeSetObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSDate (RedditAdditions)
+ (id)red_formattedTimeFromReferenceTime:(double)arg1;
- (id)red_tinyTimeAgo;
- (id)red_timeAgo;
@end

@interface NSURL (MPAdditions)
- (_Bool)mp_isMoPubShareScheme;
- (int)mp_mopubHostCommand;
- (int)mp_MoPubShareHostCommand;
- (_Bool)mp_isMoPubScheme;
- (_Bool)mp_isSafeForLoadingWithoutUserAction;
- (_Bool)mp_hasTelephonePromptScheme;
- (_Bool)mp_hasTelephoneScheme;
- (id)mp_queryAsDictionary;
- (id)mp_queryParametersForKey:(id)arg1;
- (id)mp_queryParameterForKey:(id)arg1;
@end

@interface UIViewController (Utils)
+ (void)printAllScrollViewsInView:(id)arg1;
+ (void)printAllScrollViews;
+ (id)bestWebViewController;
+ (id)currentViewController;
+ (id)findBestViewController:(id)arg1;
- (void)presentShareViewForTextString:(id)arg1 urlString:(id)arg2 fromSource:(id)arg3;
- (void)presentShareViewForTextString:(id)arg1 urlString:(id)arg2 fromBarButtonItem:(id)arg3;
- (void)presentShareViewForTextString:(id)arg1 urlString:(id)arg2 inView:(id)arg3;
- (void)presentShareViewForUrlString:(id)arg1 inView:(id)arg2;
@end

@interface NSArray (SafeObject)
- (id)subarrayFromIndex:(unsigned long long)arg1;
- (id)safeObjectAtIndex:(unsigned long long)arg1;
@end

@interface UIWebView (MPAdditions)
- (void)disableJavaScriptDialogs;
- (void)mp_setScrollable:(_Bool)arg1;
@end

@interface UIButton (MPAdditions)
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) struct UIEdgeInsets mp_TouchAreaInsets;
@end

@interface NSJSONSerialization (MPAdditions)
+ (id)mp_JSONObjectWithData:(id)arg1 options:(unsigned long long)arg2 clearNullObjects:(_Bool)arg3 error:(id *)arg4;
@end

@interface NSMutableDictionary (RemovingNulls)
- (void)mp_removeNullsRecursively;
@end

@interface NSMutableArray (RemovingNulls)
- (void)mp_removeNullsRecursively;
@end

@interface NSFileManager (DirectoryAdditions)
- (id)createDirectoryIfNeeded:(id)arg1;
@end

@interface UIButton (_AFNetworking)
- (void)af_setBackgroundImageDownloadReceipt:(id)arg1 forState:(unsigned long long)arg2;
- (id)af_backgroundImageDownloadReceiptForState:(unsigned long long)arg1;
- (void)af_setImageDownloadReceipt:(id)arg1 forState:(unsigned long long)arg2;
- (id)af_imageDownloadReceiptForState:(unsigned long long)arg1;
@end

@interface UIButton (AFNetworking)
+ (void)setSharedImageDownloader:(id)arg1;
+ (id)sharedImageDownloader;
- (_Bool)isActiveBackgroundTaskURLEqualToURLRequest:(id)arg1 forState:(unsigned long long)arg2;
- (_Bool)isActiveTaskURLEqualToURLRequest:(id)arg1 forState:(unsigned long long)arg2;
- (void)cancelBackgroundImageDownloadTaskForState:(unsigned long long)arg1;
- (void)cancelImageDownloadTaskForState:(unsigned long long)arg1;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURLRequest:(id)arg2 placeholderImage:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURL:(id)arg2 placeholderImage:(id)arg3;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURL:(id)arg2;
- (void)setImageForState:(unsigned long long)arg1 withURLRequest:(id)arg2 placeholderImage:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)setImageForState:(unsigned long long)arg1 withURL:(id)arg2 placeholderImage:(id)arg3;
- (void)setImageForState:(unsigned long long)arg1 withURL:(id)arg2;
@end

@interface UIColor (Colors)
+ (id)randomColor;
- (id)hexValue;
@end

@interface UITextView (TextRangeAdditions)
- (struct _NSRange)rangeForUITextRange:(id)arg1;
@end

@interface NSNotificationCenter (MainThread)
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2;
@end

@interface UITableView (MPTableViewAdPlacer)
- (id)mp_dequeueReusableCellWithIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (void)mp_deselectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)mp_selectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3;
- (id)mp_indexPathsForSelectedRows;
- (id)mp_indexPathForSelectedRow;
- (void)mp_moveRowAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)mp_reloadRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_deleteRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_insertRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)mp_reloadSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_deleteSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_insertSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)mp_endUpdates;
- (void)mp_beginUpdates;
- (void)mp_scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (id)mp_indexPathsForVisibleRows;
- (id)mp_visibleCells;
- (id)mp_cellForRowAtIndexPath:(id)arg1;
- (id)mp_indexPathsForRowsInRect:(struct CGRect)arg1;
- (id)mp_indexPathForCell:(id)arg1;
- (id)mp_indexPathForRowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)mp_rectForRowAtIndexPath:(id)arg1;
- (void)mp_reloadData;
- (id)mp_dataSource;
- (void)mp_setDataSource:(id)arg1;
- (id)mp_delegate;
- (void)mp_setDelegate:(id)arg1;
- (id)mp_adPlacer;
- (void)mp_setAdPlacer:(id)arg1;
@end

@interface UIImage (SVG)
+ (id)imageWithSVGNamed:(id)arg1 targetSize:(struct CGSize)arg2 fillColor:(id)arg3 cache:(_Bool)arg4;
+ (id)imageWithSVGNamed:(id)arg1 targetSize:(struct CGSize)arg2 fillColor:(id)arg3;
@end

@interface NSHTTPURLResponse (MPAdditions)
- (unsigned long long)stringEncodingFromContentType:(id)arg1;
@end

@interface NSString (Utils)
- (_Bool)contains:(id)arg1;
@end

@interface UINavigationController (SafeViewControllerPush)
- (void)safePushViewController:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIImage (AFNetworkingSafeImageLoading)
+ (id)af_safeImageWithData:(id)arg1;
@end

@interface UIProgressView (AFNetworking)
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setProgressWithDownloadProgressOfTask:(id)arg1 animated:(_Bool)arg2;
- (void)setProgressWithUploadProgressOfTask:(id)arg1 animated:(_Bool)arg2;
- (void)af_setDownloadProgressAnimated:(_Bool)arg1;
- (_Bool)af_downloadProgressAnimated;
- (void)af_setUploadProgressAnimated:(_Bool)arg1;
- (_Bool)af_uploadProgressAnimated;
@end

@interface NSDictionary (SafeObject)
- (id)safeNumberForKey:(id)arg1;
- (id)dictionaryRemovingNonPropertyListObjects;
- (id)propertyCompliantObject:(id)arg1;
- (id)safeObjectForKey:(id)arg1;
@end

@interface UIRefreshControl (AFNetworking)
- (void)setRefreshingWithStateOfTask:(id)arg1;
- (id)af_notificationObserver;
@end

@interface UIImage (Colors)
+ (id)circularImageFromImage:(id)arg1 withFillColor:(id)arg2;
+ (id)imageFromColor:(id)arg1 andSize:(struct CGSize)arg2;
+ (id)imageFromColor:(id)arg1;
- (id)imageRenderedWithColor:(id)arg1;
- (id)circularImageWithFillColor:(id)arg1;
@end

@interface UIView (Helper)
- (id)mp_snapshot:(_Bool)arg1;
- (id)mp_snapshotView;
- (void)setMp_height:(double)arg1;
- (void)setMp_width:(double)arg1;
- (void)setX:(double)arg1 andY:(double)arg2;
- (void)setMp_y:(double)arg1;
- (void)setMp_x:(double)arg1;
- (double)mp_height;
- (double)mp_width;
- (double)mp_y;
- (double)mp_x;
@end

@interface UIImage (DrawCircle)
+ (id)imageWithImage:(id)arg1 scaledToWidth:(double)arg2;
+ (id)circularImageFromColor:(id)arg1 withRadius:(double)arg2;
@end

@interface UIControl (DynamicColor)
- (void)updateThemeProperty;
- (void)updateButtonThemeProperties;
- (void)associatePropertySetter:(SEL)arg1 withThemePropertyGetter:(SEL)arg2 forControlState:(unsigned long long)arg3;
- (void)removePropertySetter:(SEL)arg1 forControlState:(unsigned long long)arg2;
@property(readonly, nonatomic) NSMutableDictionary *buttonSelectorMappings;
@end

@interface NSMutableArray (Shuffle)
- (void)shuffle;
@end

@interface CALayer (Dynamic_Color)
- (void)updateThemeProperty;
- (void)associatePropertySetter:(SEL)arg1 withThemePropertyGetter:(SEL)arg2;
- (void)removePropertySetter:(SEL)arg1;
@property(readonly, nonatomic) NSMutableDictionary *selectorMappings; // @dynamic selectorMappings;
@end

@interface UIWebView (_AFNetworking)
@property(retain, nonatomic, setter=af_setURLSessionTask:) NSURLSessionDataTask *af_URLSessionTask;
@end

@interface UIWebView (AFNetworking)
- (void)loadRequest:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 progress:(id *)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)loadRequest:(id)arg1 progress:(id *)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)setResponseSerializer:(id)arg1;
- (id)responseSerializer;
@property(retain, nonatomic) AFHTTPSessionManager *sessionManager;
@end

@interface UIScrollView (KeyboardObservation)
- (_Bool)areWeBouncingAtBottomOfScrollView;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
@property(nonatomic) struct UIEdgeInsets originalContentInset;
- (void)setupKeyboardObservers;
- (void)removeKeyboardObservers;
@end

@interface UIColor (MPAdditions)
+ (id)mp_colorFromHexString:(id)arg1 alpha:(double)arg2;
@end

@interface NSString (GTMNSStringHTMLAdditions)
- (id)gtm_stringByUnescapingFromHTML;
- (id)gtm_stringByEscapingForAsciiHTML;
- (id)gtm_stringByEscapingForHTML;
- (id)gtm_stringByEscapingHTMLUsingTable:(CDStruct_6a59ab51 *)arg1 ofSize:(unsigned long long)arg2 escapingUnicode:(_Bool)arg3;
@end

@interface UICollectionView (MPCollectionViewAdPlacer)
- (void)mp_moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)mp_reloadItemsAtIndexPaths:(id)arg1;
- (void)mp_deleteItemsAtIndexPaths:(id)arg1;
- (void)mp_insertItemsAtIndexPaths:(id)arg1;
- (void)mp_moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)mp_reloadSections:(id)arg1;
- (void)mp_deleteSections:(id)arg1;
- (void)mp_insertSections:(id)arg1;
- (void)mp_scrollToItemAtIndexPath:(id)arg1 atScrollPosition:(unsigned long long)arg2 animated:(_Bool)arg3;
- (id)mp_indexPathsForVisibleItems;
- (id)mp_visibleCells;
- (id)mp_cellForItemAtIndexPath:(id)arg1;
- (id)mp_indexPathForCell:(id)arg1;
- (id)mp_indexPathForItemAtPoint:(struct CGPoint)arg1;
- (id)mp_layoutAttributesForItemAtIndexPath:(id)arg1;
- (void)mp_reloadData;
- (void)mp_deselectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)mp_selectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3;
- (id)mp_indexPathsForSelectedItems;
- (id)mp_dequeueReusableCellWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (id)mp_dataSource;
- (void)mp_setDataSource:(id)arg1;
- (id)mp_delegate;
- (void)mp_setDelegate:(id)arg1;
- (id)mp_adPlacer;
- (void)mp_setAdPlacer:(id)arg1;
@end

@interface NSString (SafeString)
- (id)queryStringURLEncode;
- (_Bool)firstCharacterIsAlpha;
- (id)safeStringByAppendingString:(id)arg1;
@end

@interface UIView (DynamicColor)
- (void)updateThemeProperty;
- (void)associatePropertySetter:(SEL)arg1 withThemePropertyGetter:(SEL)arg2;
- (void)removePropertySetter:(SEL)arg1;
@property(readonly, nonatomic) NSMutableDictionary *selectorMappings; // @dynamic selectorMappings;
@end

@interface UIImageView (_AFNetworking)
@property(retain, nonatomic, setter=af_setActiveImageDownloadReceipt:) AFImageDownloadReceipt *af_activeImageDownloadReceipt;
@end

@interface UIImageView (AFNetworking)
+ (void)setSharedImageDownloader:(id)arg1;
+ (id)sharedImageDownloader;
- (_Bool)isActiveTaskURLEqualToURLRequest:(id)arg1;
- (void)cancelImageDownloadTask;
- (void)setImageWithURLRequest:(id)arg1 placeholderImage:(id)arg2 downloadProgress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)setImageWithURL:(id)arg1 placeholderImage:(id)arg2;
- (void)setImageWithURL:(id)arg1;
@end

@interface UIApplication (PushNotifications)
- (void)registerRemotePushNotification;
- (void)registerRemotePushNotificationIfNeeded;
- (_Bool)shouldPromptRemotePushDialog;
- (void)resetPushNotifcationPromptCadance;
- (void)deactivePushNotificationToken;
- (void)sendPushNotificationTokenToServer;
@end

@interface NSString (MPAdditions)
- (id)mp_URLEncodedString;
@end

@interface UIDevice (MPAdditions)
- (id)mp_hardwareDeviceName;
@end

@interface UIApplication (MPAdditions)
- (_Bool)mp_doesOrientation:(long long)arg1 matchOrientationMask:(unsigned long long)arg2;
- (_Bool)mp_supportsOrientationMask:(unsigned long long)arg1;
- (void)mp_preIOS7setApplicationStatusBarHidden:(_Bool)arg1;
@end

@interface UIActivityIndicatorView (AFNetworking)
- (void)setAnimatingWithStateOfTask:(id)arg1;
- (id)af_notificationObserver;
@end

@interface NSTextAttachment (TextSizing)
+ (id)textAttachmentWithImage:(id)arg1 font:(id)arg2;
+ (id)textAttachmentWithName:(id)arg1 font:(id)arg2;
@end

@interface UIView (Frame)
- (void)red_setHeight:(double)arg1;
- (void)red_setWidth:(double)arg1;
- (void)red_setSize:(struct CGSize)arg1;
- (void)red_setOrigin:(struct CGPoint)arg1;
- (void)red_setFrame:(struct CGRect)arg1;
- (double)frameMaxY;
- (double)frameMaxX;
- (double)frameMinY;
- (double)frameMinX;
- (double)frameWidth;
- (double)frameHeight;
@end

@interface NSURL (isRedditURL)
- (_Bool)isRedditURL;
@end

@interface NSData (SRWebSocket)
- (id)stringBySHA1ThenBase64Encoding;
@end

@interface NSString (SRWebSocket)
- (id)stringBySHA1ThenBase64Encoding;
@end

@interface NSURLRequest (SRCertificateAdditions)
@property(readonly, retain, nonatomic) NSArray *SR_SSLPinnedCertificates;
@end

@interface NSMutableURLRequest (SRCertificateAdditions)
@property(retain, nonatomic) NSArray *SR_SSLPinnedCertificates;
@end

@interface NSURL (SRWebSocket)
- (id)SR_origin;
@end

@interface NSRunLoop (SRWebSocket)
+ (id)SR_networkRunLoop;
@end

@interface NSArray (TWTRViewConstraints)
- (id)namedViewsDictionary;
@end

